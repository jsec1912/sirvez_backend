{"version":3,"sources":["components/ContainerHeader/index.js","components/CardBox/index.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","app/routes/TaskManager/routes/AddNew/index.js"],"names":["getUrlString","path","sub","index","split","ContainerHeader","title","match","substr","subPath","className","tag","map","active","length","key","href","arr","charAt","toUpperCase","slice","getDisplayString","CardBox","heading","children","styleName","cardStyle","childrenStyle","headerOutside","headingStyle","defaultProps","propTypes","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","node","Breadcrumb","props","Tag","ListTag","label","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","React","createElement","_extends","bool","BreadcrumbItem","undefined","AddNew","task_id","location","state","id","useState","loader","setLoader","customer","setCustomer","site_name","setSiteName","project","setProject","room","setRoom","assign_to","setAssignTo","Date","due_by_date","handleDateChange","task","setTask","task_description","setTaskDes","task_img","setTaskImg","TaskImgUrl","setTaskImgUrl","priority","setPriority","customer_rows","setCustomerRows","sitename_rows","setSiteNameRows","project_rows","setProjectRows","assign_to_rows","setAssignToRows","room_rows","setRoomRows","History","useHistory","width","useSelector","settings","useEffect","$http","get","base_url","params","then","response","data","customer_site","company_id","site_id","project_id","room_id","description","autoComplete","select","value","onChange","event","target","SelectProps","helperText","margin","fullWidth","option","name","filter","project_name","room_number","htmlFor","multiple","input","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","item","fontWeight","indexOf","first_name","utils","DateFnsUtils","format","KeyboardButtonProps","multiline","rowsMax","content","type","accept","display","files","color","variant","onClick","e","document","getElementById","click","frmData","FormData","append","JSON","stringify","getFullYear","getMonth","getDate","post","status","push","pathname","NotificationManager","error","msg","catch","console","log","SaveTask","height"],"mappings":"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","file":"static/js/30.1ba81f46.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n    const arr = sub.split(\"-\");\r\n    if (arr.length > 1) {\r\n        return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n    } else {\r\n        return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n    }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n    if (index === 0) {\r\n        return '#/';\r\n    } else {\r\n        return '#/' + path.split(sub)[0] + sub;\r\n    }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n    const path = match.path.substr(1);\r\n    const subPath = path.split('/');\r\n    return (\r\n        <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n            <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n            <Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n                {subPath.map((sub, index) => {\r\n                        return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                               tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                               href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n                    }\r\n                )}\r\n            </Breadcrumb>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","import React from 'react';\r\n\r\nconst CardBox = ({heading, children, styleName, cardStyle, childrenStyle, headerOutside, headingStyle}) => {\r\n\r\n    return (\r\n        <div className={`${styleName}`}>\r\n            {headerOutside &&\r\n            <div className=\"jr-entry-header\">\r\n                <h3 className=\"entry-heading\">{heading}</h3>\r\n                {children.length > 1 && <div className=\"entry-description\">{children[0]}</div>}\r\n            </div>\r\n            }\r\n\r\n            <div className={`jr-card ${cardStyle}`}>\r\n                {!headerOutside &&\r\n                (heading &&\r\n                    <div className={`jr-card-header ${headingStyle}`}>\r\n                        <h3 className=\"card-heading\">{heading}</h3>\r\n                        {children.length > 1 && <div className=\"sub-heading\">{children[0]}</div>}\r\n                    </div>\r\n                )}\r\n                <div className={`jr-card-body ${childrenStyle}`}>\r\n                    {children.length > 1 ? children[1] : children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CardBox;\r\n\r\nCardBox.defaultProps = {\r\n    cardStyle: '',\r\n    headingStyle: '',\r\n    childrenStyle: '',\r\n    styleName: 'col-lg-6 col-sm-12'\r\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import React, {useState, useEffect} from 'react';\r\nimport ContainerHeader from 'components/ContainerHeader/index';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CardBox from 'components/CardBox/index';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport AttachFile from '@material-ui/icons/AttachFile';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {base_url, public_url, $http} from \"config\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst AddNew = (props) => {\r\n    const task_id = props.location.state ? props.location.state.id : null;\r\n    const [loader, setLoader] = useState(false);\r\n    const [customer, setCustomer] = useState(\"\");\r\n    const [site_name, setSiteName] = useState(\"\");\r\n    const [project, setProject] = useState(\"\");\r\n    const [room, setRoom] = useState(\"\");\r\n    const [assign_to, setAssignTo] = useState([]);\r\n    const [due_by_date, handleDateChange] = useState(new Date());\r\n    const [task, setTask] = useState(\"\");\r\n    const [task_description, setTaskDes] = useState(\"\");\r\n    const [task_img, setTaskImg] = useState(null);\r\n    const [TaskImgUrl, setTaskImgUrl] = useState(\"\");\r\n    const [priority, setPriority] = useState(0);\r\n    const [customer_rows, setCustomerRows] = useState([]);\r\n    const [sitename_rows, setSiteNameRows] = useState([]);\r\n    const [project_rows, setProjectRows] = useState([]);\r\n    const [assign_to_rows, setAssignToRows] = useState([]);\r\n    const [room_rows, setRoomRows] = useState([]);\r\n    const History = useHistory();\r\n    const priority_rows = ([\r\n        {id: 0, content: 'Low'},\r\n        {id: 1, content: 'High'}\r\n    ]);\r\n    const {width} = useSelector(({settings}) => settings);\r\n\r\n    useEffect(() => {\r\n        $http.get(base_url + \"task/getTaskInfo\", {params : {id: task_id}})\r\n        .then((response) => {\r\n            //console.log(\"task\", response.data);\r\n            setCustomerRows(response.data.customer);\r\n            setSiteNameRows(response.data.customer_site);\r\n            setProjectRows(response.data.project);\r\n            setRoomRows(response.data.room);\r\n            setAssignToRows(response.data.assign_to);\r\n            if (task_id > 0) {\r\n                setCustomer(response.data.task.company_id);\r\n                setSiteName(response.data.task.site_id);\r\n                setProject(response.data.task.project_id);\r\n                setRoom(response.data.task.room_id);\r\n                setAssignTo(response.data.task.assign_to);\r\n                setTask(response.data.task.task);\r\n                setTaskDes(response.data.task.description);\r\n                setPriority(response.data.task.priority);\r\n                handleDateChange(new Date(response.data.task.due_by_date));\r\n                setTaskImgUrl(response.data.task.task_img );\r\n\r\n            }\r\n            setLoader(true);\r\n        })\r\n    }, [task_id])    \r\n    \r\n\r\n    const SaveTask = () => {\r\n        const frmData = new FormData();\r\n        frmData.append('id', task_id);\r\n        frmData.append('company_id', customer);\r\n        frmData.append('site_id', site_name);\r\n        frmData.append('project_id', project);\r\n        frmData.append('room_id', room);\r\n        frmData.append('assign_to', JSON.stringify(assign_to));\r\n        frmData.append('task', task);\r\n        frmData.append('description', task_description);\r\n        frmData.append('task_img', task_img);\r\n        frmData.append('priority', priority);\r\n        frmData.append('due_by_date', \r\n            due_by_date.getFullYear()+\"-\"+\r\n            (due_by_date.getMonth()+1)+\"-\"+\r\n            due_by_date.getDate());\r\n\r\n        $http.post(base_url + \"task/updateTask\", frmData)\r\n        .then((response) => {\r\n            if (response.data.status === \"success\") {\r\n                // NotificationManager.success(response.data.msg, \"Success!\", 5000, () => {\r\n                // });\r\n                History.push({\r\n                    pathname: '/app/task-manager/my-tasks',\r\n                    state: {id: response.data.id}\r\n                })\r\n            } else if (response.data.status === \"error\") {\r\n                NotificationManager.error(response.data.msg, \"Error!\", 5000, () => {\r\n                });\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(\"error:\", error);\r\n        })\r\n    }\r\n   \r\n    \r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <ContainerHeader match={props.match} title={<IntlMessages id=\"sidebar.taskmanager.addnew\"/>}/>\r\n           { loader ? (\r\n                <div className=\"row\">\r\n                    <CardBox styleName=\"col-xl-12 col-lg-12 col-md-12 col-12\">\r\n                        <form className=\"row\" autoComplete=\"off\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <TextField\r\n                                    id=\"customer\"\r\n                                    select\r\n                                    label=\"Customer\"\r\n                                    value={customer}\r\n                                    onChange={(event)=>setCustomer(event.target.value)}\r\n                                    SelectProps={{}}\r\n                                    helperText=\"Please select Customer\"\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                >\r\n                                    {customer_rows.map(option => (\r\n                                        <MenuItem key={option.id} value={option.id}>\r\n                                            {option.name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <TextField\r\n                                    id=\"site_name\"\r\n                                    select\r\n                                    label=\"Site Name\"\r\n                                    value={site_name}\r\n                                    onChange={(event)=>setSiteName(event.target.value)}\r\n                                    SelectProps={{}}\r\n                                    helperText=\"Please select Site Name\"\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                >\r\n                                    {sitename_rows.filter(option => {\r\n                                        return option.company_id == customer\r\n                                    }).map(option => (\r\n                                        \r\n                                        <MenuItem key={option.id} value={option.id}>\r\n                                            {option.site_name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <TextField\r\n                                    id=\"project\"\r\n                                    select\r\n                                    label=\"Project\"\r\n                                    value={project}\r\n                                    onChange={(event)=>setProject(event.target.value)}\r\n                                    SelectProps={{}}\r\n                                    helperText=\"Please select Project\"\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                >\r\n                                    {project_rows.filter(option => {\r\n                                        return option.company_id == customer\r\n                                    }).map(option => (\r\n                                        <MenuItem key={option.id} value={option.id}>\r\n                                            {option.project_name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <TextField\r\n                                    id=\"room\"\r\n                                    select\r\n                                    label=\"Room\"\r\n                                    value={room}\r\n                                    onChange={(event)=>setRoom(event.target.value)}\r\n                                    SelectProps={{}}\r\n                                    helperText=\"Please select Room\"\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                >\r\n                                    {room_rows.filter(option => {\r\n                                        return option.project_id == project\r\n                                    }).map(option => (\r\n                                        <MenuItem key={option.id} value={option.id}>\r\n                                            {option.room_number}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12 d-flex align-items-center\">\r\n                            \r\n                                <FormControl className=\"w-100\">\r\n                                    <InputLabel htmlFor=\"name-multiple\">Assign To</InputLabel>\r\n                                    <Select\r\n                                    multiple\r\n                                    value={assign_to}\r\n                                    onChange={(event) => setAssignTo(event.target.value)}\r\n                                    input={<Input id=\"assign-to\"/>}\r\n                                    MenuProps={{\r\n                                        PaperProps: {\r\n                                        style: {\r\n                                            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                                            width: 200,\r\n                                        },\r\n                                        },\r\n                                    }}\r\n                                    >\r\n                                    {assign_to_rows.map(item => (\r\n                                        <MenuItem\r\n                                        key={item.id}\r\n                                        value={''+item.id}\r\n                                        style={{\r\n                                            fontWeight: assign_to.indexOf(assign_to_rows) !== -1 ? '500' : '400',\r\n                                        }}\r\n                                        >\r\n                                        {item.first_name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                            </div>\r\n                            <div className=\"col-md-3 col-6 d-flex align-items-center\">\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Due by Date\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        value={due_by_date}\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                        helperText=\"Please Enter Due by Date\"\r\n                                        />\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <TextField \r\n                                    id=\"task\"\r\n                                    label=\"Task\"\r\n                                    value={task}\r\n                                    onChange={(event) => setTask(event.target.value)}\r\n                                    margin=\"normal\"\r\n                                    helperText=\"Please Enter Task\"\r\n                                    fullWidth\r\n                                    />\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <TextField\r\n                                    id=\"multiline-flexible\"\r\n                                    label=\"Task Description\"\r\n                                    multiline\r\n                                    rowsMax=\"4\"\r\n                                    value={task_description}\r\n                                    onChange={(event) => setTaskDes(event.target.value)}\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <TextField\r\n                                    id=\"priority\"\r\n                                    select\r\n                                    label=\"Priority\"\r\n                                    value={priority}\r\n                                    onChange={(event)=>setPriority(event.target.value)}\r\n                                    SelectProps={{}}\r\n                                    helperText=\"Please select Priority\"\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                >\r\n                                    {priority_rows.map(option => (\r\n                                        <MenuItem key={option.id} value={option.id}>\r\n                                            {option.content}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12 d-flex align-items-center\">\r\n                                <input type=\"file\" id=\"upload_doc\" \r\n                                    accept=\"application/msword, application/vnd.ms-excel, \r\n                                    application/vnd.ms-powerpoint,text/plain, application/pdf\" \r\n                                    name=\"upload_doc\" style={{display: \"none\"}}\r\n                                    onChange={(event) => {\r\n                                        setTaskImg(event.target.files[0]);\r\n                                        setTaskImgUrl(event.target.files[0].name);\r\n                                    }}/>\r\n                                <Button className=\"attach-file jr-btn \" color = \"primary\"\r\n                                    variant=\"contained\" onClick={(e)=>{document.getElementById('upload_doc').click()}}>\r\n                                    <AttachFile/> Upload File\r\n                                </Button>\r\n                                <h2>{TaskImgUrl }</h2>\r\n                            </div>\r\n                            <div className=\"col-md-12 col-12 text-right\">\r\n                                <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" onClick={() => SaveTask()}>\r\n                                    Save\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </CardBox>\r\n                </div>\r\n            ) : (\r\n                <div className=\"loader-view\"\r\n                        style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            )}\r\n            <NotificationContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddNew;"],"sourceRoot":""}