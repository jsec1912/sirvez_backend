{"version":3,"sources":["components/ContainerHeader/index.js","../node_modules/@material-ui/icons/PlaylistAdd.js","../node_modules/@material-ui/core/esm/Fab/Fab.js","app/routes/Sites/routes/site/CardEditMenu.js","app/routes/Sites/routes/site/BuildingInfo.js"],"names":["getUrlString","path","sub","index","split","ContainerHeader","title","match","substr","subPath","className","tag","map","active","length","key","href","arr","charAt","toUpperCase","slice","getDisplayString","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Fab","React","props","ref","children","classes","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","extended","concat","capitalize","primary","secondary","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","boxSizing","minHeight","transition","transitions","create","duration","short","borderRadius","padding","minWidth","width","height","boxShadow","shadows","palette","getContrastText","grey","backgroundColor","A100","action","disabledBackground","textDecoration","display","alignItems","justifyContent","contrastText","main","dark","sizeSmall","sizeMedium","name","CardEditMenu","useState","menuState","setMenuState","undefined","anchorEl","setAnchorEl","selectedData","onSelectRow","menu_rows","options","content","id","handleRequestClose","onClick","event","currentTarget","open","onClose","MenuListProps","style","paddingTop","paddingBottom","option","columnData","align","disablePadding","numeric","BuildingInfo","building_id","location","state","site_id","floor_open","setFloorOpen","building_open","setBuildingOpen","order","setOrder","orderBy","setOrderBy","loader","setLoader","useSelector","settings","History","useHistory","page","setPage","rowsPerPage","setRowsPerPage","tabledata","setTabledata","departmentname_rows","setDepartmentNames","sitename_rows","setSiteNames","buildingname_rows","setBuildingNames","department_id","setDepartmentName","floor_id","setFloorId","floor_name","setFloorName","floor_status","setFloorStatus","floors","setFloors","floor_upload_img","setFloorUploadImg","floor_upload_img_url","setFloorUploadImgUrl","building","setBuilding","building_name","setBuildingName","building_address","setBuildingAddress","building_postcode","setbuildingPostcode","building_upload_img","setBuildingUploadImg","building_upload_img_url","setBuildingUploadImgUrl","useEffect","init_Data","$http","get","base_url","params","then","response","console","log","data","handleRequestSort","property","sort_order","sort","a","b","onSelectFloor","push","pathname","FloorModalOpen","post","NotificationManager","info","sites","departments","buildings","floor","status","upload_img","public_url","FloorModalClose","BuildingModalClose","alt","src","address","postcode","placeholder","onChange","target","filter","item","toLowerCase","includes","aria-label","column","placement","enterDelay","direction","n","hover","tabIndex","rooms_count","count","onChangePage","onChangeRowsPerPage","toggle","isOpen","fullwidth","type","accept","e","preventDefault","reader","FileReader","file","files","onloadend","result","readAsDataURL","changeBuildingUploadImg","document","getElementById","click","select","SelectProps","helperText","margin","fullWidth","department_name","frmData","FormData","append","success","msg","error","catch","changeFloorUploadImg","site_name"],"mappings":"mHAAA,sCAYMA,EAAe,SAACC,EAAMC,EAAKC,GAC7B,OAAc,IAAVA,EACO,KAEA,KAAOF,EAAKG,MAAMF,GAAK,GAAKA,GAuB5BG,IAnBS,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAChBL,EADkC,EAAXM,MACVN,KAAKO,OAAO,GACzBC,EAAUR,EAAKG,MAAM,KAC3B,OACI,yBAAKM,UAAU,2EACX,wBAAIA,UAAU,sBAAsBJ,GAEpC,kBAAC,IAAD,CAAYI,UAAU,OAAOC,IAAI,OAC5BF,EAAQG,KAAI,SAACV,EAAKC,GACX,OAAO,kBAAC,IAAD,CAAgBU,OAAQJ,EAAQK,SAAWX,EAAQ,EACnCQ,IAAKF,EAAQK,SAAWX,EAAQ,EAAI,OAAS,IAAKY,IAAKZ,EACvDa,KAAMhB,EAAaC,EAAMC,EAAKC,IA5BpD,SAACD,GACtB,IAAMe,EAAMf,EAAIE,MAAM,KACtB,OAAIa,EAAIH,OAAS,EACNG,EAAI,GAAGC,OAAO,GAAGC,cAAgBF,EAAI,GAAGG,MAAM,GAAK,IAAMH,EAAI,GAAGC,OAAO,GAAGC,cAAgBF,EAAI,GAAGG,MAAM,GAEvGlB,EAAIgB,OAAO,GAAGC,cAAgBjB,EAAIkB,MAAM,GAuB+BC,CAAiBnB,W,iCC7BvG,IAAIoB,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,sFACD,eAEJN,EAAQE,QAAUE,G,iCCjBlB,+DAoIIG,EAAmBC,cAAiB,SAAaC,EAAOC,GAC1D,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChB5B,EAAYyB,EAAMzB,UAClB6B,EAAeJ,EAAMK,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAmBN,EAAMO,UACzBA,OAAiC,IAArBD,EAA8B,SAAWA,EACrDE,EAAkBR,EAAMS,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAwBV,EAAMW,mBAC9BA,OAA+C,IAA1BD,GAA2CA,EAChEE,EAAwBZ,EAAMY,sBAC9BC,EAAcb,EAAMc,KACpBA,OAAuB,IAAhBD,EAAyB,QAAUA,EAC1CE,EAAiBf,EAAMgB,QACvBA,OAA6B,IAAnBD,EAA4B,QAAUA,EAChDE,EAAQC,YAAyBlB,EAAO,CAAC,WAAY,UAAW,YAAa,QAAS,YAAa,WAAY,qBAAsB,wBAAyB,OAAQ,YAE1K,OAAoBD,gBAAoBoB,IAAYC,YAAS,CAC3D7C,UAAW8C,YAAKlB,EAAQmB,KAAM/C,EAAuB,UAAZyC,GAAuBb,EAAQoB,SAAmB,UAATT,GAAoBX,EAAQ,OAAOqB,OAAOC,YAAWX,KAASL,GAAYN,EAAQM,SAAU,CAC5K,QAAWN,EAAQuB,QACnB,UAAavB,EAAQwB,UACrB,QAAWxB,EAAQyB,cACnBvB,IACFE,UAAWA,EACXE,SAAUA,EACVoB,aAAclB,EACdC,sBAAuBS,YAAKlB,EAAQ2B,aAAclB,GAClDX,IAAKA,GACJgB,GAAqBlB,gBAAoB,OAAQ,CAClDxB,UAAW4B,EAAQ4B,OAClB7B,OA4EU8B,iBAxOK,SAAgBC,GAClC,MAAO,CAELX,KAAMF,YAAS,GAAIa,EAAMC,WAAWC,OAAQ,CAC1CC,UAAW,aACXC,UAAW,GACXC,WAAYL,EAAMM,YAAYC,OAAO,CAAC,mBAAoB,aAAc,UAAW,CACjFC,SAAUR,EAAMM,YAAYE,SAASC,QAEvCC,aAAc,MACdC,QAAS,EACTC,SAAU,EACVC,MAAO,GACPC,OAAQ,GACRC,UAAWf,EAAMgB,QAAQ,GACzB,WAAY,CACVD,UAAWf,EAAMgB,QAAQ,KAE3B5C,MAAO4B,EAAMiB,QAAQC,gBAAgBlB,EAAMiB,QAAQE,KAAK,MACxDC,gBAAiBpB,EAAMiB,QAAQE,KAAK,KACpC,UAAW,CACTC,gBAAiBpB,EAAMiB,QAAQE,KAAKE,KAEpC,uBAAwB,CACtBD,gBAAiBpB,EAAMiB,QAAQE,KAAK,MAEtC,aAAc,CACZC,gBAAiBpB,EAAMiB,QAAQK,OAAOC,oBAExCC,eAAgB,QAElB,iBAAkB,CAChBT,UAAWf,EAAMgB,QAAQ,IAE3B,aAAc,CACZ5C,MAAO4B,EAAMiB,QAAQK,OAAO9C,SAC5BuC,UAAWf,EAAMgB,QAAQ,GACzBI,gBAAiBpB,EAAMiB,QAAQK,OAAOC,sBAK1CzB,MAAO,CACLe,MAAO,OAEPY,QAAS,UACTC,WAAY,UACZC,eAAgB,WAIlBlC,QAAS,CACPrB,MAAO4B,EAAMiB,QAAQxB,QAAQmC,aAC7BR,gBAAiBpB,EAAMiB,QAAQxB,QAAQoC,KACvC,UAAW,CACTT,gBAAiBpB,EAAMiB,QAAQxB,QAAQqC,KAEvC,uBAAwB,CACtBV,gBAAiBpB,EAAMiB,QAAQxB,QAAQoC,QAM7CnC,UAAW,CACTtB,MAAO4B,EAAMiB,QAAQvB,UAAUkC,aAC/BR,gBAAiBpB,EAAMiB,QAAQvB,UAAUmC,KACzC,UAAW,CACTT,gBAAiBpB,EAAMiB,QAAQvB,UAAUoC,KAEzC,uBAAwB,CACtBV,gBAAiBpB,EAAMiB,QAAQvB,UAAUmC,QAM/CvC,SAAU,CACRoB,aAAc,GACdC,QAAS,SACTE,MAAO,OACPT,UAAW,OACXQ,SAAU,GACVE,OAAQ,GACR,cAAe,CACbD,MAAO,OACPF,QAAS,QACTD,aAAc,GACdE,SAAU,GACVE,OAAQ,IAEV,eAAgB,CACdD,MAAO,OACPF,QAAS,SACTD,aAAc,GACdE,SAAU,GACVE,OAAQ,KAKZjB,aAAc,GAGdrB,SAAU,GAGVmB,aAAc,CACZvB,MAAO,WAIT2D,UAAW,CACTlB,MAAO,GACPC,OAAQ,IAIVkB,WAAY,CACVnB,MAAO,GACPC,OAAQ,OAgHoB,CAChCmB,KAAM,UADOlC,CAEZlC,I,wFCvLYqE,IArDM,SAACnE,GAAW,IAAD,EAEMoE,oBAAS,GAFf,mBAErBC,EAFqB,KAEVC,EAFU,OAGIF,wBAASG,GAHb,mBAGrBC,EAHqB,KAGXC,EAHW,KAIrBC,EAAwC1E,EAAxC0E,aAAcC,EAA0B3E,EAA1B2E,YAAaC,EAAa5E,EAAb4E,UAC5BC,EAAUD,GAAyB,CACrC,CAACE,QAAS,OAAQC,GAAI,GACtB,CAACD,QAAS,SAAUC,GAAI,GACxB,CAACD,QAAS,SAAUC,GAAI,IAQtBC,EAAqB,WACzBV,GAAa,IAGf,OACI,6BACI,kBAAC,IAAD,CAAYW,QAXO,SAAAC,GACzBZ,GAAa,GACbG,EAAYS,EAAMC,iBAUZ,uBAAG5G,UAAU,yBAEb,kBAAC,IAAD,CACIiG,SAAUA,EACVY,KAAMf,EACNgB,QAASL,EACTpG,IAAK8F,EAAaK,GAClBO,cAAe,CACXC,MAAO,CACHzC,MAAO,IACP0C,WAAY,EACZC,cAAe,KAItBZ,EAAQpG,KAAI,SAAAiH,GAAM,OACf,kBAAC,IAAD,CAAU9G,IAAK8F,EAAe,IAAMgB,EAAOZ,QACvCG,QAAS,WACLD,IACAL,EAAYD,EAAcgB,EAAOX,MAEpCW,EAAOZ,gB,6VClB1Ba,EAAa,CACjB,CAACZ,GAAI,KAAMa,OAAO,EAAOC,gBAAgB,EAAM9D,MAAO,MACtD,CAACgD,GAAI,aAAca,OAAO,EAAMC,gBAAgB,EAAO9D,MAAO,SAC9D,CAACgD,GAAI,cAAea,OAAO,EAAMC,gBAAgB,EAAO9D,MAAO,SAC/D,CAACgD,GAAI,SAAUa,OAAO,EAAMC,gBAAgB,EAAO9D,MAAO,UAC1D,CAACgD,GAAI,UAAWa,OAAO,EAAMC,gBAAgB,EAAOC,QAAS,QAAS/D,MAAO,YAgnBhEgE,UA9mBM,SAAC/F,GACpB,IAAMgG,EAAchG,EAAMiG,SAASC,MAAQlG,EAAMiG,SAASC,MAAMnB,GAAK,KAC/DoB,EAAUnG,EAAMiG,SAASC,MAAQlG,EAAMiG,SAASC,MAAMC,QAAU,KAFxC,EAGK/B,oBAAS,GAHd,mBAGvBgC,EAHuB,KAGXC,EAHW,OAIWjC,oBAAS,GAJpB,mBAIvBkC,EAJuB,KAIRC,EAJQ,OAKJnC,mBAAS,OALL,mBAKvBoC,EALuB,KAKhBC,EALgB,OAMArC,mBAAS,MANT,mBAMvBsC,EANuB,KAMdC,EANc,OAOFvC,oBAAS,GAPP,oBAOvBwC,GAPuB,MAOfC,GAPe,MAQvB/D,GAASgE,aAAY,qBAAEC,YAAvBjE,MACDkE,GAAUC,cATc,GAWN7C,mBAAS,GAXH,qBAWvB8C,GAXuB,MAWjBC,GAXiB,SAYQ/C,mBAAS,IAZjB,qBAYvBgD,GAZuB,MAYVC,GAZU,SAaIjD,mBAAS,IAbb,qBAavBkD,GAbuB,MAaZC,GAbY,SAeoBnD,mBAAS,IAf7B,qBAevBoD,GAfuB,MAeFC,GAfE,SAgBQrD,mBAAS,IAhBjB,qBAgBvBsD,GAhBuB,MAgBRC,GAhBQ,SAiBgBvD,mBAAS,IAjBzB,qBAiBvBwD,GAjBuB,MAiBJC,GAjBI,SAkBazD,mBAAS,MAlBtB,qBAkBvB0D,GAlBuB,MAkBRC,GAlBQ,SAmBC3D,mBAAS,IAnBV,qBAmBvB4D,GAnBuB,MAmBbC,GAnBa,SAoBK7D,mBAAS,IApBd,qBAoBvB8D,GApBuB,MAoBXC,GApBW,SAqBS/D,mBAAS,IArBlB,qBAqBvBgE,GArBuB,MAqBTC,GArBS,SAsBHjE,mBAAS,IAtBN,qBAsBvBkE,GAtBuB,MAsBhBC,GAtBgB,SAuBgBnE,mBAAS,MAvBzB,qBAuBvBoE,GAvBuB,MAuBLC,GAvBK,SAwBuBrE,mBAAS,uCAxBhC,qBAwBvBsE,GAxBuB,MAwBDC,GAxBC,SA6BCvE,mBAAS,IA7BV,qBA6BvBwE,GA7BuB,MA6BdC,GA7Bc,SA+BWzE,mBAAS,IA/BpB,qBA+BvB0E,GA/BuB,MA+BRC,GA/BQ,SAgCiB3E,mBAAS,IAhC1B,qBAgCvB4E,GAhCuB,MAgCLC,GAhCK,SAiCmB7E,mBAAS,IAjC5B,qBAiCvB8E,GAjCuB,MAiCJC,GAjCI,SAkCsB/E,mBAAS,MAlC/B,qBAkCvBgF,GAlCuB,MAkCFC,GAlCE,SAmC6BjF,mBAAS,uCAnCtC,qBAmCvBkF,GAnCuB,MAmCEC,GAnCF,MAqC9BC,qBAAU,WACRC,OACC,IAEH,IAAMA,GAAY,WAChBC,IAAMC,IAAIC,IAAW,wBAAyB,CAACC,OAAS,CAAC9E,GAAIiB,KAC5D8D,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACrB3C,GAAawC,EAASG,KAAK5B,QAC3BC,GAAUwB,EAASG,KAAK5B,QACxBO,GAAYkB,EAASG,KAAKtB,UAC1B/B,IAAU,OAQRsD,GAAoB,SAACjF,EAAOkF,GAChC,IAAIC,EAMW,UAJbA,EADE3D,IAAY0D,GAAsB,QAAV5D,EACb,OAEA,OAGX8B,GAAOgC,MAAK,SAACC,EAAGC,GAAJ,OAAWA,EAAEJ,GAAYG,EAAEH,IAAa,EAAI,KACxD9B,GAAOgC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEH,GAAYI,EAAEJ,IAAa,EAAI,KAG5D3D,EAAS4D,GACT1D,EAAWyD,IAiBPK,GAAgB,SAACP,EAAMlM,GACb,IAAVA,EACFgJ,GAAQ0D,KAAK,CACXC,SAAU,wBACVzE,MAAO,CAACnB,GAAImF,EAAK/D,QAAQA,EAAQH,YAAYA,KAE5B,IAAVhI,EACT4M,GAAeV,GACI,IAAVlM,GACT0L,IAAMmB,KAAKjB,IAAW,oBAAqB,CAAC7E,GAAImF,IAC/CJ,MAAK,SAACC,GACLN,KACAqB,sBAAoBC,KAAK,kCAsBzBH,GAAiB,SAACV,GACtBjC,GAAWiC,GACXR,IAAMC,IAAIC,IAAW,qBAAsB,CAACC,OAAS,CAAC9E,GAAImF,EAAK/D,QAAQA,EAAQH,YAAYA,KAC1F8D,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACnBvC,GAAaoC,EAASG,KAAKc,OAC3BvD,GAAmBsC,EAASG,KAAKe,aACjCpD,GAAiBkC,EAASG,KAAKgB,WAC/BnD,GAAkBgC,EAASG,KAAKpC,eAC5BoC,EAAO,IACT/B,GAAa4B,EAASG,KAAKiB,MAAMjD,YACjCG,GAAe0B,EAASG,KAAKiB,MAAMC,QACnCzC,GAAqBoB,EAASG,KAAKiB,MAAME,WACtCC,IAAa,cAAgBvB,EAASG,KAAKiB,MAAME,WAClD,wCAGJhF,GAAa,OAGbkF,GAAkB,WACtBlF,GAAa,IA6CTmF,GAAqB,WACzBjF,GAAgB,IAoDlB,OACE,yBAAKhI,UAAU,eACb,kBAAC,IAAD,CAAiBH,MAAO4B,EAAM5B,MAAOD,MAAO,kBAAC,IAAD,CAAc4G,GAAG,iCAC3D6B,GACE,yBAAKrI,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,8CACX,kBAAC,IAAD,CAAQA,UAAU,WAAWkN,IAAI,aAAaC,IAAKJ,IAAa,cAAgB1C,GAASyC,cAE7F,yBAAK9M,UAAU,8CACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yDACX,4BAAI,mDAER,yBAAKA,UAAU,wDACX,4BAAKqK,GAASE,gBAElB,yBAAKvK,UAAU,yDACX,4BAAI,6CAER,yBAAKA,UAAU,wDACX,4BAAKqK,GAAS+C,YAK1B,wBAAIpN,UAAU,iFACV,4BAAI,kBAAC,IAAD,CAAQ8B,MAAM,UAAU4E,QAAS,kBAnGtCiF,EAmG8DlE,OAlGvF0D,IAAMC,IAAIC,IAAW,2BAA4B,CAACC,OAAS,CAAC9E,GAAImF,EAAK/D,QAAQA,KAC5E2D,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACnBzC,GAAmBsC,EAASG,KAAKe,aAC7Bf,EAAO,IACTnC,GAAkBgC,EAASG,KAAKtB,SAASd,eACzCiB,GAAgBgB,EAASG,KAAKtB,SAASE,eACvCG,GAAmBc,EAASG,KAAKtB,SAAS+C,SAC1CxC,GAAoBY,EAASG,KAAKtB,SAASgD,UAC3CrC,GAAwBQ,EAASG,KAAKtB,SAASyC,WAC5CC,IAAa,cAAgBvB,EAASG,KAAKtB,SAASyC,WACrD,wCAEJ9E,GAAgB,MAdI,IAAC2D,IAmG4E,kBAAC,IAAD,CAAcnF,GAAG,oBAC5F,4BAAI,kBAAC,IAAD,CAAQ1E,MAAM,YAAY4E,QAAS,WA/J5C,IAACiF,EACtBR,IAAMmB,KAAKjB,IAAW,0BAA2B,CAACC,OAAS,CAAC9E,GAAImF,KAC/DJ,MAAK,SAACC,GACJ/C,GAAQ0D,KAAK,CACZC,SAAU,uBACVzE,MAAO,UA0J8E,kBAAC,IAAD,CAAcnB,GAAG,wBAKhG,yBAAKxG,UAAU,UACX,yBAAKA,UAAU,WACb,6BACE,kBAAC,IAAD,CAASA,UAAU,gBACjB,yBAAKA,UAAU,SACb,kBAAC,IAAD,CAAYyC,QAAQ,MAApB,WAEF,yBAAKzC,UAAU,UACX,yBAAKA,UAAU,4CACX,kBAAC,IAAD,CAAWsN,YAAY,aACrBC,SAAU,SAAC5G,GAAD,OArLrBgF,EAqL4ChF,EAAM6G,OAAOvM,WApL5E+I,GACEjB,GAAU0E,QAAO,SAAUC,GACzB,OAAQA,EAAK/D,WAAWgE,cAAcC,SAASjC,EAAKgC,mBAHtC,IAAChC,OAyLC,yBAAK3L,UAAU,WACb,kBAAC,IAAD,CAASJ,MAAM,aACb,kBAAC,IAAD,CAAYiO,aAAW,YAAYnH,QAAS,kBAAM2F,GAAe,QAC7D,kBAAC,IAAD,UAMRhE,GACE,yBAAKrI,UAAU,aACb,yBAAKA,UAAU,6BACb,kBAAC,IAAD,CAAOA,UAAU,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGoH,EAAWlH,KAAI,SAAA4N,GACd,OACE,kBAAC,IAAD,CACEzN,IAAKyN,EAAOtH,GACZa,MAAOyG,EAAOvG,SAEd,kBAAC,IAAD,CACE3H,MAAM,OACNmO,UAAWD,EAAOvG,QAAU,aAAe,eAC3CyG,WAAY,KAEV,kBAAC,IAAD,CACA7N,OAAQgI,IAAY2F,EAAOtH,GAC3ByH,UAAWhG,EACXvB,SAzQlBmF,EAyQ6CiC,EAAOtH,GAzQxC,SAAAG,GACpCiF,GAAkBjF,EAAOkF,MA0QkBiC,EAAOtK,SA3Q1B,IAAAqI,OAmRI,kBAAC,IAAD,KACG9B,GAAOrJ,MAAMiI,GAAOE,GAAaF,GAAOE,GAAcA,IAAa3I,KAAI,SAACgO,GAAD,OACpE,kBAAC,IAAD,CACEC,OAAK,EACL9N,IAAK6N,EAAE1H,GACPE,QAAS,SAAAC,GAA4BuH,EAAE1H,IAEvC4H,UAAW,GAEX,kBAAC,IAAD,KAAYF,EAAE1H,IACd,kBAAC,IAAD,KACE,yBAAKxG,UAAU,mDACX,kBAAC,IAAD,CACIkN,IAAKgB,EAAEvE,WACPwD,IAAKJ,IAAa,cAAgBmB,EAAEpB,WACpC9M,UAAU,gBAEd,yBAAKA,UAAU,eACX,wBAAIA,UAAU,aAAakO,EAAEvE,eAIvC,kBAAC,IAAD,KAAYuE,EAAEG,aACd,kBAAC,IAAD,KAAYH,EAAErB,OAAS,MAAM,MAC7B,kBAAC,IAAD,CAAW7M,UAAU,cACnB,kBAAC,IAAD,CAAcK,IAAK6N,EAAE1H,GAAIL,aAAc+H,EAAE1H,GACvCJ,YAAa8F,WAKzB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEoC,MAAOvE,GAAO3J,OACdyI,YAAaA,GACbF,KAAMA,GACN4F,aA7RX,SAAC5H,EAAOgC,GAC/BC,GAAQD,IA6R0B6F,oBA1RJ,SAAA7H,GAC9BmC,GAAenC,EAAM6G,OAAOvM,cA+RJ,kBAAC,wBAAD,OAGF,yBAAKjB,UAAU,cACPgH,MAAO,CAACxC,OAAQD,IAAS,KAAO,sBAAwB,wBAC5D,kBAAC,IAAD,OAIR,kBAAC,IAAD,CAAOlE,IAAI,gBAAgBL,UAAU,YAAYyO,OAAQxB,GAAoByB,OAAQ3G,EAAe4G,UAAU,QAC1G,kBAAC,IAAD,KAAclH,EAAc,kBAAkB,eAC1C,kBAAC,IAAD,CAAYzH,UAAU,YACV0G,QAASuG,IACjB,kBAAC,IAAD,QAGR,yBAAKjN,UAAU,qBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,yBAAyBkN,IAAI,WAAWC,IAAKpC,MAEhE,2BAAO6D,KAAK,OAAOpI,GAAG,aAAaqI,OAAO,UACtClJ,KAAK,aAAaqB,MAAO,CAAC7B,QAAS,QACnCoI,SAAU,SAAC5G,GAAD,OApLtB,SAACmI,GAC/BA,EAAEC,iBAEF,IAAIC,EAAS,IAAIC,WACbC,EAAOJ,EAAEtB,OAAO2B,MAAM,GAC1BH,EAAOI,UAAY,WACftE,GAAqBoE,GACrBlE,GAAwBgE,EAAOK,SAEnCL,EAAOM,cAAcJ,GA2K0CK,CAAwB5I,MAEjD,yBAAK3G,UAAU,6BACX,kBAAC,IAAD,CAAKA,UAAU,wDACX0G,QAAS,SAACoI,GAAKU,SAASC,eAAe,cAAcC,UACrD,uBAAG1P,UAAU,0CAK7B,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,mBACf,kBAAC,IAAD,CACIwG,GAAG,cACHmJ,QAAM,EACNnM,MAAM,cACNvC,MAAOsI,GACPgE,SAAU,SAAC5G,GAAD,OAAS6C,GAAkB7C,EAAM6G,OAAOvM,QAClD2O,YAAa,GACbC,WAAW,2BACXC,OAAO,SACPC,WAAS,GAER9G,GAAoB/I,KAAI,SAAAiH,GAAM,OAC3B,kBAAC,IAAD,CAAU9G,IAAK8G,EAAOX,GAAIvF,MAAOkG,EAAOX,IACnCW,EAAO6I,sBAKxB,yBAAKhQ,UAAU,mBACX,kBAAC,IAAD,CACIwG,GAAG,gBACHhD,MAAM,gBACNvC,MAAOsJ,GACPgD,SAAU,SAAC5G,GAAD,OAAS6D,GAAgB7D,EAAM6G,OAAOvM,QAChD6O,OAAO,SACPD,WAAW,6BACXE,WAAS,KAGjB,yBAAK/P,UAAU,mBACX,kBAAC,IAAD,CACIwG,GAAG,UACHhD,MAAM,UACNvC,MAAOwJ,GACP8C,SAAU,SAAC5G,GAAD,OAAS+D,GAAmB/D,EAAM6G,OAAOvM,QACnD6O,OAAO,SACPD,WAAW,uBACXE,WAAS,KAGjB,yBAAK/P,UAAU,mBACX,kBAAC,IAAD,CACIwG,GAAG,WACHhD,MAAM,WACNvC,MAAO0J,GACP4C,SAAU,SAAC5G,GAAD,OAASiE,GAAoBjE,EAAM6G,OAAOvM,QACpD6O,OAAO,SACPD,WAAW,wBACXE,WAAS,SAUzB,yBAAK/P,UAAU,oCACX,kBAAC,IAAD,CAAQ0G,QAASuG,GAAoBnL,MAAM,aAA3C,UAGA,kBAAC,IAAD,CAAQ4E,QA1RV,WACxBuG,KACE,IAAMgD,EAAU,IAAIC,SACpBD,EAAQE,OAAO,KAAM1I,GACrBwI,EAAQE,OAAO,UAAWvI,GAC1BqI,EAAQE,OAAO,gBAAiB5G,IAChC0G,EAAQE,OAAO,gBAAiB5F,IAChC0F,EAAQE,OAAO,UAAW1F,IAC1BwF,EAAQE,OAAO,WAAYxF,IAC3BsF,EAAQE,OAAO,aAActF,IAG7BM,IAAMmB,KAAKjB,IAAW,0BAA2B4E,GAChD1E,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACU,YAAzBH,EAASG,KAAKkB,QACdN,sBAAoB6D,QAAQ5E,EAASG,KAAK0E,IAAK,WAAY,KAAM,eAEjEnF,MACgC,UAAzBM,EAASG,KAAKkB,QACrBN,sBAAoB+D,MAAM9E,EAASG,KAAK0E,IAAK,SAAU,KAAM,kBAGlEE,OAAM,SAACD,GACN7E,QAAQC,IAAI,SAAU4E,OAkQkCxO,MAAM,WAA1C,UAKR,kBAAC,IAAD,CAAOzB,IAAI,aAAaL,UAAU,YAAYyO,OAAQzB,GAAiB0B,OAAQ7G,GAC7E,kBAAC,IAAD,KAAc4B,GAAW,eAAe,YACpC,kBAAC,IAAD,CAAYzJ,UAAU,YACV0G,QAASsG,IACjB,kBAAC,IAAD,QAGR,yBAAKhN,UAAU,qBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qCACT,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,yBAAyBkN,IAAI,WAAWC,IAAKhD,MAEhE,2BAAOyE,KAAK,OAAOpI,GAAG,aAAaqI,OAAO,UACtClJ,KAAK,aAAaqB,MAAO,CAAC7B,QAAS,QACnCoI,SAAU,SAAC5G,GAAD,OAzQzB,SAACmI,GAC5BA,EAAEC,iBAEF,IAAIC,EAAS,IAAIC,WACbC,EAAOJ,EAAEtB,OAAO2B,MAAM,GAC1BH,EAAOI,UAAY,WACflF,GAAkBgF,GAClB9E,GAAqB4E,EAAOK,SAEhCL,EAAOM,cAAcJ,GAgQ0CsB,CAAqB7J,MAE9C,yBAAK3G,UAAU,6BACX,kBAAC,IAAD,CAAKA,UAAU,wDACX0G,QAAS,SAACoI,GAAKU,SAASC,eAAe,cAAcC,UACrD,uBAAG1P,UAAU,0CAK/B,yBAAKA,UAAU,qCACf,yBAAKA,UAAU,OACf,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CACIwG,GAAG,WACHmJ,QAAM,EACNnM,MAAM,YACNvC,MAAO2G,EACPgI,YAAa,GACbC,WAAW,0BACXC,OAAO,SACPC,WAAS,EACT7N,UAAQ,GAEPiH,GAAcjJ,KAAI,SAAAiH,GAAM,OACrB,kBAAC,IAAD,CAAU9G,IAAK8G,EAAOX,GAAIvF,MAAOkG,EAAOX,IACnCW,EAAOsJ,gBAKxB,yBAAKzQ,UAAU,mBACX,kBAAC,IAAD,CACIwG,GAAG,iBACHmJ,QAAM,EACNnM,MAAM,kBACNvC,MAAOsI,GACPgE,SAAU,SAAC5G,GAAD,OAAS6C,GAAkB7C,EAAM6G,OAAOvM,QAClD2O,YAAa,GACbC,WAAW,gCACXC,OAAO,SACPC,WAAS,EACT7N,UAAQ,GAEP+G,GAAoB/I,KAAI,SAAAiH,GAAM,OAC3B,kBAAC,IAAD,CAAU9G,IAAK8G,EAAOX,GAAIvF,MAAOkG,EAAOX,IACnCW,EAAO6I,sBAKxB,yBAAKhQ,UAAU,mBACX,kBAAC,IAAD,CACIwG,GAAG,eACHmJ,QAAM,EACNnM,MAAM,gBACNvC,MAAOwG,EACP8F,SAAU,SAAC5G,GAAD,OAAS6D,GAAgB7D,EAAM6G,OAAOvM,QAChD2O,YAAa,GACbC,WAAW,8BACXC,OAAO,SACPC,WAAS,EACT7N,UAAQ,GAEPmH,GAAkBnJ,KAAI,SAAAiH,GAAM,OACzB,kBAAC,IAAD,CAAU9G,IAAK8G,EAAOX,GAAIvF,MAAOkG,EAAOX,IACnCW,EAAOoD,oBAKxB,yBAAKvK,UAAU,mBACX,kBAAC,IAAD,CACIwG,GAAG,aACHhD,MAAM,QACNvC,MAAO0I,GACP4D,SAAU,SAAC5G,GAAD,OAAWiD,GAAajD,EAAM6G,OAAOvM,QAC/C6O,OAAO,SACPD,WAAW,qBACXE,WAAS,KAIjB,yBAAK/P,UAAU,mBACX,kBAAC,IAAD,CACIwG,GAAG,cACHmJ,QAAM,EACNnM,MAAM,SACNvC,MAAO4I,GACP0D,SAAU,SAAC5G,GAAD,OAASmD,GAAenD,EAAM6G,OAAOvM,QAC/C2O,YAAa,GACbC,WAAW,uBACXC,OAAO,SACPC,WAAS,GAhjB1B,CACnB,CAACvJ,GAAI,EAAGD,QAAS,OACjB,CAACC,GAAI,EAAGD,QAAS,OAgjBgCrG,KAAI,SAAAiH,GAAM,OACnB,kBAAC,IAAD,CAAU9G,IAAK8G,EAAOX,GAAIvF,MAAOkG,EAAOX,IACnCW,EAAOZ,kBAShC,yBAAKvG,UAAU,oCACX,kBAAC,IAAD,CAAQ0G,QAASsG,GAAiBlL,MAAM,aAAxC,UAGA,kBAAC,IAAD,CAAQ4E,QA3cX,WACrBsG,KACE,IAAMiD,EAAU,IAAIC,SACpBD,EAAQE,OAAO,KAAM1G,IACrBwG,EAAQE,OAAO,UAAWvI,GAC1BqI,EAAQE,OAAO,gBAAiB5G,IAChC0G,EAAQE,OAAO,cAAe1I,GAC9BwI,EAAQE,OAAO,aAAcxG,IAC7BsG,EAAQE,OAAO,SAAUtG,IACzBoG,EAAQE,OAAO,aAAclG,IAE7BkB,IAAMmB,KAAKjB,IAAW,oBAAqB4E,GAC1C1E,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACU,YAAzBH,EAASG,KAAKkB,QACdN,sBAAoB6D,QAAQ5E,EAASG,KAAK0E,IAAK,WAAY,KAAM,eAEjEnF,MACgC,UAAzBM,EAASG,KAAKkB,QACrBN,sBAAoB+D,MAAM9E,EAASG,KAAK0E,IAAK,SAAU,KAAM,kBAGlEE,OAAM,SAACD,GACN7E,QAAQC,IAAI,SAAU4E,OAob6BxO,MAAM,WAAvC,cAWhB,yBAAK9B,UAAU,cACPgH,MAAO,CAACxC,OAAQD,IAAS,KAAO,sBAAwB,wBAC5D,kBAAC,IAAD","file":"static/js/26.9d9effa1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n    const arr = sub.split(\"-\");\r\n    if (arr.length > 1) {\r\n        return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n    } else {\r\n        return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n    }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n    if (index === 0) {\r\n        return '#/';\r\n    } else {\r\n        return '#/' + path.split(sub)[0] + sub;\r\n    }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n    const path = match.path.substr(1);\r\n    const subPath = path.split('/');\r\n    return (\r\n        <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n            <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n            <Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n                {subPath.map((sub, index) => {\r\n                        return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                               tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                               href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n                    }\r\n                )}\r\n            </Breadcrumb>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z\"\n}), 'PlaylistAdd');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minHeight: 36,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      borderRadius: '50%',\n      padding: 0,\n      minWidth: 0,\n      width: 56,\n      height: 56,\n      boxShadow: theme.shadows[6],\n      '&:active': {\n        boxShadow: theme.shadows[12]\n      },\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        },\n        textDecoration: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // assure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    primary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    secondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"extended\"`. */\n    extended: {\n      borderRadius: 48 / 2,\n      padding: '0 16px',\n      width: 'auto',\n      minHeight: 'auto',\n      minWidth: 48,\n      height: 48,\n      '&$sizeSmall': {\n        width: 'auto',\n        padding: '0 8px',\n        borderRadius: 34 / 2,\n        minWidth: 34,\n        height: 34\n      },\n      '&$sizeMedium': {\n        width: 'auto',\n        padding: '0 16px',\n        borderRadius: 40 / 2,\n        minWidth: 40,\n        height: 40\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"``. */\n    sizeSmall: {\n      width: 40,\n      height: 40\n    },\n\n    /* Styles applied to the root element if `size=\"medium\"``. */\n    sizeMedium: {\n      width: 48,\n      height: 48\n    }\n  };\n};\nvar Fab = /*#__PURE__*/React.forwardRef(function Fab(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'large' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'round' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, variant !== \"round\" && classes.extended, size !== 'large' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, {\n      'primary': classes.primary,\n      'secondary': classes.secondary,\n      'inherit': classes.colorInherit\n    }[color]),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['extended', 'round'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);","import React, {useState} from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n\r\nconst CardEditMenu = (props) => {\r\n    \r\n    const [menuState, setMenuState] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(undefined);\r\n    const {selectedData, onSelectRow, menu_rows} = props;\r\n    const options = menu_rows ? menu_rows : ([\r\n        {content: 'View', id: 0},\r\n        {content: 'Modify', id: 1},\r\n        {content: 'Delete', id: 2}\r\n    ]);\r\n\r\n    const onOptionMenuSelect = event => {\r\n      setMenuState(true);\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleRequestClose = () => {\r\n      setMenuState(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton onClick={onOptionMenuSelect}>\r\n            <i className=\"zmdi zmdi-more-vert\"/></IconButton>\r\n\r\n            <Menu \r\n                anchorEl={anchorEl}\r\n                open={menuState}\r\n                onClose={handleRequestClose}\r\n                key={selectedData.id}\r\n                MenuListProps={{\r\n                    style: {\r\n                        width: 150,\r\n                        paddingTop: 0,\r\n                        paddingBottom: 0\r\n                    },\r\n                }}>\r\n\r\n                {options.map(option =>\r\n                    <MenuItem key={selectedData + \"-\" + option.content} \r\n                        onClick={() => {\r\n                            handleRequestClose();\r\n                            onSelectRow(selectedData, option.id);\r\n                        } }>\r\n                        {option.content}\r\n                    </MenuItem>\r\n                )}\r\n            </Menu>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardEditMenu;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ContainerHeader from 'components/ContainerHeader/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport CardEditMenu from './CardEditMenu.js'\r\nimport SearchBox from '../../../../../components/SearchBox/index';\r\nimport {useSelector} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {base_url,public_url, $http} from \"config\";\r\nimport {Modal, ModalHeader} from 'reactstrap';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n\r\nconst columnData = [\r\n  {id: \"id\", align: false, disablePadding: true, label: \"ID\"},\r\n  {id: \"floor_name\", align: true, disablePadding: false, label: \"Floor\"},\r\n  {id: \"rooms_count\", align: true, disablePadding: false, label: \"Rooms\"},\r\n  {id: \"status\", align: true, disablePadding: false, label: \"Status\"},\r\n  {id: \"actions\", align: true, disablePadding: false, numeric: 'right', label: \"Actions\"}\r\n];\r\nconst BuildingInfo = (props) => {\r\n  const building_id = props.location.state ? props.location.state.id : null;\r\n  const site_id = props.location.state ? props.location.state.site_id : null;\r\n  const [floor_open, setFloorOpen] = useState(false);\r\n  const [building_open, setBuildingOpen] = useState(false);\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"id\");\r\n  const [loader, setLoader] = useState(false);\r\n  const {width} = useSelector(({settings}) => settings);\r\n  const History = useHistory();\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [tabledata, setTabledata] = useState([]);\r\n\r\n  const [departmentname_rows, setDepartmentNames] = useState([]);\r\n  const [sitename_rows, setSiteNames] = useState([]);\r\n  const [buildingname_rows, setBuildingNames] = useState([]);\r\n  const [department_id, setDepartmentName] = useState(null);\r\n  const [floor_id, setFloorId] = useState(\"\");\r\n  const [floor_name, setFloorName] = useState(\"\");\r\n  const [floor_status, setFloorStatus] = useState(\"\");\r\n  const [floors,setFloors] = useState([]);\r\n  const [floor_upload_img, setFloorUploadImg] = useState(null);\r\n  const [floor_upload_img_url, setFloorUploadImgUrl] = useState('https://via.placeholder.com/300x300');\r\n  const status_rows = ([\r\n    {id: 1, content: 'Yes'},\r\n    {id: 0, content: 'No'},\r\n  ]);\r\n  const [building,setBuilding] = useState([]);\r\n\r\n  const [building_name, setBuildingName] = useState(\"\");\r\n  const [building_address, setBuildingAddress] = useState(\"\");\r\n  const [building_postcode, setbuildingPostcode] = useState(\"\");\r\n  const [building_upload_img, setBuildingUploadImg] = useState(null);\r\n  const [building_upload_img_url, setBuildingUploadImgUrl] = useState('https://via.placeholder.com/300x300');\r\n\r\n  useEffect(() => {\r\n    init_Data();\r\n  }, []);\r\n\r\n  const init_Data = () => {\r\n    $http.get(base_url + \"building/buildingInfo\", {params : {id: building_id}})\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      setTabledata(response.data.floors)\r\n      setFloors(response.data.floors);\r\n      setBuilding(response.data.building);\r\n      setLoader(true);\r\n    });\r\n  }\r\n\r\n  const createSortHandler = property => event => {\r\n    handleRequestSort(event, property);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    let sort_order;\r\n    if (orderBy === property && order === \"asc\") {\r\n      sort_order = \"desc\";\r\n    } else {\r\n      sort_order = \"asc\";\r\n    }\r\n    sort_order === \"desc\"\r\n      ? floors.sort((a, b) => (b[property] < a[property] ? -1 : 1))\r\n      : floors.sort((a, b) => (a[property] < b[property] ? -1 : 1));\r\n\r\n    \r\n    setOrder(sort_order);\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    // History.push({\r\n    //   pathname: \"/app/sites/site/Info\",\r\n    //   state: {id: id}\r\n    // })\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  const onSelectFloor = (data, index) => {\r\n    if (index === 0) {\r\n      History.push({\r\n        pathname: \"/app/sites/site/floor\",\r\n        state: {id: data,site_id:site_id,building_id:building_id}\r\n      })\r\n    } else if (index === 1) {\r\n      FloorModalOpen(data);\r\n    } else if (index === 2) {\r\n      $http.post(base_url + \"floor/deleteFloor\", {id: data})\r\n      .then((response) => {\r\n        init_Data();\r\n        NotificationManager.info(\"You removed selected Floor\");\r\n      })\r\n    }\r\n  }\r\n\r\n  const SearchFloor = (data) => {\r\n    setFloors(\r\n      tabledata.filter(function (item) {\r\n        return (item.floor_name.toLowerCase().includes(data.toLowerCase()));\r\n      })\r\n    );\r\n  }\r\n  const BuildingDelete = (data)=>{\r\n    $http.post(base_url + \"building/deleteBuilding\", {params : {id: data}})\r\n    .then((response) => {\r\n       History.push({\r\n        pathname: \"/app/sites/site/info\",\r\n        state: {}\r\n      })\r\n\r\n    })\r\n  }\r\n  const FloorModalOpen = (data) => {\r\n    setFloorId(data);\r\n    $http.get(base_url + \"floor/getFloorInfo\", {params : {id: data,site_id:site_id,building_id:building_id}})\r\n    .then((response) => {\r\n      console.log(response.data);\r\n        setSiteNames(response.data.sites);\r\n        setDepartmentNames(response.data.departments);\r\n        setBuildingNames(response.data.buildings);\r\n        setDepartmentName(response.data.department_id);\r\n        if (data > 0) {\r\n          setFloorName(response.data.floor.floor_name);\r\n          setFloorStatus(response.data.floor.status);\r\n          setFloorUploadImgUrl(response.data.floor.upload_img ? \r\n            (public_url + 'upload/img/' + response.data.floor.upload_img) : \r\n            'https://via.placeholder.com/300x300');\r\n          \r\n        }\r\n        setFloorOpen(true);\r\n    })\r\n  }\r\n  const FloorModalClose = () => {\r\n    setFloorOpen(false);\r\n  }\r\n  const FloorModalSave = () => {\r\n    FloorModalClose();\r\n      const frmData = new FormData();\r\n      frmData.append('id', floor_id);\r\n      frmData.append('site_id', site_id);\r\n      frmData.append('department_id', department_id);\r\n      frmData.append('building_id', building_id);\r\n      frmData.append('floor_name', floor_name);\r\n      frmData.append('status', floor_status);\r\n      frmData.append('upload_img', floor_upload_img);\r\n      \r\n      $http.post(base_url + \"floor/updateFloor\", frmData)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n          if (response.data.status === \"success\") {\r\n              NotificationManager.success(response.data.msg, \"Success!\", 5000, () => {\r\n              });\r\n              init_Data();\r\n          } else if (response.data.status === \"error\") {\r\n              NotificationManager.error(response.data.msg, \"Error!\", 5000, () => {\r\n              });\r\n          }\r\n      }).catch((error)=>{\r\n          console.log(\"error:\", error);\r\n      })\r\n  }\r\n  const BuildingModalOpen = (data) => {\r\n    $http.get(base_url + \"building/getBuildingInfo\", {params : {id: data,site_id:site_id}})\r\n    .then((response) => {\r\n      console.log(response.data);\r\n        setDepartmentNames(response.data.departments);\r\n        if (data > 0) {\r\n          setDepartmentName(response.data.building.department_id);\r\n          setBuildingName(response.data.building.building_name);\r\n          setBuildingAddress(response.data.building.address);\r\n          setbuildingPostcode(response.data.building.postcode);\r\n          setBuildingUploadImgUrl(response.data.building.upload_img ? \r\n            (public_url + 'upload/img/' + response.data.building.upload_img) : \r\n            'https://via.placeholder.com/300x300');\r\n        }\r\n        setBuildingOpen(true);\r\n    })\r\n  }\r\n  const BuildingModalClose = () => {\r\n    setBuildingOpen(false);\r\n  }\r\n  const BuildingModalSave = () => {\r\n    BuildingModalClose();\r\n      const frmData = new FormData();\r\n      frmData.append('id', building_id);\r\n      frmData.append('site_id', site_id);\r\n      frmData.append('department_id', department_id);\r\n      frmData.append('building_name', building_name);\r\n      frmData.append('address', building_address);\r\n      frmData.append('postcode', building_postcode);\r\n      frmData.append('upload_img', building_upload_img);\r\n     \r\n\r\n      $http.post(base_url + \"building/updateBuilding\", frmData)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n          if (response.data.status === \"success\") {\r\n              NotificationManager.success(response.data.msg, \"Success!\", 5000, () => {\r\n              });\r\n              init_Data();\r\n          } else if (response.data.status === \"error\") {\r\n              NotificationManager.error(response.data.msg, \"Error!\", 5000, () => {\r\n              });\r\n          }\r\n      }).catch((error)=>{\r\n          console.log(\"error:\", error);\r\n      })\r\n  }\r\n  const changeBuildingUploadImg = (e) =>{\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = () => {\r\n        setBuildingUploadImg(file);\r\n        setBuildingUploadImgUrl(reader.result);\r\n    }\r\n    reader.readAsDataURL(file)\r\n  }\r\n  const changeFloorUploadImg = (e) =>{\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = () => {\r\n        setFloorUploadImg(file);\r\n        setFloorUploadImgUrl(reader.result);\r\n    }\r\n    reader.readAsDataURL(file)\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <ContainerHeader match={props.match} title={<IntlMessages id=\"sidebar.sites.buildingInfo\"/>}/>\r\n      { loader ? (\r\n          <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                  <div className=\"jr-card\">\r\n                      <div className=\"row\">\r\n                          <div className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-12\">\r\n                              <Avatar className=\"size-120\" alt=\"Remy Sharp\" src={public_url + 'upload/img/' + building.upload_img }/>\r\n                          </div>\r\n                          <div className=\"col-xl-9 col-lg-9 col-md-6 col-sm-6 col-12\">\r\n                              <div className=\"row\">\r\n                                  <div className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 text-right\">\r\n                                      <h2><strong>building Name</strong></h2>\r\n                                  </div>\r\n                                  <div className=\"col-xl-8 col-lg-8 col-md-6 col-sm-6 col-12 text-left\">\r\n                                      <h2>{building.building_name}</h2>\r\n                                  </div>\r\n                                  <div className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 text-right\">\r\n                                      <h2><strong>Address</strong></h2>\r\n                                  </div>\r\n                                  <div className=\"col-xl-8 col-lg-8 col-md-6 col-sm-6 col-12 text-left\">\r\n                                      <h2>{building.address}</h2>\r\n                                  </div>\r\n                                 \r\n                              </div>\r\n                          </div>\r\n                          <ul className=\"list-inline d-sm-flex flex-sm-row jr-mbtn-list mb-0 jr-featured-content-right\">\r\n                              <li><Button color=\"primary\" onClick={() => BuildingModalOpen(building_id)}><IntlMessages id=\"button.modify\"/></Button></li>\r\n                              <li><Button color=\"secondary\" onClick={() => BuildingDelete()}><IntlMessages id=\"button.delete\"/></Button></li>\r\n                          </ul>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                  <div className=\"jr-card\">\r\n                    <div>\r\n                      <Toolbar className=\"table-header\">\r\n                        <div className=\"title\">\r\n                          <Typography variant=\"h6\">Floors</Typography>\r\n                        </div>\r\n                        <div className=\"spacer\">\r\n                            <div className=\"col-md-3 col-lg-3 col-sx-6 col-6 ml-auto\">\r\n                                <SearchBox placeholder=\"Search ...\"\r\n                                  onChange={(event) => SearchFloor(event.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"actions\">\r\n                          <Tooltip title=\"New Floor\">\r\n                            <IconButton aria-label=\"New Floor\" onClick={() => FloorModalOpen(null)}>\r\n                                <PlaylistPlayIcon/>\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </div>\r\n                      </Toolbar>\r\n                      {\r\n                        loader ? (\r\n                          <div className=\"flex-auto\">\r\n                            <div className=\"table-responsive-material\">\r\n                              <Table className=\"\">\r\n                                <TableHead>\r\n                                  <TableRow>\r\n                                    {columnData.map(column => {\r\n                                      return (\r\n                                        <TableCell\r\n                                          key={column.id}\r\n                                          align={column.numeric}\r\n                                        >\r\n                                          <Tooltip\r\n                                            title=\"Sort\"\r\n                                            placement={column.numeric ? \"bottom-end\" : \"bottom-start\"}\r\n                                            enterDelay={300}\r\n                                          >\r\n                                              <TableSortLabel\r\n                                              active={orderBy === column.id}\r\n                                              direction={order}\r\n                                              onClick={createSortHandler(column.id)}\r\n                                            >\r\n                                              {column.label}\r\n                                            </TableSortLabel>\r\n                                          </Tooltip>\r\n                                        </TableCell>\r\n                                      );\r\n                                    })}\r\n                                  </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                  {floors.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((n) => \r\n                                      <TableRow\r\n                                        hover\r\n                                        key={n.id}\r\n                                        onClick={event => handleClick(event, n.id)}\r\n                                        //onKeyDown={event => handleKeyDown(event, n.id)}\r\n                                        tabIndex={-1}\r\n                                      >\r\n                                        <TableCell>{n.id}</TableCell>\r\n                                        <TableCell>\r\n                                          <div className=\"user-profile d-flex flex-row align-items-center\">\r\n                                              <Avatar\r\n                                                  alt={n.floor_name}\r\n                                                  src={public_url + \"upload/img/\" + n.upload_img}\r\n                                                  className=\"user-avatar\"\r\n                                              />\r\n                                              <div className=\"user-detail\">\r\n                                                  <h5 className=\"user-name\">{n.floor_name}</h5>\r\n                                              </div>\r\n                                          </div>\r\n                                        </TableCell>\r\n                                        <TableCell>{n.rooms_count}</TableCell>\r\n                                        <TableCell>{n.status ? 'Yes':'No'}</TableCell>\r\n                                        <TableCell className=\"text-right\">\r\n                                          <CardEditMenu key={n.id} selectedData={n.id} \r\n                                            onSelectRow={onSelectFloor}/>\r\n                                        </TableCell>\r\n                                      </TableRow>\r\n                                    )}\r\n                                </TableBody>\r\n                                <TableFooter>\r\n                                  <TableRow>\r\n                                    <TablePagination\r\n                                      count={floors.length}\r\n                                      rowsPerPage={rowsPerPage}\r\n                                      page={page}\r\n                                      onChangePage={handleChangePage}\r\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                    />\r\n                                  </TableRow>\r\n                                </TableFooter>\r\n                              </Table>\r\n                            </div>\r\n                            <NotificationContainer/>\r\n                          </div>\r\n                        ):(\r\n                          <div className=\"loader-view\"\r\n                                  style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n                              <CircularProgress/>\r\n                          </div>        \r\n                        )\r\n                      }\r\n                      <Modal key=\"building-save\" className=\"modal-box\" toggle={BuildingModalClose} isOpen={building_open} fullwidth=\"true\">\r\n                          <ModalHeader>{building_id ? 'Modify Building':'Add Building'}\r\n                              <IconButton className=\"text-grey\"\r\n                                          onClick={BuildingModalClose}>\r\n                                  <CloseIcon/>\r\n                              </IconButton>\r\n                          </ModalHeader>\r\n                          <div className=\"modal-box-content\">\r\n                              <div className=\"row\">\r\n                                  <div className=\"col-xl-3 col-lg-4 col-md-5 col-12\">\r\n                                      <div className=\"jr-card pb-2\">\r\n                                          <div className=\"jr-card-thumb\">\r\n                                              <img className=\"card-img-top img-fluid\" alt=\"products\" src={building_upload_img_url}/>\r\n                                          </div>\r\n                                          <input type=\"file\" id=\"upload_img\" accept=\"image/*\" \r\n                                              name=\"upload_img\" style={{display: \"none\"}}\r\n                                              onChange={(event) => changeBuildingUploadImg(event)}/>\r\n\r\n                                          <div className=\"jr-card-social text-right\">\r\n                                              <Fab className=\"jr-fab-btn bg-secondary text-white jr-btn-fab-xs mb-3\" \r\n                                                  onClick={(e)=>{document.getElementById('upload_img').click()}}>\r\n                                                  <i className=\"zmdi zmdi-cloud-upload zmdi-hc-1x\"/>\r\n                                              </Fab>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                                  <div className=\"col-xl-9 col-lg-8 col-md-7 col-12\">\r\n                                      <div className=\"row\">\r\n                                      <div className=\"col-md-6 col-12\">\r\n                                      <TextField\r\n                                          id=\"departments\"\r\n                                          select\r\n                                          label=\"departments\"\r\n                                          value={department_id}\r\n                                          onChange={(event)=>setDepartmentName(event.target.value)}\r\n                                          SelectProps={{}}\r\n                                          helperText=\"Please select Department\"\r\n                                          margin=\"normal\"\r\n                                          fullWidth\r\n                                      >\r\n                                          {departmentname_rows.map(option => (\r\n                                              <MenuItem key={option.id} value={option.id}>\r\n                                                  {option.department_name}\r\n                                              </MenuItem>\r\n                                          ))}\r\n                                      </TextField>\r\n                                  </div>\r\n                                  <div className=\"col-md-6 col-12\">\r\n                                      <TextField \r\n                                          id=\"building_name\"\r\n                                          label=\"Building Name\"\r\n                                          value={building_name}\r\n                                          onChange={(event)=>setBuildingName(event.target.value)}\r\n                                          margin=\"normal\"\r\n                                          helperText=\"Please Enter Building Name\"\r\n                                          fullWidth\r\n                                          />\r\n                                  </div>\r\n                                  <div className=\"col-md-6 col-12\">\r\n                                      <TextField \r\n                                          id=\"address\"\r\n                                          label=\"Address\"\r\n                                          value={building_address}\r\n                                          onChange={(event)=>setBuildingAddress(event.target.value)}\r\n                                          margin=\"normal\"\r\n                                          helperText=\"Please Enter Address\"\r\n                                          fullWidth\r\n                                          />\r\n                                  </div>\r\n                                  <div className=\"col-md-6 col-12\">\r\n                                      <TextField \r\n                                          id=\"postcode\"\r\n                                          label=\"Postcode\"\r\n                                          value={building_postcode}\r\n                                          onChange={(event)=>setbuildingPostcode(event.target.value)}\r\n                                          margin=\"normal\"\r\n                                          helperText=\"Please Enter Postcode\"\r\n                                          fullWidth\r\n                                          />\r\n                                  </div>\r\n                                  \r\n                                  \r\n                                  </div>\r\n                                  </div>\r\n\r\n                              </div>\r\n                          </div>\r\n                          <div className=\"modal-box-footer d-flex flex-row\">\r\n                              <Button onClick={BuildingModalClose} color=\"secondary\">\r\n                              Cancel\r\n                              </Button>\r\n                              <Button onClick={BuildingModalSave} color=\"primary\">\r\n                              Save\r\n                              </Button>\r\n                          </div>\r\n                      </Modal>\r\n                      <Modal key=\"floor-save\" className=\"modal-box\" toggle={FloorModalClose} isOpen={floor_open}>\r\n                        <ModalHeader>{floor_id ? 'Modify floor':'Add Floor'}\r\n                            <IconButton className=\"text-grey\"\r\n                                        onClick={FloorModalClose}>\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                        </ModalHeader>\r\n                        <div className=\"modal-box-content\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-3 col-lg-4 col-md-5 col-12\">\r\n                                      <div className=\"jr-card pb-2\">\r\n                                          <div className=\"jr-card-thumb\">\r\n                                              <img className=\"card-img-top img-fluid\" alt=\"products\" src={floor_upload_img_url}/>\r\n                                          </div>\r\n                                          <input type=\"file\" id=\"upload_img\" accept=\"image/*\" \r\n                                              name=\"upload_img\" style={{display: \"none\"}}\r\n                                              onChange={(event) => changeFloorUploadImg(event)}/>\r\n\r\n                                          <div className=\"jr-card-social text-right\">\r\n                                              <Fab className=\"jr-fab-btn bg-secondary text-white jr-btn-fab-xs mb-3\" \r\n                                                  onClick={(e)=>{document.getElementById('upload_img').click()}}>\r\n                                                  <i className=\"zmdi zmdi-cloud-upload zmdi-hc-1x\"/>\r\n                                              </Fab>\r\n                                          </div>\r\n                                      </div>\r\n                                </div>\r\n                                <div className=\"col-xl-9 col-lg-8 col-md-7 col-12\">\r\n                                <div className=\"row\">\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField\r\n                                        id=\"sitename\"\r\n                                        select\r\n                                        label=\"Site Name\"\r\n                                        value={site_id}\r\n                                        SelectProps={{}}\r\n                                        helperText=\"Please select Site Name\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        disabled\r\n                                    >\r\n                                        {sitename_rows.map(option => (\r\n                                            <MenuItem key={option.id} value={option.id}>\r\n                                                {option.site_name}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField\r\n                                        id=\"departmentname\"\r\n                                        select\r\n                                        label=\"Department Name\"\r\n                                        value={department_id}\r\n                                        onChange={(event)=>setDepartmentName(event.target.value)}\r\n                                        SelectProps={{}}\r\n                                        helperText=\"Please select Department Name\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        disabled\r\n                                    >\r\n                                        {departmentname_rows.map(option => (\r\n                                            <MenuItem key={option.id} value={option.id}>\r\n                                                {option.department_name}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField\r\n                                        id=\"buildingname\"\r\n                                        select\r\n                                        label=\"Building Name\"\r\n                                        value={building_id}\r\n                                        onChange={(event)=>setBuildingName(event.target.value)}\r\n                                        SelectProps={{}}\r\n                                        helperText=\"Please select Building Name\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        disabled\r\n                                    >\r\n                                        {buildingname_rows.map(option => (\r\n                                            <MenuItem key={option.id} value={option.id}>\r\n                                                {option.building_name}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField \r\n                                        id=\"floor_name\"\r\n                                        label=\"Floor\"\r\n                                        value={floor_name}\r\n                                        onChange={(event) => setFloorName(event.target.value)}\r\n                                        margin=\"normal\"\r\n                                        helperText=\"Please Enter Floor\"\r\n                                        fullWidth\r\n                                        />\r\n                                </div>\r\n                              \r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField\r\n                                        id=\"floorstatus\"\r\n                                        select\r\n                                        label=\"Status\"\r\n                                        value={floor_status}\r\n                                        onChange={(event)=>setFloorStatus(event.target.value)}\r\n                                        SelectProps={{}}\r\n                                        helperText=\"Please select Status\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                    >\r\n                                        {status_rows.map(option => (\r\n                                            <MenuItem key={option.id} value={option.id}>\r\n                                                {option.content}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-box-footer d-flex flex-row\">\r\n                            <Button onClick={FloorModalClose} color=\"secondary\">\r\n                            Cancel\r\n                            </Button>\r\n                            <Button onClick={FloorModalSave} color=\"primary\">\r\n                            Save\r\n                            </Button>\r\n                        </div>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n              </div>  \r\n          </div>\r\n          ) :\r\n          (\r\n            <div className=\"loader-view\"\r\n                    style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n                <CircularProgress/>\r\n            </div>\r\n          )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildingInfo;\r\n"],"sourceRoot":""}