{"version":3,"sources":["app/routes/Customers/routes/Users/InviteUser.js","components/ContainerHeader/index.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/@material-ui/icons/Clear.js"],"names":["InviteUser","props","useState","customer","email","first_name","user_role","user_data","setUserData","user_roles","id","content","send_result","setSendResult","customers","location","state","updateUserData","value","index","option","in_data","className","match","title","map","key","select","label","onChange","event","target","SelectProps","helperText","margin","fullWidth","name","length","onClick","push","addUserClick","splice","removeUserClick","variant","color","frmData","FormData","append","$http","post","base_url","then","response","data","status","success_key","NotificationManager","error","msg","info","catch","sendInvite","getUrlString","path","sub","split","ContainerHeader","project_name","room_number","url_name","url","substr","subPath","tag","active","href","arr","charAt","toUpperCase","slice","getDisplayString","propTypes","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","children","node","Breadcrumb","Tag","ListTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","React","createElement","_extends","defaultProps","bool","BreadcrumbItem","undefined","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","d"],"mappings":"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","file":"static/js/48.9300d579.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport ContainerHeader from 'components/ContainerHeader/index';\nimport IntlMessages from 'util/IntlMessages';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from '@material-ui/core/Button';\nimport {base_url, $http} from \"config\";\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport Clear from '@material-ui/icons/Clear'\n\nconst InviteUser =(props)=> {\n\n  const [user_data,setUserData] = useState([{customer:'',email:'',first_name:'',user_role:''},])\n  const user_roles =  ([\n                        {id: 2, content: 'Admin'},\n                        {id: 6, content: 'Normal'},\n                      ])\n  const [send_result, setSendResult] = useState([])\n  const {customers} = props.location.state\n  const addUserClick =(option)=>{\n    var in_data = [...user_data]\n    in_data.push({customer:'',email:'',first_name:'',user_role:''})\n    setUserData(in_data)\n  } \n  const removeUserClick = (index)=>{\n    const in_data = [...user_data];\n    in_data.splice(index, 1);\n    setUserData(in_data)\n  } \n  const updateUserData =(value,index,option)=>{\n    const in_data = [...user_data];\n    if(option===0)\n      in_data[index].email = value;\n    else if(option ===1)\n      in_data[index].first_name = value;\n    else if(option ===2)\n      in_data[index].user_role = value;  \n    else\n      in_data[index].customer = value;  \n    setUserData(in_data)\n\n  }\n  const sendInvite =()=>{\n    const frmData = new FormData();\n    frmData.append('pendingUser', user_data);\n    $http.post(base_url + \"customers/pendingUser\", frmData)\n    .then((response)=>\n    {\n      if (response.data.status === \"success\") {\n        setSendResult(response.data.success_key);\n      }\n      else if (response.data.status === \"error\") {\n        NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\n        });\n      }\n      NotificationManager.info(\"You sent email!\");\n      \n\n    }).catch((error)=>{\n      NotificationManager.error(error, \"Error!\", 1000, () => {\n      });\n  })\n  }\n\n  return (\n      <div className=\"app-wrapper\">\n          <ContainerHeader match={props.match} title={<IntlMessages id=\"sidebar.customers.inviteusers\"/>}/>\n          <div className=\"row animated slideInUpTiny animation-duration-3\">\n              <div className=\"col-12\">\n                <div className=\"jr-card\">\n                  {user_data.map((option,index) => (\n                    <div className=\"row d-flex align-items-center\" key = {index}>\n                      <div className=\"col-xl-2 col-lg-2 col-md-2 col-12\">\n                        <TextField\n                          id=\"customer\"\n                          select\n                          label=\"Customer\"\n                          value={option.customer}\n                          onChange={(event)=>updateUserData(event.target.value,index,3)}\n                          SelectProps={{}}\n                          helperText=\"Please select Customer\"\n                          margin=\"normal\"\n                          fullWidth\n                      >\n                          {customers.map(option => (\n                              <MenuItem key={option.id} value={option.id}>\n                                  {option.name}\n                              </MenuItem>\n                          ))}\n                        </TextField>\n                      </div>\n                      <div className=\"col-xl-3 col-lg-3 col-md-3 col-12\">\n                        <TextField \n                          id=\"email\"\n                          label=\"Email\"\n                          value={option.email}\n                          onChange={(event)=>updateUserData(event.target.value,index,0)}\n                          margin=\"normal\"\n                          helperText=\"Please Enter Email\"\n                          fullWidth\n                        />\n                      </div>\n\n                      <div className=\"col-xl-2 col-lg-2 col-md-2 col-12\">\n                        <TextField \n                          id=\"firstname\"\n                          label=\"First Name\"\n                          value={option.first_name}\n                          onChange={(event)=>updateUserData(event.target.value,index,1)}\n                          margin=\"normal\"\n                          helperText=\"Please Enter First Name\"\n                          fullWidth\n                        />\n                      </div>\n                      <div className=\"col-xl-3 col-lg-3 col-md-3 col-12\">\n                        <TextField\n                          id=\"user_role\"\n                          select\n                          label=\"User Role\"\n                          value={option.user_role}\n                          onChange={(event)=>updateUserData(event.target.value,index,2)}\n                          SelectProps={{}}\n                          helperText=\"Please select User Role\"\n                          margin=\"normal\"\n                          fullWidth\n                      >\n                          {user_roles.map(option => (\n                              <MenuItem key={option.id} value={option.id}>\n                                  {option.content}\n                              </MenuItem>\n                          ))}\n                        </TextField>\n                      </div>\n                      {index+1 === user_data.length?(\n                        <IconButton className=\"icon-btn\" onClick={()=>addUserClick(option)}>\n                          <i className=\"zmdi zmdi-account-add\"/>\n                        </IconButton>\n                      )\n                      :(\n                        <IconButton className=\"icon-btn\" onClick={()=>removeUserClick(option,index)}>\n                          <i className=\"zmdi zmdi-delete\"/>\n                        </IconButton>\n                      )\n                      }\n                      {(send_result[index] >= 0)?( \n                        <div>\n                          {send_result[index] ?(\n                            <IconButton className=\"border-2 size-30 text-success border-green\">\n                              <i className=\"zmdi zmdi-check\"/>\n                            </IconButton>\n                          ):(\n                            <IconButton className=\"border-2 size-30 text-danger border-red\">\n                              <Clear/>\n                            </IconButton>\n                          )}\n                        </div>\n\n                        ):(<div></div>)\n                      }\n                    </div>\n                  ))}\n                  <div className=\"col-md-12 col-12 text-right\">\n                    <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" \n                        onClick={() =>sendInvite()}>\n                        <IntlMessages id=\"sidebar.sendInvite\"/>\n                    </Button>\n                  </div>\n                  <NotificationContainer/>\n                </div>\n              </div>\n          </div>\n      </div>\n  );\n    \n}\n\nexport default InviteUser;","import React from 'react';\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\n\nconst getDisplayString = (sub) => {\n    const arr = sub.split(\"-\");\n    if (arr.length > 1) {\n        return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\n    } else {\n        return sub.charAt(0).toUpperCase() + sub.slice(1)\n    }\n\n};\nconst getUrlString = (path, sub, index) => {\n    if (index === 0) {\n        return '/';\n    } else {\n        return '/' + path.split(sub)[0] + sub;\n    }\n};\n\nconst ContainerHeader = ({title, match,project_name,room_number}) => {\n    let url_name = [];\n    const path = match.url.substr(1);\n    const subPath = path.split('/');\n    subPath.map((sub,index)=>{\n        if(sub===''){\n            subPath.splice(index,1)\n        }\n        if(subPath[index-1] ==='live')\n            url_name[index] = project_name?project_name:''\n        else if(subPath[index-2] ==='live')\n            url_name[index] = room_number?room_number:''\n        else\n            url_name[index] = sub\n    })\n    return (\n        <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\n            <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\n\n            <Breadcrumb className=\"mb-0\" tag=\"nav\">\n                {subPath.map((sub, index) => {\n                        if(index ==0) return;\n                        return <BreadcrumbItem active={subPath.length === index + 1}\n                                            tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\n                                            href={getUrlString(path, sub, index)}>{getDisplayString(url_name[index])}</BreadcrumbItem>\n                    }\n                )}\n            </Breadcrumb>\n        </div>\n    )\n};\n\nexport default ContainerHeader;\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;"],"sourceRoot":""}