{"version":3,"sources":["app/routes/Settings/routes/Users/UsersInvite.js","components/ContainerHeader/index.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/@material-ui/icons/Clear.js"],"names":["UsersInvite","props","user","JSON","parse","localStorage","getItem","History","useHistory","useState","customer","company_id","email","first_name","user_role","user_data","setUserData","user_roles","id","content","send_result","setSendResult","updateUserData","value","index","option","in_data","className","match","title","map","key","label","onChange","event","target","margin","helperText","fullWidth","select","SelectProps","length","onClick","push","addUserClick","splice","removeUserClick","variant","color","frmData","FormData","append","$http","post","base_url","then","response","data","status","success_key","NotificationManager","info","error","msg","alert","catch","sendInvite","go","getUrlString","path","sub","split","ContainerHeader","project_name","room_number","url_name","url","substr","subPath","tag","active","href","arr","charAt","toUpperCase","slice","getDisplayString","propTypes","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","children","node","Breadcrumb","Tag","ListTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","React","createElement","_extends","defaultProps","bool","BreadcrumbItem","undefined","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","d"],"mappings":"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","file":"static/js/50.941ee03f.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport ContainerHeader from 'components/ContainerHeader/index';\nimport IntlMessages from 'util/IntlMessages';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from '@material-ui/core/Button';\nimport {base_url, $http} from \"config\";\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport Clear from '@material-ui/icons/Clear'\nimport {useHistory} from 'react-router-dom';\nconst UsersInvite =(props)=> {\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const History = useHistory();\n  const [user_data,setUserData] = useState([{customer:user.company_id,email:'',first_name:'',user_role:''},])\n  const user_roles = ([\n                      {id: 1, content: 'Super Admin'},\n                      {id: 3, content: 'Account Manager'},\n                    ])\n  const [send_result, setSendResult] = useState([])\n  const addUserClick =(option)=>{\n    var in_data = [...user_data]\n    in_data.push({customer:user.company_id,email:'',first_name:'',user_role:''})\n    setUserData(in_data)\n  } \n  const removeUserClick = (index)=>{\n    const in_data = [...user_data];\n    in_data.splice(index, 1);\n    setUserData(in_data)\n  } \n  const updateUserData =(value,index,option)=>{\n    const in_data = [...user_data];\n    if(option===0)\n      in_data[index].email = value;\n    else if(option ===1)\n      in_data[index].first_name = value;\n    else \n      in_data[index].user_role = value;  \n  \n    setUserData(in_data)\n\n  }\n  const sendInvite =()=>{\n    const frmData = new FormData();\n    frmData.append('pendingUser', user_data);\n    $http.post(base_url + \"customers/pendingUser\",frmData)\n    .then((response)=>\n    {\n      \n      if (response.data.status === \"success\") {\n        setSendResult(response.data.success_key);\n        NotificationManager.info(\"You sent email!\");\n      }\n      else if (response.data.status === \"error\") {\n        NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\n            alert('callback');\n        });\n      }\n    }).catch((error)=>{\n      NotificationManager.error(error, \"Error!\", 1000, () => {\n      });\n  })\n  }\n \n  return (\n      <div className=\"app-wrapper\">\n          <ContainerHeader match={props.match} title={<IntlMessages id=\"sidebar.customers.inviteusers\"/>}/>\n          <div className=\"row animated slideInUpTiny animation-duration-3\">\n              <div className=\"col-12\">\n                <div className=\"jr-card\">\n                  {user_data.map((option,index) => (\n                    <div className=\"row d-flex align-items-center\" key = {index}>\n                      \n                      <div className=\"col-xl-3 col-lg-3 col-md-3 col-12\">\n                        <TextField \n                          id=\"email\"\n                          label=\"Email\"\n                          value={option.email}\n                          onChange={(event)=>updateUserData(event.target.value,index,0)}\n                          margin=\"normal\"\n                          helperText=\"Please Enter Email\"\n                          fullWidth\n                        />\n                      </div>\n\n                      <div className=\"col-xl-3 col-lg-3 col-md-3 col-12\">\n                        <TextField \n                          id=\"firstname\"\n                          label=\"First Name\"\n                          value={option.first_name}\n                          onChange={(event)=>updateUserData(event.target.value,index,1)}\n                          margin=\"normal\"\n                          helperText=\"Please Enter First Name\"\n                          fullWidth\n                        />\n                      </div>\n                      <div className=\"col-xl-3 col-lg-3 col-md-3 col-12\">\n                        <TextField\n                          id=\"user_role\"\n                          select\n                          label=\"User Role\"\n                          value={option.user_role}\n                          onChange={(event)=>updateUserData(event.target.value,index,2)}\n                          SelectProps={{}}\n                          helperText=\"Please select User Role\"\n                          margin=\"normal\"\n                          fullWidth\n                      >\n                          {user_roles.map(option => (\n                              <MenuItem key={option.id} value={option.id}>\n                                  {option.content}\n                              </MenuItem>\n                          ))}\n                        </TextField>\n                      </div>\n                      {index+1 === user_data.length?(\n                        <IconButton className=\"icon-btn\" onClick={()=>addUserClick(option)}>\n                          <i className=\"zmdi zmdi-account-add\"/>\n                        </IconButton>\n                      )\n                      :(\n                        <IconButton className=\"icon-btn\" onClick={()=>removeUserClick(option,index)}>\n                          <i className=\"zmdi zmdi-delete\"/>\n                        </IconButton>\n                      )\n                      }\n                      {(send_result[index] >= 0)?( \n                        <div>\n                          {send_result[index] ?(\n                            <IconButton className=\"border-2 size-30 text-success border-green\">\n                              <i className=\"zmdi zmdi-check\"/>\n                            </IconButton>\n                          ):(\n                            <IconButton className=\"border-2 size-30 text-danger border-red\">\n                              <Clear/>\n                            </IconButton>\n                          )}\n                        </div>\n\n                        ):(<div></div>)\n                      }\n                    </div>\n                  ))}\n                  <div className=\"col-md-12 col-12 text-right\">\n                    <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" \n                        onClick={() =>sendInvite()}>\n                        <IntlMessages id=\"sidebar.sendInvite\"/>\n                    </Button>\n                    <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" \n                        onClick={() =>History.go(-1)}>\n                        <IntlMessages id=\"sidebar.back\"/>\n                    </Button>\n                  </div>\n                  <NotificationContainer/>\n                </div>\n              </div>\n          </div>\n      </div>\n  );\n    \n}\n\nexport default UsersInvite;","import React from 'react';\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\n\nconst getDisplayString = (sub) => {\n    const arr = sub.split(\"-\");\n    if (arr.length > 1) {\n        return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\n    } else {\n        return sub.charAt(0).toUpperCase() + sub.slice(1)\n    }\n\n};\nconst getUrlString = (path, sub, index) => {\n    if (index === 0) {\n        return '/';\n    } else {\n        return '/' + path.split(sub)[0] + sub;\n    }\n};\n\nconst ContainerHeader = ({title, match,project_name,room_number}) => {\n    let url_name = [];\n    const path = match.url.substr(1);\n    const subPath = path.split('/');\n    subPath.map((sub,index)=>{\n        if(sub===''){\n            subPath.splice(index,1)\n        }\n        if(subPath[index-1] ==='live')\n            url_name[index] = project_name?project_name:''\n        else if(subPath[index-2] ==='live')\n            url_name[index] = room_number?room_number:''\n        else\n            url_name[index] = sub\n    })\n    return (\n        <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\n            <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\n\n            <Breadcrumb className=\"mb-0\" tag=\"nav\">\n                {subPath.map((sub, index) => {\n                        if(index ==0) return;\n                        return <BreadcrumbItem active={subPath.length === index + 1}\n                                            tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\n                                            href={getUrlString(path, sub, index)}>{getDisplayString(url_name[index])}</BreadcrumbItem>\n                    }\n                )}\n            </Breadcrumb>\n        </div>\n    )\n};\n\nexport default ContainerHeader;\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;"],"sourceRoot":""}