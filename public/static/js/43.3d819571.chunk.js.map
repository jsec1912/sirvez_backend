{"version":3,"sources":["app/routes/SiteSurvey/routes/live/EditPhoto.js"],"names":["EditPhoto","props","History","useHistory","useState","loader","setLoader","location","state","public_url","img_url","width","useSelector","settings","setCategories","category_js","setCategoryJS","useEffect","$http","get","base_url","params","room_id","then","response","data","status","edit_flag","go","categories","map","item","name","stickers","subitem","category_img","catch","error","console","log","className","img_id","style","height"],"mappings":"gMA8FeA,UArFG,SAACC,GACf,IAAMC,EAAUC,cADS,EAGGC,oBAAS,GAHZ,mBAGlBC,EAHkB,KAGVC,EAHU,OAIIF,mBAASH,EAAMM,SAASC,MAAQC,IAAa,cAAgBR,EAAMM,SAASC,MAAME,QAAU,IAJhG,mBAIlBA,EAJkB,KAKlBC,GALkB,KAKTC,aAAY,qBAAEC,YAAvBF,OALkB,EAMWP,mBAAS,IANpB,mBAMNU,GANM,aAOYV,mBAAS,IAPrB,mBAOlBW,EAPkB,KAOLC,EAPK,KAuCzB,OA/BAC,qBAAU,WACFZ,GAOJa,IAAMC,IAAIC,IAAW,iBAAkB,CAACC,OAAQ,CAACC,QAASrB,EAAMM,SAASC,MAAMc,WAC9EC,MAAK,SAACC,GAC0B,YAAzBA,EAASC,KAAKC,SACgB,GAA3BF,EAASC,KAAKE,UACbzB,EAAQ0B,GAAG,IAEXd,EAAcU,EAASC,KAAKI,YAC5BvB,GAAU,GACVU,EAAcQ,EAASC,KAAKI,WAAWC,KAAI,SAAAC,GACvC,MAAO,YAAcA,EAAKC,KAAO,aAC7BD,EAAKE,SAASH,KAAI,SAAAI,GACd,MAAO,IAAMA,EAAQF,KAAO,OAE9B,4CAA8CD,EAAKI,aAAe,cAIrFC,OAAM,SAACC,GACNC,QAAQC,IAAI,SAAUF,QAG3B,CAAC3B,IAGA,yBAAK8B,UAAU,eACTnC,EACE,6BAEI,uCACA,kBAAC,IAAD,KACI,gCACK,qHAGQJ,EAAMM,SAASC,MAAQC,IAAa,cAAgBR,EAAMM,SAASC,MAAME,QAAU,IACxF,gLAG2BU,IAAW,0BAA4BnB,EAAMM,SAASC,MAAQP,EAAMM,SAASC,MAAMiC,OAAS,IAAM,iYAQjH1B,EACJ,2IAUxB,yBAAKyB,UAAU,cACPE,MAAO,CAACC,OAAQhC,GAAS,KAAO,sBAAwB,wBAC5D,kBAAC,IAAD","file":"static/js/43.3d819571.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {base_url, public_url, $http} from \"config\";\r\nimport Helmet from 'react-helmet';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst EditPhoto = (props) => {\r\n    const History = useHistory();\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [img_url, setImgUrl] = useState(props.location.state ? public_url + \"upload/img/\" + props.location.state.img_url : '');\r\n    const {width} = useSelector(({settings}) => settings);\r\n    const [categories, setCategories] = useState([]);\r\n    const [category_js, setCategoryJS] = useState(\"\");\r\n    useEffect(() => {\r\n        if (loader) return ;\r\n        // if (props.location.state) {\r\n        //     setImgUrl(props.location.state.img_url);\r\n        //     setPixieJS(\"var pixie = new Pixie({image: '\" + \r\n        //     public_url + \"upload/img/\" + props.location.state.img_url +\r\n        //         \"',onLoad: function() {console.log('Pixie is ready'); }});\");\r\n        // }\r\n        $http.get(base_url + \"room/editPhoto\", {params: {room_id: props.location.state.room_id}})\r\n        .then((response) => {\r\n            if (response.data.status === \"success\") {\r\n                if(response.data.edit_flag == 0) {\r\n                    History.go(0);\r\n                } else {\r\n                    setCategories(response.data.categories);\r\n                    setLoader(true);\r\n                    setCategoryJS(response.data.categories.map(item => {\r\n                        return \"{ name: '\" + item.name + \"', list: [\" +\r\n                            item.stickers.map(subitem => {\r\n                                return \"'\" + subitem.name + \"'\";\r\n                            })\r\n                            + \"], type: 'png', thumbnailUrl: 'images/ui/\" + item.category_img + \"'}\";\r\n                    }));\r\n                }\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(\"error:\", error);\r\n        })\r\n       \r\n    }, [img_url])\r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            { loader ? (\r\n                <div>\r\n                   \r\n                    <pixie-editor></pixie-editor>\r\n                    <Helmet>\r\n                        <script>\r\n                            {\"var pixie = new Pixie({\\\r\n                                crossOrigin: true,\\\r\n                                image: '\" + \r\n                                    (props.location.state ? public_url + \"upload/img/\" + props.location.state.img_url : \"\") +\r\n                                \"',\\\r\n                                onLoad: function() {},\\\r\n                                onSave: function(data, name) {\\\r\n                                    pixie.http().post('\" + base_url + \"room/saveimage', {id: \" + (props.location.state ? props.location.state.img_id : \"\") + \", image: data}).subscribe(function(response) {\\\r\n                                        window.history.go(-1);\\\r\n                                    });\\\r\n                                },\\\r\n                                tools: { \\\r\n                                    stickers: { \\\r\n                                        replaceDefault: false, \\\r\n                                        items: [ \" + \r\n                                            category_js +\r\n                                        \"] \\\r\n                                    } \\\r\n                                } \\\r\n                            });\\\r\n                            \"}\r\n                        </script>\r\n                    </Helmet>\r\n                </div>\r\n            \r\n            ):(\r\n                <div className=\"loader-view\"\r\n                        style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n                    <CircularProgress/>\r\n                </div>                   \r\n            )}\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default EditPhoto;"],"sourceRoot":""}