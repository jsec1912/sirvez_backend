{"version":3,"sources":["components/ContainerHeader/index.js","components/CardBox/index.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","app/routes/SiteSurvey/routes/AddNew/index.js"],"names":["getUrlString","path","sub","index","split","ContainerHeader","title","match","substr","subPath","className","tag","map","active","length","key","href","arr","charAt","toUpperCase","slice","getDisplayString","CardBox","heading","children","styleName","cardStyle","childrenStyle","headerOutside","headingStyle","defaultProps","propTypes","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","node","Breadcrumb","props","Tag","ListTag","label","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","React","createElement","_extends","bool","BreadcrumbItem","undefined","AddNew","project_id","location","state","id","useState","loader","setLoader","project_title","setProjectTitle","customer","setCustomer","account_manager","setAccountManager","out_contact","setOutContact","assign_to","setAssignTo","project_summary","setProjectSummary","upload_doc","setUploadDoc","upload_doc_name","setUploadDocName","Date","survey_start_date","setSurveyDate","customer_rows","setCustomerRows","account_manager_rows","setAccountManagerRows","assign_to_rows","setAssignToRows","History","useHistory","width","useSelector","settings","useEffect","$http","get","base_url","params","then","response","data","project","project_name","manager_id","contact_number","company_id","autoComplete","value","onChange","event","target","margin","helperText","fullWidth","select","SelectProps","option","name","first_name","last_name","htmlFor","multiple","input","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","item","fontWeight","indexOf","utils","DateFnsUtils","format","KeyboardButtonProps","type","accept","display","files","color","variant","onClick","e","document","getElementById","click","frmData","FormData","append","JSON","stringify","getFullYear","getMonth","getDate","post","status","push","pathname","NotificationManager","error","msg","catch","console","log","SaveProject","height"],"mappings":"mHAAA,sCAYMA,EAAe,SAACC,EAAMC,EAAKC,GAC7B,OAAc,IAAVA,EACO,KAEA,KAAOF,EAAKG,MAAMF,GAAK,GAAKA,GAuB5BG,IAnBS,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAChBL,EADkC,EAAXM,MACVN,KAAKO,OAAO,GACzBC,EAAUR,EAAKG,MAAM,KAC3B,OACI,yBAAKM,UAAU,2EACX,wBAAIA,UAAU,sBAAsBJ,GAEpC,kBAAC,IAAD,CAAYI,UAAU,OAAOC,IAAI,OAC5BF,EAAQG,KAAI,SAACV,EAAKC,GACX,OAAO,kBAAC,IAAD,CAAgBU,OAAQJ,EAAQK,SAAWX,EAAQ,EACnCQ,IAAKF,EAAQK,SAAWX,EAAQ,EAAI,OAAS,IAAKY,IAAKZ,EACvDa,KAAMhB,EAAaC,EAAMC,EAAKC,IA5BpD,SAACD,GACtB,IAAMe,EAAMf,EAAIE,MAAM,KACtB,OAAIa,EAAIH,OAAS,EACNG,EAAI,GAAGC,OAAO,GAAGC,cAAgBF,EAAI,GAAGG,MAAM,GAAK,IAAMH,EAAI,GAAGC,OAAO,GAAGC,cAAgBF,EAAI,GAAGG,MAAM,GAEvGlB,EAAIgB,OAAO,GAAGC,cAAgBjB,EAAIkB,MAAM,GAuB+BC,CAAiBnB,W,iCC/BvG,oBAEMoB,EAAU,SAAC,GAA2F,IAA1FC,EAAyF,EAAzFA,QAASC,EAAgF,EAAhFA,SAAUC,EAAsE,EAAtEA,UAAWC,EAA2D,EAA3DA,UAAWC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,aAErF,OACI,yBAAKnB,UAAS,UAAKe,IACdG,GACD,yBAAKlB,UAAU,mBACX,wBAAIA,UAAU,iBAAiBa,GAC9BC,EAASV,OAAS,GAAK,yBAAKJ,UAAU,qBAAqBc,EAAS,KAIzE,yBAAKd,UAAS,kBAAagB,KACrBE,GACDL,GACG,yBAAKb,UAAS,yBAAoBmB,IAC9B,wBAAInB,UAAU,gBAAgBa,GAC7BC,EAASV,OAAS,GAAK,yBAAKJ,UAAU,eAAec,EAAS,KAGvE,yBAAKd,UAAS,uBAAkBiB,IAC3BH,EAASV,OAAS,EAAIU,EAAS,GAAKA,MAO1CF,MAEfA,EAAQQ,aAAe,CACnBJ,UAAW,GACXG,aAAc,GACdF,cAAe,GACfF,UAAW,uB,iCCnCf,4EAMIM,EAAY,CACdpB,IAAKqB,IACLC,QAASD,IACTtB,UAAWwB,IAAUC,OACrBC,cAAeF,IAAUC,OACzBE,UAAWH,IAAUI,OACrBd,SAAUU,IAAUK,KACpB,aAAcL,IAAUC,QAQtBK,EAAa,SAAoBC,GACnC,IAAI/B,EAAY+B,EAAM/B,UAClB0B,EAAgBK,EAAML,cACtBC,EAAYI,EAAMJ,UAClBb,EAAWiB,EAAMjB,SACjBkB,EAAMD,EAAM9B,IACZgC,EAAUF,EAAMR,QAChBW,EAAQH,EAAM,cACdI,EAAaC,YAA8BL,EAAO,CAAC,YAAa,gBAAiB,YAAa,WAAY,MAAO,UAAW,eAE5HM,EAAUC,YAAgBC,IAAWvC,GAAY2B,GACjDa,EAAcF,YAAgBC,IAAW,aAAcb,GAAgBC,GAC3E,OAAOc,IAAMC,cAAcV,EAAKW,YAAS,GAAIR,EAAY,CACvDnC,UAAWqC,EACX,aAAcH,IACZO,IAAMC,cAAcT,EAAS,CAC/BjC,UAAWwC,GACV1B,KAGLgB,EAAWT,UAAYA,EACvBS,EAAWV,aA3BQ,CACjBnB,IAAK,MACLsB,QAAS,KACT,aAAc,cAyBDO,O,iCC3Cf,4EAMIT,EAAY,CACdpB,IAAKqB,IACLnB,OAAQqB,IAAUoB,KAClB5C,UAAWwB,IAAUC,OACrBE,UAAWH,IAAUI,QAMnBiB,EAAiB,SAAwBd,GAC3C,IAAI/B,EAAY+B,EAAM/B,UAClB2B,EAAYI,EAAMJ,UAClBxB,EAAS4B,EAAM5B,OACf6B,EAAMD,EAAM9B,IACZkC,EAAaC,YAA8BL,EAAO,CAAC,YAAa,YAAa,SAAU,QAEvFM,EAAUC,YAAgBC,IAAWvC,IAAWG,GAAS,SAAkB,mBAAoBwB,GACnG,OAAOc,IAAMC,cAAcV,EAAKW,YAAS,GAAIR,EAAY,CACvDnC,UAAWqC,EACX,eAAgBlC,EAAS,YAAS2C,MAItCD,EAAexB,UAAYA,EAC3BwB,EAAezB,aAnBI,CACjBnB,IAAK,MAmBQ4C,O,kPC0OAE,UAlPA,SAAChB,GAEZ,IAAMiB,EAAajB,EAAMkB,SAASC,MAAQnB,EAAMkB,SAASC,MAAMC,GAAK,KAF9C,EAGMC,oBAAS,GAHf,mBAGfC,EAHe,KAGPC,EAHO,OAImBF,mBAAS,IAJ5B,mBAIfG,EAJe,KAIAC,EAJA,OAKUJ,mBAAS,IALnB,mBAKfK,EALe,KAKLC,EALK,OAMuBN,mBAAS,IANhC,mBAMfO,EANe,KAMEC,EANF,OAOeR,mBAAS,IAPxB,mBAOfS,EAPe,KAOFC,EAPE,OAQWV,mBAAS,IARpB,mBAQfW,EARe,KAQJC,EARI,OASuBZ,mBAAS,IAThC,mBASfa,EATe,KASEC,EATF,OAUad,mBAAS,MAVtB,mBAUfe,GAVe,KAUHC,GAVG,QAWsBhB,mBAAS,IAX/B,qBAWfiB,GAXe,MAWEC,GAXF,SAYqBlB,mBAAS,IAAImB,MAZlC,qBAYfC,GAZe,MAYIC,GAZJ,SAamBrB,mBAAS,IAb5B,qBAafsB,GAbe,MAaAC,GAbA,SAcgCvB,mBAAS,IAdzC,qBAcfwB,GAde,MAcOC,GAdP,SAeoBzB,mBAAS,IAf7B,qBAef0B,GAfe,MAeCC,GAfD,MAgBhBC,GAAUC,cACTC,GAASC,aAAY,qBAAEC,YAAvBF,MAEPG,qBAAU,WACNC,IAAMC,IAAIC,IAAW,yBAA0B,CAACC,OAAQ,CAACtC,GAAIH,KAC5D0C,MAAK,SAACC,GAEHd,GAAsBc,EAASC,KAAKjC,iBACpCgB,GAAgBgB,EAASC,KAAKnC,UAC9BsB,GAAgBY,EAASC,KAAK7B,WAC1Bf,EAAa,IACbQ,EAAgBmC,EAASC,KAAKC,QAAQC,cACtClC,EAAkB+B,EAASC,KAAKC,QAAQE,YACxCtB,GAAc,IAAIF,KAAKoB,EAASC,KAAKC,QAAQrB,oBAC7CV,EAAc6B,EAASC,KAAKC,QAAQG,gBACpChC,EAAY2B,EAASC,KAAKC,QAAQ9B,WAClCG,EAAkByB,EAASC,KAAKC,QAAQ5B,iBACxCP,EAAYiC,EAASC,KAAKC,QAAQI,YAClC3B,GAAiBqB,EAASC,KAAKC,QAAQ1B,aAE3Cb,GAAU,QAEf,IAoCH,OACI,yBAAKtD,UAAU,eACX,kBAAC,IAAD,CAAiBH,MAAOkC,EAAMlC,MAAOD,MAAO,kBAAC,IAAD,CAAcuD,GAAG,gCAC3DE,EAEF,yBAAKrD,UAAU,OACX,kBAAC,IAAD,CAASe,UAAU,aACf,0BAAMf,UAAU,MAAMkG,aAAa,OAC/B,yBAAKlG,UAAU,mBACX,kBAAC,IAAD,CACImD,GAAG,gBACHjB,MAAM,gBACNiE,MAAO5C,EACP6C,SAAU,SAACC,GAAD,OAAW7C,EAAgB6C,EAAMC,OAAOH,QAClDI,OAAO,SACPC,WAAW,6BACXC,WAAS,KAGjB,yBAAKzG,UAAU,mBACX,kBAAC,IAAD,CACImD,GAAG,WACHuD,QAAM,EACNxE,MAAM,WACNiE,MAAO1C,EACP2C,SAAU,SAACC,GAAD,OAAW3C,EAAY2C,EAAMC,OAAOH,QAC9CQ,YAAa,GACbH,WAAW,yBACXD,OAAO,SACPE,WAAS,GAER/B,GAAcxE,KAAI,SAAA0G,GAAM,OACrB,kBAAC,IAAD,CAAUvG,IAAKuG,EAAOzD,GAAIgD,MAAOS,EAAOzD,IACnCyD,EAAOC,WAKxB,yBAAK7G,UAAU,mBACX,kBAAC,IAAD,CACImD,GAAG,kBACHuD,QAAM,EACNxE,MAAM,kBACNiE,MAAOxC,EACPyC,SAAU,SAACC,GAAWzC,EAAkByC,EAAMC,OAAOH,QACrDQ,YAAa,GACbH,WAAW,gCACXD,OAAO,SACPE,WAAS,GAER7B,GAAqB1E,KAAI,SAAA0G,GAAM,OAC5B,kBAAC,IAAD,CAAUvG,IAAKuG,EAAOzD,GAAIgD,MAAOS,EAAOzD,IACnCyD,EAAOE,WADZ,IACyBF,EAAOG,gBAK5C,yBAAK/G,UAAU,mBACX,kBAAC,IAAD,CACImD,GAAG,cACHjB,MAAM,6BACNiE,MAAOtC,EACPuC,SAAU,SAACC,GAAD,OAAWvC,EAAcuC,EAAMC,OAAOH,QAChDI,OAAO,SACPC,WAAW,0CACXC,WAAS,KAGjB,yBAAKzG,UAAU,6CACX,kBAAC,IAAD,CAAaA,UAAU,SACnB,kBAAC,IAAD,CAAYgH,QAAQ,iBAApB,aACA,kBAAC,IAAD,CACAC,UAAQ,EACRd,MAAOpC,EACPqC,SAAU,SAACC,GAAD,OAAWrC,EAAYqC,EAAMC,OAAOH,QAC9Ce,MAAO,kBAAC,IAAD,CAAO/D,GAAG,cACjBgE,UAAW,CACPC,WAAY,CACZC,MAAO,CACHC,UAAWC,IACXrC,MAAO,QAKdJ,GAAe5E,KAAI,SAAAsH,GAAI,OACpB,kBAAC,IAAD,CACAnH,IAAKmH,EAAKrE,GACVgD,MAAO,GAAGqB,EAAKrE,GACfkE,MAAO,CACHI,YAAwD,IAA5C3C,GAAe4C,QAAQ5C,IAAyB,MAAQ,QAGvE0C,EAAKV,kBAOlB,yBAAK9G,UAAU,mBACX,kBAAC,IAAD,CACImD,GAAG,kBACHjB,MAAM,kBACNiE,MAAOlC,EACPmC,SAAU,SAACC,GAAD,OAAWnC,EAAkBmC,EAAMC,OAAOH,QACpDI,OAAO,SACPC,WAAW,+BACXC,WAAS,KAGjB,yBAAKzG,UAAU,4CACX,kBAAC,IAAD,CAAyB2H,MAAOC,KAC5B,kBAAC,IAAD,CACIrB,OAAO,SACPpD,GAAG,oBACHjB,MAAM,cACN2F,OAAO,aACP1B,MAAO3B,GACP4B,SAAU3B,GACVqD,oBAAqB,CACjB,aAAc,eAElBtB,WAAW,+BAIvB,yBAAKxG,UAAU,6CACX,2BAAO+H,KAAK,OAAO5E,GAAG,aAClB6E,OAAO,6GAEPnB,KAAK,aAAaQ,MAAO,CAACY,QAAS,QACnC7B,SAAU,SAACC,GACPjC,GAAaiC,EAAMC,OAAO4B,MAAM,IAChC5D,GAAiB+B,EAAMC,OAAO4B,MAAM,GAAGrB,SAE/C,kBAAC,IAAD,CAAQ7G,UAAU,sBAAsBmI,MAAQ,UAC5CC,QAAQ,YAAYC,QAAS,SAACC,GAAKC,SAASC,eAAe,cAAcC,UACzE,kBAAC,IAAD,MAFJ,gBAIA,4BAAKpE,KAMT,yBAAKrE,UAAU,+BACX,kBAAC,IAAD,CAAQoI,QAAQ,YAAYD,MAAM,UAAUnI,UAAU,SAClDqI,QAAS,kBAtLjB,WAChB,IAAMK,EAAU,IAAIC,SACpBD,EAAQE,OAAO,KAAM5F,GACrB0F,EAAQE,OAAO,eAAgBrF,GAC/BmF,EAAQE,OAAO,cAAenF,GAC9BiF,EAAQE,OAAO,aAAcjF,GAC7B+E,EAAQE,OAAO,iBAAkB/E,GACjC6E,EAAQE,OAAO,YAAaC,KAAKC,UAAU/E,IAC3C2E,EAAQE,OAAO,kBAAmB3E,GAClCyE,EAAQE,OAAO,aAAczE,IAC7BuE,EAAQE,OAAO,oBACXpE,GAAkBuE,cAAc,KAC/BvE,GAAkBwE,WAAW,GAAG,IACjCxE,GAAkByE,WAEtB3D,IAAM4D,KAAK1D,IAAW,wBAAyBkD,GAC9ChD,MAAK,SAACC,GAC0B,YAAzBA,EAASC,KAAKuD,OAGdnE,GAAQoE,KAAK,CACTC,SAAU,uBACVnG,MAAO,CAACC,GAAIwC,EAASC,KAAKzC,MAEE,UAAzBwC,EAASC,KAAKuD,QACrBG,sBAAoBC,MAAM5D,EAASC,KAAK4D,IAAK,SAAU,KAAM,kBAGlEC,OAAM,SAACF,GACNG,QAAQC,IAAI,SAAUJ,MAyJaK,KADnB,YAUZ,yBAAK5J,UAAU,cACPqH,MAAO,CAACwC,OAAQ3E,IAAS,KAAO,sBAAwB,wBAC5D,kBAAC,IAAD,OAIR,kBAAC,wBAAD","file":"static/js/24.6b40cdda.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n    const arr = sub.split(\"-\");\r\n    if (arr.length > 1) {\r\n        return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n    } else {\r\n        return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n    }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n    if (index === 0) {\r\n        return '#/';\r\n    } else {\r\n        return '#/' + path.split(sub)[0] + sub;\r\n    }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n    const path = match.path.substr(1);\r\n    const subPath = path.split('/');\r\n    return (\r\n        <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n            <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n            <Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n                {subPath.map((sub, index) => {\r\n                        return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                               tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                               href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n                    }\r\n                )}\r\n            </Breadcrumb>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","import React from 'react';\r\n\r\nconst CardBox = ({heading, children, styleName, cardStyle, childrenStyle, headerOutside, headingStyle}) => {\r\n\r\n    return (\r\n        <div className={`${styleName}`}>\r\n            {headerOutside &&\r\n            <div className=\"jr-entry-header\">\r\n                <h3 className=\"entry-heading\">{heading}</h3>\r\n                {children.length > 1 && <div className=\"entry-description\">{children[0]}</div>}\r\n            </div>\r\n            }\r\n\r\n            <div className={`jr-card ${cardStyle}`}>\r\n                {!headerOutside &&\r\n                (heading &&\r\n                    <div className={`jr-card-header ${headingStyle}`}>\r\n                        <h3 className=\"card-heading\">{heading}</h3>\r\n                        {children.length > 1 && <div className=\"sub-heading\">{children[0]}</div>}\r\n                    </div>\r\n                )}\r\n                <div className={`jr-card-body ${childrenStyle}`}>\r\n                    {children.length > 1 ? children[1] : children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CardBox;\r\n\r\nCardBox.defaultProps = {\r\n    cardStyle: '',\r\n    headingStyle: '',\r\n    childrenStyle: '',\r\n    styleName: 'col-lg-6 col-sm-12'\r\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import React, {useState, useEffect} from 'react';\r\nimport ContainerHeader from 'components/ContainerHeader/index';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CardBox from 'components/CardBox/index';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport {base_url, $http} from \"config\";\r\nimport AttachFile from '@material-ui/icons/AttachFile';\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst AddNew = (props) => {\r\n\r\n    const project_id = props.location.state ? props.location.state.id : null;\r\n    const [loader, setLoader] = useState(false);\r\n    const [project_title, setProjectTitle] = useState(\"\");\r\n    const [customer, setCustomer] = useState(\"\");\r\n    const [account_manager, setAccountManager] = useState(\"\");\r\n    const [out_contact, setOutContact] = useState(\"\");\r\n    const [assign_to, setAssignTo] = useState([]);\r\n    const [project_summary, setProjectSummary] = useState(\"\");\r\n    const [upload_doc, setUploadDoc] = useState(null);\r\n    const [upload_doc_name, setUploadDocName] = useState(\"\");\r\n    const [survey_start_date, setSurveyDate] = useState(new Date());\r\n    const [customer_rows, setCustomerRows] = useState([]);\r\n    const [account_manager_rows, setAccountManagerRows] = useState([]);\r\n    const [assign_to_rows, setAssignToRows] = useState([]);\r\n    const History = useHistory();\r\n    const {width} = useSelector(({settings}) => settings);\r\n\r\n    useEffect(() => {\r\n        $http.get(base_url + \"project/getprojectInfo\", {params: {id: project_id}})\r\n        .then((response) => {\r\n            //console.log(\"project\", response.data);\r\n            setAccountManagerRows(response.data.account_manager);\r\n            setCustomerRows(response.data.customer);\r\n            setAssignToRows(response.data.assign_to);\r\n            if (project_id > 0) {\r\n                setProjectTitle(response.data.project.project_name);\r\n                setAccountManager(response.data.project.manager_id);\r\n                setSurveyDate(new Date(response.data.project.survey_start_date));\r\n                setOutContact(response.data.project.contact_number);\r\n                setAssignTo(response.data.project.assign_to);\r\n                setProjectSummary(response.data.project.project_summary);\r\n                setCustomer(response.data.project.company_id);\r\n                setUploadDocName(response.data.project.upload_doc);\r\n            }\r\n            setLoader(true);\r\n        })\r\n    }, []);\r\n\r\n    const SaveProject = () => {\r\n        const frmData = new FormData();\r\n        frmData.append('id', project_id);\r\n        frmData.append('project_name', project_title);\r\n        frmData.append('customer_id', customer);\r\n        frmData.append('manager_id', account_manager);\r\n        frmData.append('contact_number', out_contact);\r\n        frmData.append('assign_to', JSON.stringify(assign_to));\r\n        frmData.append('project_summary', project_summary);\r\n        frmData.append('upload_doc', upload_doc);\r\n        frmData.append('survey_start_date', \r\n            survey_start_date.getFullYear()+\"-\"+\r\n            (survey_start_date.getMonth()+1)+\"-\"+\r\n            survey_start_date.getDate());\r\n\r\n        $http.post(base_url + \"project/updateProject\", frmData)\r\n        .then((response) => {\r\n            if (response.data.status === \"success\") {\r\n                // NotificationManager.success(response.data.msg, \"Success!\", 5000, () => {\r\n                // });\r\n                History.push({\r\n                    pathname: '/app/sitesurvey/live',\r\n                    state: {id: response.data.id}\r\n                })\r\n            } else if (response.data.status === \"error\") {\r\n                NotificationManager.error(response.data.msg, \"Error!\", 5000, () => {\r\n                });\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(\"error:\", error);\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <ContainerHeader match={props.match} title={<IntlMessages id=\"sidebar.sitesurvey.addnew\"/>}/>\r\n            { loader ? (\r\n\r\n            <div className=\"row\">\r\n                <CardBox styleName=\"col-lg-12\">\r\n                    <form className=\"row\" autoComplete=\"off\">\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <TextField \r\n                                id=\"project_title\"\r\n                                label=\"Project Title\"\r\n                                value={project_title}\r\n                                onChange={(event) => setProjectTitle(event.target.value)}\r\n                                margin=\"normal\"\r\n                                helperText=\"Please Enter Project Title\"\r\n                                fullWidth\r\n                                />\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <TextField\r\n                                id=\"customer\"\r\n                                select\r\n                                label=\"Customer\"\r\n                                value={customer}\r\n                                onChange={(event) => setCustomer(event.target.value)}\r\n                                SelectProps={{}}\r\n                                helperText=\"Please select customer\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                            >\r\n                                {customer_rows.map(option => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <TextField\r\n                                id=\"account_manager\"\r\n                                select\r\n                                label=\"Account Manager\"\r\n                                value={account_manager}\r\n                                onChange={(event) => {setAccountManager(event.target.value)}}\r\n                                SelectProps={{}}\r\n                                helperText=\"Please select Account Manager\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                            >\r\n                                {account_manager_rows.map(option => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.first_name} {option.last_name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <TextField \r\n                                id=\"out_contact\"\r\n                                label=\"Out of ours contact number\"\r\n                                value={out_contact}\r\n                                onChange={(event) => setOutContact(event.target.value)}\r\n                                margin=\"normal\"\r\n                                helperText=\"Please Enter Out of ours contact number\"\r\n                                fullWidth\r\n                                />\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12 d-flex align-items-center\">\r\n                            <FormControl className=\"w-100\">\r\n                                <InputLabel htmlFor=\"name-multiple\">Assign To</InputLabel>\r\n                                <Select\r\n                                multiple\r\n                                value={assign_to}\r\n                                onChange={(event) => setAssignTo(event.target.value)}\r\n                                input={<Input id=\"assign-to\"/>}\r\n                                MenuProps={{\r\n                                    PaperProps: {\r\n                                    style: {\r\n                                        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                                        width: 200,\r\n                                    },\r\n                                    },\r\n                                }}\r\n                                >\r\n                                {assign_to_rows.map(item => (\r\n                                    <MenuItem\r\n                                    key={item.id}\r\n                                    value={''+item.id}\r\n                                    style={{\r\n                                        fontWeight: assign_to_rows.indexOf(assign_to_rows) !== -1 ? '500' : '400',\r\n                                    }}\r\n                                    >\r\n                                    {item.first_name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <TextField \r\n                                id=\"project_summary\"\r\n                                label=\"Project Summary\"\r\n                                value={project_summary}\r\n                                onChange={(event) => setProjectSummary(event.target.value)}\r\n                                margin=\"normal\"\r\n                                helperText=\"Please Enter Project Summary\"\r\n                                fullWidth\r\n                                />\r\n                        </div>\r\n                        <div className=\"col-md-3 col-6 d-flex align-items-center\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardDatePicker\r\n                                    margin=\"normal\"\r\n                                    id=\"survey_start_date\"\r\n                                    label=\"Due by Date\"\r\n                                    format=\"yyyy/MM/dd\"\r\n                                    value={survey_start_date}\r\n                                    onChange={setSurveyDate}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                    helperText=\"Please Enter Due by Date\"\r\n                                    />\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12 d-flex align-items-center\">\r\n                            <input type=\"file\" id=\"upload_doc\" \r\n                                accept=\"application/msword, application/vnd.ms-excel, \r\n                                application/vnd.ms-powerpoint,text/plain, application/pdf\" \r\n                                name=\"upload_doc\" style={{display: \"none\"}}\r\n                                onChange={(event) => {\r\n                                    setUploadDoc(event.target.files[0]);\r\n                                    setUploadDocName(event.target.files[0].name);\r\n                                }}/>\r\n                            <Button className=\"attach-file jr-btn \" color = \"primary\"\r\n                                variant=\"contained\" onClick={(e)=>{document.getElementById('upload_doc').click()}}>\r\n                                <AttachFile/> Upload File\r\n                            </Button>\r\n                            <h2>{upload_doc_name }</h2>\r\n                        </div>\r\n                        \r\n                        {/* <div className=\"d-flex align-items-center\">\r\n                            <Checkbox color=\"primary\"/> <span>Update end user on all notifications</span>\r\n                        </div> */}\r\n                        <div className=\"col-md-12 col-12 text-right\">\r\n                            <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" \r\n                                onClick={() => SaveProject()}>\r\n                                Save\r\n                            </Button>\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </CardBox>\r\n            </div>\r\n            ):(\r\n                <div className=\"loader-view\"\r\n                        style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            )}\r\n    \r\n            <NotificationContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddNew;"],"sourceRoot":""}