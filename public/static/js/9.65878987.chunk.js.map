{"version":3,"sources":["components/ContainerHeader/index.js","app/routes/SiteSurvey/routes/live/CardEditMenu.js","app/routes/SiteSurvey/routes/live/SiteTableCell.js","app/routes/SiteSurvey/routes/live/SiteTable.js","app/routes/SiteSurvey/routes/live/RoomTableCell.js","app/routes/SiteSurvey/routes/live/RoomTable.js","app/routes/SiteSurvey/routes/live/TaskTableCell.js","app/routes/SiteSurvey/routes/live/TaskTable.js","app/routes/SiteSurvey/routes/live/ProductTableCell.js","app/routes/SiteSurvey/routes/live/ProductTable.js","app/routes/SiteSurvey/routes/live/RoomInfo.js"],"names":["getUrlString","path","sub","index","split","ContainerHeader","title","match","substr","subPath","className","tag","map","active","length","key","href","arr","charAt","toUpperCase","slice","getDisplayString","CardEditMenu","props","useState","menuState","setMenuState","undefined","anchorEl","setAnchorEl","selectedData","onSelectRow","menu_rows","options","content","id","handleRequestClose","onClick","event","currentTarget","open","onClose","MenuListProps","style","width","paddingTop","paddingBottom","option","SiteTableCell","data","site_name","city","address","postcode","survey_date","onSelectSite","tabIndex","SiteTable","Sites","RoomTableCell","room_number","ceiling_height","ceiling","wall","onSelectRoom","RoomTable","Rooms","TaskTableCell","task","assign_to","priority","due_by_date","onSelectTask","join","TaskTable","Tasks","ProductTableCell","room_name","product_name","action","qty","to_site_name","to_room_name","description","onSelectProduct","ProductTable","Products","SiteSurveyInfo","project_id","location","state","room_id","room","setRoom","room_img","setRoomImg","room_img_len","setRoomImgLen","room_img_url","setRoomImgUrl","setTasks","setProducts","warning","setWarning","loader","setLoader","History","useHistory","useSelector","settings","task_open","setTaskOpen","task_id","setTaskId","task_sitename","setTaskSiteName","task_project","setTaskProject","task_room","setTaskRoom","task_assignto","setTaskAssignto","Date","task_duebydate","setTaskDuebydate","task_title","setTaskTitle","task_des","setTaskDes","task_img","setTaskImg","TaskImgUrl","setTaskImgUrl","task_priority","setTaskPriority","task_sitename_rows","setTaskSiteNames","setTaskProjects","task_room_rows","setTaskRooms","task_assignto_rows","setTaskAssigntos","product_open","setProductOpen","product_id","setProductId","setProductName","product_roomname_rows","setProductRoomNames","product_action","setProductAction","product_description","setProductDescription","product_qty","setProductQty","product_sitename_rows","setProductSiteNames","product_tosite_id","setProductToSiteId","product_toroom_id","setProductToRoomId","product_file","setProductFile","product_fileurl","setProductFileUrl","useEffect","Init_data","$http","get","base_url","params","then","response","console","log","tasks","products","img_url","img_files","url","push","public_url","img_name","RoomSave","frmData","FormData","append","site_id","department_id","building_id","floor_id","estimate_day","estimate_hour","i","asbestos","notes","company_id","post","status","NotificationManager","success","msg","room_imgs","pathname","img_id","ModifyRoom","rooms","error","catch","TaskModalOpen","customer_site","project","TaskModalClose","ProductModalOpen","sites","product","to_room_id","to_site_id","upload_file","ProductModalClose","company_name","project_name","estimate_time","color","type","accept","multiple","name","display","onChange","e","fileObj","target","files","URL","createObjectURL","uploadMultipleFiles","variant","document","getElementById","click","alt","src","item","splice","removeImage","aria-label","info","toggle","isOpen","select","label","value","SelectProps","helperText","margin","fullWidth","disabled","htmlFor","input","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","fontWeight","indexOf","first_name","utils","DateFnsUtils","format","KeyboardButtonProps","multiline","rowsMax","JSON","stringify","getFullYear","getMonth","getDate","height","show","showCancel","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onConfirm","onCancel"],"mappings":"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","file":"static/js/9.65878987.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n    const arr = sub.split(\"-\");\r\n    if (arr.length > 1) {\r\n        return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n    } else {\r\n        return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n    }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n    if (index === 0) {\r\n        return '#/';\r\n    } else {\r\n        return '#/' + path.split(sub)[0] + sub;\r\n    }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n    const path = match.path.substr(1);\r\n    const subPath = path.split('/');\r\n    return (\r\n        <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n            <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n            <Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n                {subPath.map((sub, index) => {\r\n                        return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                               tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                               href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n                    }\r\n                )}\r\n            </Breadcrumb>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","import React, {useState} from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n\r\nconst CardEditMenu = (props) => {\r\n    \r\n    const [menuState, setMenuState] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(undefined);\r\n    const {selectedData, onSelectRow, menu_rows} = props;\r\n    const options = menu_rows ? menu_rows : ([\r\n        {content: 'View', id: 0},\r\n        {content: 'Modify', id: 1},\r\n        {content: 'Delete', id: 2}\r\n    ]);\r\n\r\n    const onOptionMenuSelect = event => {\r\n      setMenuState(true);\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleRequestClose = () => {\r\n      setMenuState(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton onClick={onOptionMenuSelect}>\r\n            <i className=\"zmdi zmdi-more-vert\"/></IconButton>\r\n\r\n            <Menu \r\n                anchorEl={anchorEl}\r\n                open={menuState}\r\n                onClose={handleRequestClose}\r\n                key={selectedData.id}\r\n                MenuListProps={{\r\n                    style: {\r\n                        width: 150,\r\n                        paddingTop: 0,\r\n                        paddingBottom: 0\r\n                    },\r\n                }}>\r\n\r\n                {options.map(option =>\r\n                    <MenuItem key={selectedData + \"-\" + option.content} \r\n                        onClick={() => {\r\n                            handleRequestClose();\r\n                            onSelectRow(selectedData, option.id);\r\n                        } }>\r\n                        {option.content}\r\n                    </MenuItem>\r\n                )}\r\n            </Menu>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardEditMenu;\r\n","import React from 'react';\r\n\r\nimport CardEditMenu from './CardEditMenu'\r\n\r\nconst SiteTableCell = (props) => {\r\n\r\n    const {id, site_name, city, address, postcode, survey_date} = props.data;\r\n    const {onSelectSite} = props;\r\n    const options = ([\r\n        {content: 'Modify', id: 1},\r\n        {content: 'Delete', id: 2}\r\n    ]);\r\n\r\n    return (\r\n        <tr\r\n            tabIndex={-1}\r\n            key={id}\r\n        >\r\n            <td>{site_name}</td>\r\n            <td>{city}</td>\r\n            <td>{address}</td>\r\n            <td>{postcode}</td>\r\n            <td>{survey_date}</td>\r\n            <td className=\"text-right\">\r\n                <CardEditMenu key={id} selectedData={id} onSelectRow={onSelectSite} menu_rows={options}/>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default SiteTableCell;\r\n","import React from 'react';\r\nimport SiteTableCell from './SiteTableCell';\r\n\r\nconst SiteTable = (props) => {\r\n\r\n    const {onSelectSite} = props;\r\n\r\n    return (\r\n        props.Sites && (\r\n            <div className=\"table-responsive-material\">\r\n            <table className=\"default-table table-unbordered table table-sm table-hover\">\r\n                <thead className=\"th-border-b\">\r\n                <tr>\r\n                    <th>Site Name</th>\r\n                    <th>City</th>\r\n                    <th>Address</th>\r\n                    <th>Postcode</th>\r\n                    <th>Survey Date</th>\r\n                    <th className=\"text-right\">Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {props.Sites.map(data => {\r\n                    return (\r\n                        <SiteTableCell key={data.id} data={data} onSelectSite={onSelectSite}/>\r\n                    );\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        )\r\n    );\r\n};\r\n\r\nexport default SiteTable;","import React from 'react';\r\nimport CardEditMenu from './CardEditMenu'\r\n\r\nconst RoomTableCell = (props) => {\r\n\r\n    const {id, room_number, site_name, ceiling_height, ceiling, wall} = props.data;\r\n    const {onSelectRoom} = props;\r\n    const options = ([\r\n        {content: 'View', id: 0},\r\n        {content: 'Modify', id: 1},\r\n        {content: 'Delete', id: 2}\r\n    ]);\r\n\r\n    return (\r\n        <tr\r\n            tabIndex={-1}\r\n            key={id}\r\n        >\r\n            <td>{room_number}</td>\r\n            <td>{site_name}</td>\r\n            <td>{ceiling_height}</td>\r\n            <td>{ceiling}</td>\r\n            <td>{wall}</td>\r\n            <td className=\"text-right\">\r\n                <CardEditMenu key={id} selectedData={id} onSelectRow={onSelectRoom} menu_rows={options}/>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default RoomTableCell;\r\n","import React from 'react';\r\nimport RoomTableCell from './RoomTableCell';\r\n\r\nconst RoomTable = (props) => {\r\n\r\n    const {onSelectRoom} = props;\r\n\r\n    return (\r\n        props.Rooms && (\r\n            <div className=\"table-responsive-material\">\r\n                <table className=\"default-table table-unbordered table table-sm table-hover\">\r\n                    <thead className=\"th-border-b\">\r\n                    <tr>\r\n                        <th>Room</th>\r\n                        <th>Site</th>\r\n                        <th>Ceiling Height</th>\r\n                        <th>Ceiling</th>\r\n                        <th>Walls</th>\r\n                        <th className=\"text-right\">Actions</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {props.Rooms.map(data => {\r\n                        return (\r\n                            <RoomTableCell key={data.id} data={data} onSelectRoom={onSelectRoom}/>\r\n                        );\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\nexport default RoomTable;","import React from 'react';\r\n\r\nimport CardEditMenu from './CardEditMenu'\r\n\r\nconst TaskTableCell = (props) => {\r\n  \r\n    const {id, task, assign_to, priority, due_by_date} = props.data;\r\n    //console.log(\"ass\", assign_to);\r\n    const {onSelectTask} = props;\r\n    const options = ([\r\n        {content: 'Modify', id: 1},\r\n        {content: 'Delete', id: 2}\r\n    ]);\r\n\r\n    return (\r\n        <tr\r\n            tabIndex={-1}\r\n            key={id}\r\n        >\r\n            <td>{task}</td>\r\n            <td>{assign_to.join(', ')}</td>\r\n            <td>{priority > 0 ? 'High':'Low'}</td>\r\n            <td>{due_by_date}</td>\r\n            <td className=\"text-right\">\r\n                <CardEditMenu key={id} selectedData={id} onSelectRow={onSelectTask} menu_rows={options}/>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default TaskTableCell;\r\n","import React from 'react';\r\nimport TaskTableCell from './TaskTableCell';\r\n\r\nconst TaskTable = (props) => {\r\n\r\n    const {onSelectTask} = props;\r\n\r\n    return (\r\n\r\n        props.Tasks && (\r\n            <div className=\"table-responsive-material\">\r\n                <table className=\"default-table table-unbordered table table-sm table-hover\">\r\n                    <thead className=\"th-border-b\">\r\n                    <tr>\r\n                        <th>Task</th>\r\n                        <th>Assigned To</th>\r\n                        <th>Priority</th>\r\n                        <th>Due Date</th>\r\n                        <th className=\"text-right\">Actions</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {props.Tasks.map(data => {\r\n                        return (\r\n                            <TaskTableCell key={data.id} data={data} onSelectTask={onSelectTask}/>\r\n                        );\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\nexport default TaskTable;","import React from 'react';\r\n\r\nimport CardEditMenu from './CardEditMenu'\r\n\r\nconst ProductTableCell = (props) => {\r\n\r\n    const {id, room_name, product_name,action, qty, to_site_name, to_room_name, description} = props.data;\r\n    const {onSelectProduct} = props;\r\n    const options = ([\r\n        {content: 'Modify', id: 1},\r\n        {content: 'Delete', id: 2}\r\n    ]);\r\n\r\n    return (\r\n        <tr\r\n            tabIndex={-1}\r\n            key={id}\r\n        >\r\n            <td>{product_name}</td>\r\n            <td>{action==0?'New Porduct':action==1?'Dispose':'Move To Room'}</td>\r\n            <td>{room_name}</td>\r\n            <td>{qty}</td>\r\n            <td>{to_site_name}</td>\r\n            <td>{to_room_name}</td>\r\n            <td>{description}</td>\r\n            <td className=\"text-right\">\r\n                <CardEditMenu key={id} selectedData={id} onSelectRow={onSelectProduct} menu_rows={options}/>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default ProductTableCell;\r\n","import React from 'react';\r\nimport ProductTableCell from './ProductTableCell';\r\n\r\nconst ProductTable = (props) => {\r\n\r\n    const {onSelectProduct} = props;\r\n\r\n    return (\r\n        props.Products && (\r\n            <div className=\"table-responsive-material\">\r\n            <table className=\"default-table table-unbordered table table-sm table-hover\">\r\n                <thead className=\"th-border-b\">\r\n                <tr>\r\n                    <th>Product Name</th>\r\n                    <th>Product Action</th>\r\n                    <th>Room Number</th>\r\n                    <th>qty</th>\r\n                    <th>To Site</th>\r\n                    <th>To Room</th>\r\n                    <th>Description</th>\r\n                    <th className=\"text-right\">Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {props.Products.map(data => {\r\n                    return (\r\n                        <ProductTableCell key={data.id} data={data} onSelectProduct={onSelectProduct}/>\r\n                    );\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        )\r\n    );\r\n};\r\n\r\nexport default ProductTable;","import React, {useState, useEffect} from 'react';\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport ContainerHeader from 'components/ContainerHeader/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport SiteTable from \"./SiteTable\"\r\nimport RoomTable from \"./RoomTable\";\r\nimport TaskTable from \"./TaskTable\";\r\nimport ProductTable from \"./ProductTable\";\r\nimport {base_url, public_url, $http} from \"config\";\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Alert} from 'reactstrap';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport {Modal, ModalHeader} from 'reactstrap';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\nimport AttachFile from '@material-ui/icons/AttachFile';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nconst SiteSurveyInfo = (props) => {\r\n    \r\n    const project_id = props.location.state.project_id;\r\n    const room_id = props.location.state.id;\r\n    const [room, setRoom] = useState(null);\r\n    const [room_img, setRoomImg] = useState([]);\r\n    const [room_img_len, setRoomImgLen] = useState(0);\r\n    const [room_img_url, setRoomImgUrl] = useState([]);\r\n    //const [Projects, setProjects] = useState([]);\r\n    const [Tasks, setTasks] = useState([]);\r\n    const [Products, setProducts] = useState([]);\r\n    const [warning, setWarning]=useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n    const History = useHistory();\r\n    const {width} = useSelector(({settings}) => settings);\r\n\r\n    const [task_open, setTaskOpen] = useState(false);\r\n    const [task_id, setTaskId] = useState(null);\r\n    const [task_sitename, setTaskSiteName] = useState(\"\");\r\n    const [task_project, setTaskProject] = useState(\"\");\r\n    const [task_room, setTaskRoom] = useState(\"\");\r\n    const [task_assignto, setTaskAssignto] = useState([]);\r\n    const [task_duebydate, setTaskDuebydate] = useState(new Date());\r\n    const [task_title, setTaskTitle] = useState(\"\");\r\n    const [task_des, setTaskDes] = useState(\"\");\r\n    const [task_img, setTaskImg] = useState(null);\r\n    const [TaskImgUrl, setTaskImgUrl] = useState('');\r\n    const [task_priority, setTaskPriority] = useState(0);\r\n    const [task_sitename_rows, setTaskSiteNames] = useState([]);\r\n    const [task_project_rows, setTaskProjects] = useState([]);\r\n    const [task_room_rows, setTaskRooms] = useState([]);\r\n    const [task_assignto_rows, setTaskAssigntos] = useState([]);\r\n\r\n    const [product_open, setProductOpen] = useState(false);\r\n    const [product_id, setProductId] = useState(null);\r\n    const [product_name, setProductName] = useState(\"\");\r\n    const [product_roomname_rows, setProductRoomNames] = useState([]);\r\n    const [product_action, setProductAction] = useState(\"\");\r\n    const [product_description, setProductDescription] = useState('');\r\n    const [product_qty, setProductQty] = useState('');\r\n    const [product_sitename_rows, setProductSiteNames] = useState([]);\r\n    const [product_tosite_id, setProductToSiteId] = useState(\"\");\r\n    const [product_toroom_id, setProductToRoomId] = useState(\"\");\r\n    const [product_file, setProductFile] = useState(null);\r\n    const [product_fileurl, setProductFileUrl] = useState(\"\");\r\n    \r\n    \r\n    const task_priority_rows = ([\r\n        {id: 0, content: 'Low'},\r\n        {id: 1, content: 'High'}\r\n    ]);\r\n    const product_action_rows = ([\r\n        {id: 0, content: 'New Product'},\r\n        {id: 1, content: 'Dispose'},\r\n        {id: 2, content: 'Move To Room'}\r\n    ]);\r\n   \r\n    useEffect(() => {\r\n        Init_data();\r\n    }, [room_id]);\r\n\r\n    const Init_data = () => {\r\n        if (room_id > 0) {\r\n            $http.get(base_url + \"room/roomInfo\", {params : {id: room_id,project_id:project_id}})\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setRoom(response.data.room);\r\n                setTasks(response.data.tasks);\r\n                setProducts(response.data.products);\r\n                var img_url = [];\r\n                if(response.data.room.img_files.length > 0){\r\n                    setRoomImgLen(response.data.room.img_files.length);\r\n                    (response.data.room.img_files).map(url =>{\r\n                        img_url.push(public_url + 'upload/img/' + url.img_name);                            \r\n                    })\r\n                }\r\n                setRoomImgUrl(img_url);\r\n                setLoader(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    const uploadMultipleFiles=(e)=>{\r\n        var fileObj = [];\r\n        var img_url = [...room_img_url]\r\n        fileObj.push(e.target.files);\r\n        for (let i = 0; i < fileObj[0].length; i++) {\r\n            img_url.push(URL.createObjectURL(fileObj[0][i]));\r\n        }\r\n        setRoomImgUrl(img_url);\r\n        fileObj = [...room_img];\r\n        for(let i = 0; i < e.target.files.length; i++) {\r\n            fileObj.push(e.target.files[i]);\r\n        }\r\n        setRoomImg(fileObj);\r\n        console.log(room_img);\r\n    }\r\n    const removeImage=(item)=>{\r\n        var img_url = [...room_img_url]\r\n        img_url.splice(item, 1)\r\n        setRoomImgUrl(img_url);\r\n        if(item < room_img_len)\r\n            setRoomImgLen(room_img_len-1);\r\n        else{\r\n            img_url = [...room_img]\r\n            img_url.splice(item-room_img_len, 1)\r\n            setRoomImg(img_url);\r\n        }\r\n    }\r\n    const ModifyRoom = (room_imgs,index) => {\r\n        History.push({\r\n            pathname: '/app/sitesurvey/live/sticker',\r\n            state: {\r\n                room_id: room_id,\r\n                img_id: room_imgs[index].id,\r\n                img_url: room_imgs[index].img_name,\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n    const RoomSave = (index) => {\r\n        const frmData = new FormData();\r\n        frmData.append('project_id', project_id);\r\n        frmData.append('id', room_id);\r\n        frmData.append('site_id', room.site_id);\r\n        frmData.append('department_id', room.department_id);\r\n        frmData.append('building_id', room.building_id);\r\n        frmData.append('floor_id', room.floor_id);\r\n        frmData.append('room_number', room.room_number);\r\n        frmData.append('estimate_day', room.estimate_day);\r\n        frmData.append('estimate_time', room.estimate_hour);\r\n        frmData.append('ceiling_height', room.ceiling_height);\r\n        frmData.append('ceiling', room.ceiling);\r\n        frmData.append('wall', room.wall);\r\n        for (var i = 0; i < room_img.length; i++)\r\n            frmData.append('room_img['+i+']', room_img[i]);\r\n        frmData.append('img_array', room_img_url);\r\n        frmData.append('asbestos', room.asbestos);\r\n        frmData.append('notes', room.notes);\r\n        frmData.append('customer_id', room.company_id);\r\n\r\n        $http.post(base_url + \"room/updateRoom\", frmData)\r\n        .then((response) => {\r\n            if (response.data.status === \"success\") {\r\n                NotificationManager.success(response.data.msg, \"Success!\", 5000, () => {\r\n                });\r\n                if(index >= 0) {\r\n                    ModifyRoom(response.data.rooms,index)\r\n                }\r\n                else \r\n                    Init_data();\r\n            } else if (response.data.status === \"error\") {\r\n                NotificationManager.error(response.data.msg, \"Error!\", 5000, () => {\r\n                });\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(\"error:\", error);\r\n        })\r\n    }\r\n    \r\n    const ClickModify = () => {\r\n        History.push({\r\n            pathname: '/app/sitesurvey/live/room',\r\n            state: {\r\n                id: room_id,\r\n                project_id:project_id\r\n            }\r\n        })\r\n    }\r\n    const deleteFile = () => {\r\n        if (room_id > 0) {\r\n            $http.post(base_url + \"room/deleteRoom\", {id: room_id})\r\n            .then((response) => {\r\n                History.push('/app/sitesurvey/live/info');\r\n            })\r\n        }\r\n        setWarning(false);\r\n    };\r\n    const onCancelDelete = () => {\r\n        setWarning(false);\r\n    };\r\n   \r\n    const onSelectTask = (data, index) => {\r\n        if (index === 1) {\r\n            TaskModalOpen(data);\r\n        } else if (index === 2) {\r\n            $http.post(base_url + \"task/deleteTask\", {id: data})\r\n            .then((response) => {\r\n                if (response.data.status===\"success\") {\r\n                    NotificationManager.info(\"You removed selected task\");\r\n                    Init_data();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const TaskModalOpen = (data) => {\r\n        setTaskId(data);\r\n        $http.get(base_url + \"task/getTaskInfo\", {params : {id: data, room_id: room_id}})\r\n        .then((response) => {\r\n            setTaskSiteNames(response.data.customer_site);\r\n            setTaskProjects(response.data.project);\r\n            setTaskRooms(response.data.room);\r\n            setTaskAssigntos(response.data.assign_to);\r\n            if (data > 0) {\r\n                setTaskSiteName(response.data.task.site_id);\r\n                setTaskProject(response.data.task.project_id);\r\n                setTaskRoom(response.data.task.room_id);\r\n                setTaskAssignto(response.data.task.assign_to);\r\n                setTaskTitle(response.data.task.task);\r\n                setTaskDes(response.data.task.description);\r\n                setTaskPriority(response.data.task.priority);\r\n                setTaskDuebydate(new Date(response.data.task.due_by_date));\r\n                setTaskImgUrl(response.data.task.task_img );\r\n            }\r\n           \r\n            setTaskOpen(true);\r\n        })\r\n    }\r\n\r\n    const TaskModalClose = () => {\r\n        setTaskOpen(false);\r\n    }\r\n\r\n    const TaskModalSave = (data) => {\r\n        TaskModalClose();\r\n        setTaskId(data);\r\n        const frmData = new FormData();\r\n\r\n        frmData.append('id', task_id);\r\n        frmData.append('site_id', task_sitename);\r\n        frmData.append('project_id', task_project);\r\n        frmData.append('room_id', task_room);\r\n        frmData.append('assign_to', JSON.stringify(task_assignto));\r\n        frmData.append('task', task_title);\r\n        frmData.append('description', task_des);\r\n        frmData.append('task_img', task_img);\r\n        frmData.append('priority', task_priority);\r\n        frmData.append('due_by_date', \r\n            task_duebydate.getFullYear()+\"-\"+\r\n            (task_duebydate.getMonth()+1)+\"-\"+\r\n            task_duebydate.getDate());\r\n        if (project_id) {\r\n            frmData.append('project_id', project_id);\r\n            frmData.append('company_id', room.company_id);\r\n        }\r\n\r\n        $http.post(base_url + \"task/updateTask\", frmData)\r\n        .then((response) => {\r\n            if (response.data.status === \"success\") {\r\n                NotificationManager.success(response.data.msg, \"Success!\", 5000, () => {\r\n                });\r\n                Init_data();\r\n            } else if (response.data.status === \"error\") {\r\n                NotificationManager.error(response.data.msg, \"Error!\", 5000, () => {\r\n                });\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(\"error:\", error);\r\n        })\r\n    }\r\n\r\n    const onSelectProduct = (data, index) => {\r\n        if (index === 1) {\r\n            ProductModalOpen(data);\r\n        } else if (index === 2) {\r\n            $http.post(base_url + \"product/deleteProduct\", {id: data})\r\n            .then((response) => {\r\n                if (response.data.status===\"success\") {\r\n                    NotificationManager.info(\"You removed selected task\");\r\n                    Init_data();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const ProductModalOpen = (data) => {\r\n        setProductId(data);\r\n        $http.get(base_url + \"product/getProductInfo\", {params : {id: data, project_id: project_id}})\r\n        .then((response) => {\r\n            setProductSiteNames(response.data.sites);\r\n            setProductRoomNames(response.data.rooms);\r\n            if (data > 0) {\r\n                setProductName(response.data.product.product_name);\r\n                setProductAction(response.data.product.action);\r\n                setProductQty(response.data.product.qty);\r\n                setProductDescription(response.data.product.description);\r\n                setProductToRoomId(response.data.product.to_room_id);\r\n                setProductToSiteId(response.data.product.to_site_id);\r\n                setProductFileUrl(response.data.product.upload_file);\r\n            }\r\n           \r\n            setProductOpen(true);\r\n        })\r\n    }\r\n\r\n    const ProductModalClose = () => {\r\n        setProductOpen(false);\r\n    }\r\n\r\n    const ProductModalSave = (data) => {\r\n        ProductModalClose();\r\n        setProductId(data);\r\n        const frmData = new FormData();\r\n\r\n        frmData.append('id', product_id);\r\n        frmData.append('room_id', room_id);\r\n        frmData.append('product_name', product_name);\r\n        frmData.append('action', product_action);\r\n        frmData.append('qty', product_qty);\r\n        frmData.append('description', product_description);\r\n        frmData.append('to_room_id', product_toroom_id);\r\n        frmData.append('to_site_id', product_tosite_id);\r\n        frmData.append('upload_file', product_file);\r\n        $http.post(base_url + \"product/updateProduct\", frmData)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            if (response.data.status === \"success\") {\r\n                NotificationManager.success(response.data.msg, \"Success!\", 5000, () => {\r\n                });\r\n                Init_data();\r\n            } else if (response.data.status === \"error\") {\r\n                NotificationManager.error(response.data.msg, \"Error!\", 5000, () => {\r\n                });\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(\"error:\", error);\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <ContainerHeader match={props.match} title={<IntlMessages id=\"sidebar.sitesurvey\"/>}/>\r\n            { loader ? (\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"jr-card\">\r\n                            <div className=\"row\">\r\n                                \r\n                                <div className=\"col-xl-5 col-lg-5 col-md-6 col-sm-6 col-12\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-right\">\r\n                                            <h2><strong>Room Number</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-left\">\r\n                                            <h2>{room.room_number}</h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-right\">\r\n                                            <h2><strong>Company Name</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-left\">\r\n                                            <h2>{room.company_name}</h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-right\">\r\n                                            <h2><strong>Project_name</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-left\">\r\n                                            <h2>{room.project_name}</h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-right\">\r\n                                            <h2><strong>Ceiling_height</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-left\">\r\n                                            <h2>{room.ceiling_height}</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-xl-1 col-lg-1 col-md-6 col-sm-6 col-12\"></div>\r\n                                <div className=\"col-xl-5 col-lg-5 col-md-6 col-sm-6 col-12\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-center\">\r\n                                            <h2><strong>wall</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-left\">\r\n                                            <h2>{room.wall}</h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-center\">\r\n                                            <h2><strong>asbestos</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-left\">\r\n                                            <h2>{room.asbestos?'yes':'no'}</h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-center\">\r\n                                            <h2><strong>Install Eatimate</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-left\">\r\n                                            <h2>{room.estimate_day}.{room.estimate_time}{'Days'}</h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-center\">\r\n                                            <h2><strong>Notes</strong></h2>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 text-left\">\r\n                                            <h2>{room.notes}</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>                               \r\n                                <ul className=\"list-inline d-sm-flex flex-sm-row jr-mbtn-list mb-0 jr-featured-content-right\">\r\n                                    <li><Button color=\"primary\" onClick={() => ClickModify()}><IntlMessages id=\"button.modify\"/></Button></li>\r\n                                    <li><Button color=\"secondary\" onClick={() => setWarning(true)}><IntlMessages id=\"button.delete\"/></Button></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"jr-card\">\r\n                            <div className=\"col-md-12 col-12 my-4 text-right\">\r\n                                    <input type=\"file\" id=\"room_img\" accept=\"image/*\" multiple \r\n                                        name=\"room_img[]\" style={{display: \"none\"}}\r\n                                        onChange={(event) => {\r\n                                            uploadMultipleFiles(event);\r\n                                            //setRoomImg(event.target.files[0]);\r\n                                        }}/>\r\n                                    <Button className=\"jr-btn\" color=\"primary\"\r\n                                        variant=\"contained\" onClick={(e)=>{document.getElementById('room_img').click()}}>\r\n                                        <AttachFile/> Add Image\r\n                                    </Button>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                {room_img_url.map( (url,index) => \r\n                                    <div className=\"col-xl-3 col-lg-4 col-md-4 col-6\" key={index}>\r\n                                        <div className=\"jr-card pb-2\">\r\n                                            <div className=\"jr-card-thumb\">\r\n                                                <img className=\"card-img-top img-fluid\" alt=\"products\" src={url}/>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"jr-card-social text-center\">\r\n                                                <Fab className=\"jr-fab-btn bg-light-blue accent-2 text-white\" \r\n                                                    onClick = {() => RoomSave(index)}>\r\n                                                    <i className=\"zmdi zmdi-puzzle-piece zmdi-hc-2x\"/>\r\n                                                </Fab>\r\n                                                <Fab className=\"jr-fab-btn bg-light-blue accent-2 text-white\"  onClick = {()=>removeImage(index)}>\r\n                                                    <i className=\"zmdi zmdi-delete zmdi-hc-2x\"/>\r\n                                                </Fab>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <Button color=\"primary\" onClick={() => RoomSave()}><IntlMessages id=\"button.save\"/></Button>\r\n                                </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-12\">\r\n                        <div className=\"jr-card\">\r\n                            <div className=\"jr-card-header d-flex align-items-center\">\r\n                                <h3 className=\"mb-0\"><IntlMessages id=\"sidebar.customers.products\"/></h3>\r\n                                <div className=\"spacer\"/>\r\n                                <div className=\"actions\">\r\n                                    <Tooltip title=\"New Site\">\r\n                                    <IconButton aria-label=\"New Site\" onClick={() => ProductModalOpen(null)}>\r\n                                        <PlaylistPlayIcon/>\r\n                                    </IconButton>\r\n                                    </Tooltip>\r\n                                </div>\r\n                            </div>\r\n                            <ProductTable Products={Products} onSelectProduct={onSelectProduct}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"jr-card\">\r\n                            <div className=\"jr-card-header d-flex align-items-center\">\r\n                                <h3 className=\"mb-0\"><IntlMessages id=\"sidebar.customers.task\"/></h3>\r\n                                <div className=\"spacer\"/>\r\n                                <div className=\"actions\">\r\n                                    <Tooltip title=\"New Task\">\r\n                                    <IconButton aria-label=\"New Task\" onClick={() => TaskModalOpen(null)}>\r\n                                        <PlaylistPlayIcon/>\r\n                                    </IconButton>\r\n                                    </Tooltip>\r\n                                </div>\r\n                            </div>\r\n                            <TaskTable Tasks={Tasks} onSelectTask={onSelectTask}/>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                    <Modal key=\"product-save\" className=\"modal-box\" toggle={ProductModalClose} isOpen={product_open}>\r\n                        <ModalHeader>{product_id ? 'Modify Product':'Add Product'}\r\n                            <IconButton className=\"text-grey\"\r\n                                        onClick={ProductModalClose}>\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                        </ModalHeader>\r\n                        <div className=\"modal-box-content\">\r\n                            <div className=\"row\">                             \r\n                               \r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField\r\n                                        id=\"product_roomname\"\r\n                                        select\r\n                                        label=\"Room Name\"\r\n                                        value={room_id}\r\n                                        //onChange={(event)=>setProductRoomId(event.target.value)}\r\n                                        SelectProps={{}}\r\n                                        helperText=\"Please select Room Name\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        disabled\r\n                                    >\r\n                                        {product_roomname_rows.map(option => (\r\n                                            <MenuItem key={option.id} value={option.id}>\r\n                                                {option.room_number}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField \r\n                                        id=\"product_name\"\r\n                                        label=\"Name\"\r\n                                        value={product_name}\r\n                                        onChange={(event) => setProductName(event.target.value)}\r\n                                        margin=\"normal\"\r\n                                        helperText=\"Please Enter Name\"\r\n                                        fullWidth\r\n                                        />\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField \r\n                                        id=\"product_qty\"\r\n                                        label=\"Qty\"\r\n                                        value={product_qty}\r\n                                        onChange={(event) => setProductQty(event.target.value)}\r\n                                        margin=\"normal\"\r\n                                        helperText=\"Please Enter Qty\"\r\n                                        fullWidth\r\n                                        />\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField \r\n                                        id=\"product_description\"\r\n                                        label=\"Description\"\r\n                                        value={product_description}\r\n                                        onChange={(event) => setProductDescription(event.target.value)}\r\n                                        margin=\"normal\"\r\n                                        helperText=\"Please Enter Description\"\r\n                                        fullWidth\r\n                                        />\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField\r\n                                        id=\"product_action\"\r\n                                        select\r\n                                        label=\"Action\"\r\n                                        value={product_action}\r\n                                        onChange={(event)=>setProductAction(event.target.value)}\r\n                                        SelectProps={{}}\r\n                                        helperText=\"Please select action\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                    >\r\n                                        {product_action_rows.map(option => (\r\n                                            <MenuItem key={option.id} value={option.id}>\r\n                                                {option.content}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField\r\n                                        id=\"product_tosite\"\r\n                                        select\r\n                                        label=\"To Site\"\r\n                                        value={product_tosite_id}\r\n                                        onChange={(event)=>setProductToSiteId(event.target.value)}\r\n                                        SelectProps={{}}\r\n                                        helperText=\"Please select site\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                    >\r\n                                        {product_sitename_rows.map(option => (\r\n                                            <MenuItem key={option.id} value={option.id}>\r\n                                                {option.site_name}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField\r\n                                        id=\"product_toroom\"\r\n                                        select\r\n                                        label=\"Room\"\r\n                                        value={product_toroom_id}\r\n                                        onChange={(event)=>setProductToRoomId(event.target.value)}\r\n                                        SelectProps={{}}\r\n                                        helperText=\"Please select To room\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                    >\r\n                                        {product_roomname_rows.map(option => (\r\n                                            <MenuItem key={option.id} value={option.id}>\r\n                                                {option.room_number}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-md-6 col-12 d-flex align-items-center\">\r\n                                    <input type=\"file\" id=\"upload_file\" \r\n                                        accept=\"application/msword, application/vnd.ms-excel, \r\n                                        application/vnd.ms-powerpoint,text/plain, application/pdf\" \r\n                                        name=\"upload_file\" style={{display: \"none\"}}\r\n                                        onChange={(event) => {\r\n                                            setProductFile(event.target.files[0]);\r\n                                            setProductFileUrl(event.target.files[0].name);\r\n                                        }}/>\r\n                                    <Button className=\"attach-file jr-btn \" color = \"primary\"\r\n                                        variant=\"contained\" onClick={(e)=>{document.getElementById('upload_file').click()}}>\r\n                                        <AttachFile/> Upload File\r\n                                    </Button>\r\n                                    <h3>{product_fileurl }</h3>\r\n                                </div>\r\n                                \r\n                                   \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-box-footer d-flex flex-row\">\r\n                            <Button onClick={ProductModalClose} color=\"secondary\">\r\n                            Cancel\r\n                            </Button>\r\n                            <Button onClick={ProductModalSave} color=\"primary\">\r\n                            Save\r\n                            </Button>\r\n                        </div>\r\n                    </Modal>\r\n                    <Modal key=\"task-save\" className=\"modal-box\" toggle={TaskModalClose} isOpen={task_open}>\r\n                        <ModalHeader>{task_id ? 'Modify Task':'Add Task'}\r\n                            <IconButton className=\"text-grey\"\r\n                                        onClick={TaskModalClose}>\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                        </ModalHeader>\r\n                        <div className=\"modal-box-content\">\r\n                            <div className=\"row\">                             \r\n                                \r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField\r\n                                        id=\"task_sitename\"\r\n                                        select\r\n                                        label=\"Site Name\"\r\n                                        value={room.site_id}\r\n                                        onChange={(event)=>setTaskSiteName(event.target.value)}\r\n                                        SelectProps={{}}\r\n                                        helperText=\"Please select Site Name\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                    >\r\n                                        {task_sitename_rows.map(option => (\r\n                                            <MenuItem key={option.id} value={option.id}>\r\n                                                {option.site_name}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField\r\n                                        id=\"task_room\"\r\n                                        select\r\n                                        label=\"Room\"\r\n                                        value={room_id}\r\n                                        onChange={(event)=>setTaskRoom(event.target.value)}\r\n                                        SelectProps={{}}\r\n                                        helperText=\"Please select Room\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                    >\r\n                                        {task_room_rows.map(option => (\r\n                                            <MenuItem key={option.id} value={option.id}>\r\n                                                {option.room_number}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12 d-flex align-items-center\">\r\n                                    <FormControl className=\"w-100\">\r\n                                        <InputLabel htmlFor=\"task-multiple\">Assign To</InputLabel>\r\n                                        <Select\r\n                                            key=\"task_assignto\"\r\n                                            multiple\r\n                                            value={task_assignto}\r\n                                            onChange={(event) => setTaskAssignto(event.target.value)}\r\n                                            input={<Input id=\"task-assign-to\"/>}\r\n                                            MenuProps={{\r\n                                                PaperProps: {\r\n                                                style: {\r\n                                                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                                                    width: 200,\r\n                                                },\r\n                                                },\r\n                                            }}\r\n                                            >\r\n                                            {task_assignto_rows.map(item => (\r\n                                                <MenuItem\r\n                                                key={item.id}\r\n                                                value={''+item.id}\r\n                                                style={{\r\n                                                    fontWeight: task_assignto_rows.indexOf(task_assignto_rows) !== -1 ? '500' : '400',\r\n                                                }}\r\n                                                >\r\n                                                {item.first_name}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                </div>\r\n                                <div className=\"col-md-6 col-6 d-flex align-items-center\">\r\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                        <KeyboardDatePicker\r\n                                            margin=\"normal\"\r\n                                            id=\"task_duebydate\"\r\n                                            label=\"Due by Date\"\r\n                                            format=\"MM/dd/yyyy\"\r\n                                            value={task_duebydate}\r\n                                            onChange={setTaskDuebydate}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                            helperText=\"Please Enter Due by Date\"\r\n                                            />\r\n                                    </MuiPickersUtilsProvider>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField \r\n                                        id=\"task_title\"\r\n                                        label=\"Task\"\r\n                                        value={task_title}\r\n                                        onChange={(event) => setTaskTitle(event.target.value)}\r\n                                        margin=\"normal\"\r\n                                        helperText=\"Please Enter Task\"\r\n                                        fullWidth\r\n                                        />\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField\r\n                                        id=\"task_des\"\r\n                                        label=\"Task Description\"\r\n                                        multiline\r\n                                        rowsMax=\"4\"\r\n                                        value={task_des}\r\n                                        onChange={(event) => setTaskDes(event.target.value)}\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <TextField\r\n                                        id=\"task_priority\"\r\n                                        select\r\n                                        label=\"Priority\"\r\n                                        value={task_priority}\r\n                                        onChange={(event)=>setTaskPriority(event.target.value)}\r\n                                        SelectProps={{}}\r\n                                        helperText=\"Please select Priority\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                    >\r\n                                        {task_priority_rows.map(option => (\r\n                                            <MenuItem key={option.id} value={option.id}>\r\n                                                {option.content}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12 d-flex align-items-center\">\r\n                                    <input type=\"file\" id=\"upload_doc\" \r\n                                        accept=\"application/msword, application/vnd.ms-excel, \r\n                                        application/vnd.ms-powerpoint,text/plain, application/pdf\" \r\n                                        name=\"upload_doc\" style={{display: \"none\"}}\r\n                                        onChange={(event) => {\r\n                                            setTaskImg(event.target.files[0]);\r\n                                            setTaskImgUrl(event.target.files[0].name);\r\n                                        }}/>\r\n                                    <Button className=\"attach-file jr-btn \" color = \"primary\"\r\n                                        variant=\"contained\" onClick={(e)=>{document.getElementById('upload_doc').click()}}>\r\n                                        <AttachFile/> Upload File\r\n                                    </Button>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12 d-flex align-items-center\">\r\n                                    <h2>{TaskImgUrl }</h2>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-box-footer d-flex flex-row\">\r\n                            <Button onClick={TaskModalClose} color=\"secondary\">\r\n                            Cancel\r\n                            </Button>\r\n                            <Button onClick={TaskModalSave} color=\"primary\">\r\n                            Save\r\n                            </Button>\r\n                        </div>\r\n                    </Modal>\r\n                    <NotificationContainer/>\r\n\r\n                </div>\r\n            ) :\r\n            (\r\n                <div className=\"loader-view\"\r\n                        style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n                    <CircularProgress/>\r\n                </div>                   \r\n            )}\r\n            <SweetAlert show={warning}\r\n                        warning\r\n                        showCancel\r\n                        confirmBtnText={<IntlMessages id=\"sweetAlerts.yesDeleteIt\"/>}\r\n                        confirmBtnBsStyle=\"danger\"\r\n                        cancelBtnBsStyle=\"default\"\r\n                        title={<IntlMessages id=\"sweetAlerts.areYouSure\"/>}\r\n                        onConfirm={deleteFile}\r\n                        onCancel={onCancelDelete}\r\n            >\r\n                You will not be able to recover this company!\r\n            </SweetAlert>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SiteSurveyInfo;"],"sourceRoot":""}