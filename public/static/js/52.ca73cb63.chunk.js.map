{"version":3,"sources":["app/routes/Stickers/routes/AddNew/index.js","components/ContainerHeader/index.js","components/CardBox/index.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js"],"names":["AddNew","props","useState","sticker_name","setStickerName","category","setCategory","upload_img","setUploadImg","ImageUrl","setImageUrl","status","setStatus","category_rows","setCategoryRows","History","useHistory","goback","setGoback","useEffect","$http","get","base_url","then","response","data","catch","error","className","match","title","id","alt","src","type","accept","name","style","display","onChange","event","e","preventDefault","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","changeImage","onClick","document","getElementById","click","styleName","autoComplete","label","value","margin","helperText","fullWidth","select","SelectProps","map","option","key","content","variant","color","offline_id","JSON","parse","localStorage","getItem","first_name","Date","getTime","frmData","FormData","append","post","navigator","onLine","push","pathname","state","NotificationManager","msg","caches","open","cache","fileName","put","Response","modify_data","category_id","stiker_img","res_data","stiker","j_Response","stringify","headers","clone","requestUrl","json","respon_data","item","stickers","find","unshift","jsonResponse","err","console","log","SaveSticker","show","warning","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onConfirm","go","getUrlString","path","sub","index","split","ContainerHeader","project_name","room_number","url_name","url","substr","subPath","splice","tag","active","length","href","arr","charAt","toUpperCase","slice","getDisplayString","CardBox","heading","children","cardStyle","childrenStyle","headerOutside","headingStyle","defaultProps","propTypes","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","node","Breadcrumb","Tag","ListTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","React","createElement","_extends","bool","BreadcrumbItem","undefined"],"mappings":"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","file":"static/js/52.ca73cb63.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ContainerHeader from 'components/ContainerHeader/index';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport IntlMessages from 'util/IntlMessages';\nimport CardBox from 'components/CardBox/index';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {base_url, $http} from \"config\";\nimport {useHistory} from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport SweetAlert from 'react-bootstrap-sweetalert'\n\nconst AddNew = (props) => {\n\n    const [sticker_name, setStickerName] = useState(\"\");\n    const [category, setCategory] = useState(0);\n    const [upload_img, setUploadImg] = useState(null);\n    const [ImageUrl, setImageUrl] = useState('https://via.placeholder.com/300x300');\n    const [status, setStatus] = useState(1);\n    const [category_rows, setCategoryRows] = useState([]);\n    const status_rows = ([\n        {id: 1, content: 'Active'},\n        {id: 0, content: 'Deactive'}\n    ]);\n    const History = useHistory();\n    const [goback, setGoback] = useState(false)\n\n    useEffect(() => {\n        $http.get(base_url + \"category/categoryList\")\n        .then((response) => {\n            setCategoryRows(response.data.category);\n        })\n        .catch((error) => {\n            setGoback(true)\n        })\n      \n    }, []);\n\n    const SaveSticker = () => {\n        let offline_id = JSON.parse(localStorage.getItem('user')).first_name+'_'+new Date().getTime();\n        const frmData = new FormData();\n        frmData.append('id', offline_id);\n        frmData.append('name', sticker_name);\n        frmData.append('category_id', category);\n        frmData.append('stiker_img', upload_img);\n        frmData.append('status', status);\n\n        $http.post(base_url + \"sticker/updateSticker\", frmData)\n        .then((response) => {\n            if (response.data.status === \"success\") {\n                // NotificationManager.success(response.data.msg, \"Success!\", 1000, () => {\n                // });\n                if(navigator.onLine)\n                    History.push({\n                        pathname: '/app/stickers/Categories',\n                        state: {id: response.data.id}\n                    })\n            } else if (response.data.status === \"error\") {\n                NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\n                });\n            }\n        }).catch((error)=>{\n            NotificationManager.error(error, \"Error!\", 1000, () => {\n            });\n        })\n\n        //update get request\n        if (!navigator.onLine){\n            caches.open('SirvezApp').then(function(cache){\n                let fileName = ''\n                if(upload_img)\n                {\n                    fileName = new Date().getTime()+'_new.jpeg';\n                    cache.put('/pixie/assets/images/stickers/'+ category + '/'+fileName, new Response(upload_img));\n                }\n                var modify_data = {\n                    id : offline_id,\n                    name : sticker_name,\n                    category_id : category,\n                    stiker_img : fileName,\n                }   \n                //save category_edit\n                \n                  let res_data = {stiker:modify_data}\n                  const j_Response = new Response(JSON.stringify(res_data), {\n                      headers: {\n                          'content-type': 'application/json'\n                      }\n                  });\n                  cache.put('/api/category/sticker/getStickerInfo?id='+offline_id, j_Response.clone());\n                \n                  \n                //save into list\n                const requestUrl = '/api/category/getCategoryInfo?id='+category;\n                cache.match(requestUrl)\n                .then(function(response) {return response ? response.json() : null})\n                .then(function(respon_data){\n                  if(respon_data ==null ) return\n                    let item = respon_data.stickers.find((item) => {return (item.id === offline_id)})\n                    if (item) {\n                        item.name = sticker_name\n                        item.category = category\n                        if(fileName!=='')\n                          item.stiker_img = fileName\n                    }\n                    else\n                    {\n                      respon_data.stickers.unshift(modify_data)\n                    }\n                    const jsonResponse = new Response(JSON.stringify(respon_data), {\n                        headers: {'content-type': 'application/json'}\n                    });\n                    cache.put(requestUrl, jsonResponse.clone())\n                    \n                })\n                \n            }).catch((err)=>{\n                console.log('cashe_error',err);\n            })\n          }\n\n    }\n    const changeImage = (e) =>{\n        e.preventDefault();\n    \n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.onloadend = () => {\n            setUploadImg(file);\n            setImageUrl(reader.result);\n        }\n        reader.readAsDataURL(file)\n    }\n    \n    return (\n        <div className=\"app-wrapper\">\n            <ContainerHeader match={props.match} title={<IntlMessages id=\"sidebar.stickers.addnew\"/>}/>\n            <div className=\"row\">\n              <div className=\"col-xl-3 col-lg-5 col-md-6 col-12\">\n                <div className=\"jr-card pb-2\">\n                    <div className=\"jr-card-thumb\">\n                        <img className=\"card-img-top img-fluid\" alt=\"products\" src={ImageUrl}/>\n                    </div>\n                    <input type=\"file\" id=\"add_img\" accept=\".svg\" \n                        name=\"add_img\" style={{display: \"none\"}}\n                        onChange={(event) => changeImage(event)}/>\n\n                    <div className=\"jr-card-social text-right\">\n                        <Fab className=\"jr-fab-btn bg-secondary text-white jr-btn-fab-xs mb-3\" \n                            onClick={(e)=>{document.getElementById('add_img').click()}}>\n                            <i className=\"zmdi zmdi-cloud-upload zmdi-hc-1x\"/>\n                        </Fab>\n                    </div>\n                </div>\n              </div>\n                <CardBox styleName=\"col-xl-9 col-lg-7 col-md-6 col-12\">\n                    <form className=\"row\" autoComplete=\"off\">\n                        <div className=\"col-md-6 col-12\">\n                            <TextField \n                                id=\"sticker_name\"\n                                label=\"Name\"\n                                value={sticker_name}\n                                onChange={(event) => setStickerName(event.target.value)}\n                                margin=\"normal\"\n                                helperText=\"Please Enter Name\"\n                                fullWidth\n                                />\n                        </div>\n                        <div className=\"col-md-6 col-12\">\n                            <TextField\n                                id=\"category\"\n                                select\n                                label=\"Category\"\n                                value={category}\n                                onChange={(event) => setCategory(event.target.value)}\n                                SelectProps={{}}\n                                helperText=\"Please select Category\"\n                                margin=\"normal\"\n                                fullWidth\n                            >\n                                {category_rows.map(option => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                        {option.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </div>\n                        <div className=\"col-md-6 col-12\">\n                            <TextField\n                                id=\"status\"\n                                select\n                                label=\"Status\"\n                                value={status}\n                                onChange={(event) => {setStatus(event.target.value)}}\n                                SelectProps={{}}\n                                helperText=\"Please select Status\"\n                                margin=\"normal\"\n                                fullWidth\n                            >\n                                {status_rows.map(option => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                        {option.content}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </div>\n                        <div className=\"col-md-12 col-12 text-right\">\n                            <Button variant=\"contained\" color=\"primary\" className=\"jr-btn\" \n                                onClick={() => SaveSticker()}>\n                                Save\n                            </Button>\n                        </div>\n                    </form>\n                </CardBox>\n            </div>\n            <NotificationContainer/>\n            <SweetAlert show={goback}\n                warning\n                confirmBtnText=\"Go Back\"\n                confirmBtnBsStyle=\"danger\"\n                cancelBtnBsStyle=\"default\"\n                title=\"Warning!\"\n                onConfirm={() => History.go(-1)}\n            >                \n            Data not cached, so you can not view this page.\n            </SweetAlert>\n\n        </div>\n    );\n}\n\nexport default AddNew;","import React from 'react';\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\n\nconst getDisplayString = (sub) => {\n    const arr = sub.split(\"-\");\n    if (arr.length > 1) {\n        return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\n    } else {\n        return sub.charAt(0).toUpperCase() + sub.slice(1)\n    }\n\n};\nconst getUrlString = (path, sub, index) => {\n    if (index === 0) {\n        return '/';\n    } else {\n        return '/' + path.split(sub)[0] + sub;\n    }\n};\n\nconst ContainerHeader = ({title, match,project_name,room_number}) => {\n    let url_name = [];\n    const path = match.url.substr(1);\n    const subPath = path.split('/');\n    subPath.map((sub,index)=>{\n        if(sub===''){\n            subPath.splice(index,1)\n        }\n        if(subPath[index-1] ==='live')\n            url_name[index] = project_name?project_name:''\n        else if(subPath[index-2] ==='live')\n            url_name[index] = room_number?room_number:''\n        else\n            url_name[index] = sub\n    })\n    return (\n        <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\n            <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\n\n            <Breadcrumb className=\"mb-0\" tag=\"nav\">\n                {subPath.map((sub, index) => {\n                        if(index ==0) return;\n                        return <BreadcrumbItem active={subPath.length === index + 1}\n                                            tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\n                                            href={getUrlString(path, sub, index)}>{getDisplayString(url_name[index])}</BreadcrumbItem>\n                    }\n                )}\n            </Breadcrumb>\n        </div>\n    )\n};\n\nexport default ContainerHeader;\n\n","import React from 'react';\n\nconst CardBox = ({heading, children, styleName, cardStyle, childrenStyle, headerOutside, headingStyle}) => {\n\n    return (\n        <div className={`${styleName}`}>\n            {headerOutside &&\n            <div className=\"jr-entry-header\">\n                <h3 className=\"entry-heading\">{heading}</h3>\n                {children.length > 1 && <div className=\"entry-description\">{children[0]}</div>}\n            </div>\n            }\n\n            <div className={`jr-card ${cardStyle}`}>\n                {!headerOutside &&\n                (heading &&\n                    <div className={`jr-card-header ${headingStyle}`}>\n                        <h3 className=\"card-heading\">{heading}</h3>\n                        {children.length > 1 && <div className=\"sub-heading\">{children[0]}</div>}\n                    </div>\n                )}\n                <div className={`jr-card-body ${childrenStyle}`}>\n                    {children.length > 1 ? children[1] : children}\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default CardBox;\n\nCardBox.defaultProps = {\n    cardStyle: '',\n    headingStyle: '',\n    childrenStyle: '',\n    styleName: 'col-lg-6 col-sm-12'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;"],"sourceRoot":""}