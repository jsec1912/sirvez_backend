{"version":3,"sources":["components/InfoCard/index.js","components/dashboard/Common/RecentActivities/index.js","../node_modules/reactstrap/es/Badge.js","app/routes/DashBoard/ProjectsCell.js","app/routes/DashBoard/ProjectsList.js","app/routes/DashBoard/TaskItem.js","app/routes/DashBoard/TaskList.js","app/routes/DashBoard/TaskFav.js","app/routes/DashBoard/index.js","components/ContainerHeader/index.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js"],"names":["hexToRgb","hex","alpha","replace","r","parseInt","length","slice","repeat","g","b","InfoCard","data","className","style","cursor","backgroundColor","color","boxShadow","icon","title","subTitle","defaultProps","styleName","RecentActivities","recentData","notification","current_time","created_date","project_name","room_number","room_id","project_id","first_name","last_name","notice_type","user_img","icon_image","icon_color","description","arr","split","current","Date","getTime","created","diff_time","Math","floor","diff_min","diff_hour","diff_day","History","useHistory","onClick","push","pathname","Avatar","alt","src","public_url","propTypes","PropTypes","string","pill","bool","tag","tagPropType","innerRef","oneOfType","object","func","children","node","cssModule","Badge","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","href","React","createElement","_extends","ref","ProjectsCell","id","company_name","survey_start_date","room_count","projectClick","selectProject","key","width","ProjectsList","height","overflow","scope","CustomScrollbars","map","TaskItem","SortableElement","Task","onTaskSelect","onTaskChecked","onMarkAsStart","useState","favourite","archived","setArchived","Checkbox","checked","event","value","IconButton","task","profile_pic","TaskList","SortableContainer","Tasks","filter","item","index","TaskFav","useSelector","settings","state","useDragHandle","DashBoard","loader","setLoader","Lives","setLive","Messages","setMessage","RecentMessages","setRecentMessage","setTask","TasksFavourite","setTaskFavourite","Projects","setProjects","isFirst","localStorage","getItem","warning","nowuser","JSON","parse","useEffect","Init_data","setItem","go","$http","get","base_url","then","response","lives","tasks","messages","recent_messages","tasks_favourite","project_list","catch","error","NotificationManager","dispatch","useDispatch","userSignOut","cardData","user_type","url","ContainerHeader","match","IntlMessages","CardHeader","heading","CircularProgress","show","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onConfirm","getUrlString","path","sub","url_name","substr","subPath","splice","active","charAt","toUpperCase","getDisplayString","listTag","listClassName","Breadcrumb","ListTag","label","listClasses","BreadcrumbItem","undefined"],"mappings":"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","file":"static/js/58.24da8c9d.chunk.js","sourcesContent":["import React from 'react';\n\nfunction hexToRgb(hex, alpha) {\n    hex = hex.replace('#', '');\n    let r = parseInt(hex.length === 3 ? hex.slice(0, 1).repeat(2) : hex.slice(0, 2), 16);\n    let g = parseInt(hex.length === 3 ? hex.slice(1, 2).repeat(2) : hex.slice(2, 4), 16);\n    let b = parseInt(hex.length === 3 ? hex.slice(2, 3).repeat(2) : hex.slice(4, 6), 16);\n    if (alpha) {\n        return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n    } else {\n        return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n    }\n}\n\nconst InfoCard = ({data}) => {\n    return (\n        <div className=\"jr-card net-chart\" style={{cursor: 'pointer'}}>\n            <div className=\"jr-card-thumb\"\n                 style={{\n                     backgroundColor: data.color,\n                     boxShadow: `0 6px 20px 0 ${hexToRgb(data.color, 0.19)},0 8px 17px 0 ${hexToRgb(data.color, 0.20)}`\n                 }}>\n                <i className={`zmdi zmdi-${data.icon}`}/>\n            </div>\n            <div className=\"jr-card-body br-break\">\n                <h1 className=\"mb-0\"><strong>{data.title}</strong></h1>\n                <p className=\"mb-0\"><strong>{data.subTitle}</strong></p>\n            </div>\n        </div>\n    );\n};\n\nexport default InfoCard;\nInfoCard.defaultProps = {\n    styleName: ''\n};","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport {public_url} from \"config\";\nimport {useHistory} from 'react-router-dom';\n\nconst RecentActivities = ({recentData}) => {\n    const {notification, current_time,created_date,room_number, project_name,room_id,project_id, first_name, last_name, notice_type,user_img} = recentData;\n    const icon_image = (notice_type == 3 ? 'collection-plus' : \n                        notice_type == 4 ? 'brush' : \n                        notice_type == 5 ? 'pin' :\n                        notice_type == 6 ? 'collection-plus' :\n                        notice_type == 7 ? 'pin' :\n                        notice_type == 8 ? 'star' : null )\n    const icon_color = (notice_type == 3 ? 'bg-warning' :\n                        notice_type == 4 ? 'bg-primary' :\n                        notice_type == 5 ? 'bg-secondary' :\n                        notice_type == 6 ? 'bg-danger' :\n                        notice_type == 7 ? 'bg-info' :\n                        notice_type == 8 ? 'bg-orange' : null )\n    const description = project_name && first_name && last_name ? `[${project_name}] for [${first_name} ${last_name}]` : null\n    var arr = current_time.split(/[- :]/);\n    const current = new Date(arr[0], arr[1]-1, arr[2], arr[3], arr[4], arr[5]).getTime()\n    arr = created_date.split(/[- :]/)\n    const created = new Date(arr[0], arr[1]-1, arr[2], arr[3], arr[4], arr[5]).getTime()\n    //const diff_time =  Math.floor((Date.parse(current_time) - Date.parse(created_date))/1000)\n    const diff_time =  Math.floor((current - created)/1000)\n    \n    const diff_min = Math.floor(diff_time/60)+1\n    const diff_hour = Math.floor(diff_min/60)\n    const diff_day = Math.floor(diff_hour/24)\n    const History = useHistory();\n    const goDetail=()=>{\n        if ((notice_type ==3)||(notice_type ==6)){\n            History.push({\n                pathname: `/app/project/live/${project_id}`\n            })\n        }\n        else if ((notice_type ==5)||(notice_type ==7)||(notice_type ==8))\n        {\n            History.push({\n                pathname: `/app/project/live/${project_id}/${room_id}`\n            })\n        }\n        else if (notice_type ==4)\n        {\n            History.push({\n                pathname: `/app/project/live/${project_id}/${room_id}`\n            })\n        }\n    }\n\n    return (\n        <div className=\"media social-list-line\" style={{cursor: 'pointer'}} onClick = {()=>goDetail()}>\n            <Avatar className={`${icon_color} z-index-20 size-40 align-item-self mr-3`}>\n                <i className={`zmdi zmdi-${icon_image} text-white`}/>\n            </Avatar>\n            <div className=\"media-body\">\n                <div className = \"d-flex align-items-center\">\n                    <Avatar className=\"size-30 mr-2\" alt=\"Remy Sharp\" src={`${public_url}/upload/img/${user_img}`}/>\n                    <h5 className=\"mb-1\">{notification}</h5>\n                </div>\n                <p className=\"mb-0\">{description}</p>\n                <span className=\"meta-date meta-date-light\">\n                {diff_day > 0?`${diff_day}\n                    ${diff_day==1?' day ago':' days ago'}`\n                :diff_hour > 0?`${diff_hour}\n                    ${diff_hour==1?' hour ago':' hours ago'}`\n                :diff_min > 0?`${diff_min}\n                    ${diff_min==1?' minute ago':' minutes ago'}`\n                :`${diff_time}' secones ago'`\n                }\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default RecentActivities;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Badge} from 'reactstrap';\nimport {useHistory} from 'react-router-dom';\n\nconst ProjectsCell = ({data}) => {\n    const {id, project_name,company_name,survey_start_date,room_count, projectClick, color} = data;\n    const History = useHistory();\n    const selectProject = (data)=>{\n        History.push({\n            pathname: `/app/project/live/${data}`\n        })\n    }\n    return (\n        <tr \n            onClick={()=>selectProject(project_name)}\n            key={'projects-' + id}\n            style={{cursor: 'pointer'}}>\n\n            <td className=\"max-width-100\" style={{width: '29.2%'}}>\n                <p className=\"text-truncate mb-0\">{project_name}</p>\n            </td>\n\n            <td className=\"max-width-100\" style={{width: '29.2%'}}>\n                <p className=\"text-truncate mb-0\">{company_name}</p>\n            </td>\n\n            <td className=\"max-width-100\" style={{width: '24.4%'}}>\n                <p className=\"text-truncate mb-0\">{survey_start_date}</p>\n            </td>\n\n            <td className=\"max-width-100\" style={{width: '6%'}}>\n                <p className=\"text-truncate mb-0\">{room_count}</p>\n            </td>\n            <td style={{width: '11.2%'}}>\n                <Badge className=\"d-block\" color={color}>live</Badge>\n            </td>\n            {/* <td className=\"text-right\">\n                <IconButton className=\"icon-btn text-light p-1\"><i\n                    className=\"zmdi zmdi-more-vert text-grey\"/></IconButton>\n            </td> */}\n        </tr>\n\n    );\n};\n\nexport default ProjectsCell;\n","import React from 'react';\nimport ProjectsCell from './ProjectsCell';\nimport CustomScrollbars from \"util/CustomScrollbars\";\n\nconst ProjectsList = ({data}) => {\n    return (\n        <div className=\"table-responsive-material border-0\" style={{height: '400px', overflow: 'hidden'}}>\n            <table className=\"project-list-table table remove-table-border mb-0\">\n                <thead>\n                <tr style={{cursor: 'pointer'}}>\n                    <th className=\"max-width-100\" style={{width: '29.2%'}} scope=\"col\">Project</th>\n                    <th className=\"max-width-100\" style={{width: '29.2%'}} scope=\"col\">Customer</th>\n                    <th className=\"max-width-100\" style={{width: '24.4%'}} scope=\"col\">Survey Start Date</th>\n                    <th className=\"max-width-100\" style={{width: '6%'}} scope=\"col\">Rooms</th>\n                    <th className=\"max-width-100\" style={{width: '11.2%'}} scope=\"col\">Status</th>\n                </tr>\n                </thead>\n            </table>\n            <CustomScrollbars className=\"jr-wall-scroll scrollbar\"  >\n            <table className=\"project-list-table table remove-table-border mb-0\">\n                <tbody>\n                {data.map(data => {\n                    return (\n                        <ProjectsCell key={data.id} data={data}/>\n                    );\n                })}\n                </tbody>\n            </table>\n            </CustomScrollbars>\n        </div>\n    );\n\n};\n\nexport default ProjectsList;","import React, {useState} from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport {SortableElement, SortableHandle} from 'react-sortable-hoc';\r\nimport {public_url} from \"config\";\r\n// This can be any component you want\r\n\r\nconst TaskItem = SortableElement(({Task, onTaskSelect, onTaskChecked, onMarkAsStart}) => {\r\n    const [favourite, setFavourite] = useState(Task.favourite == '1')\r\n    const [archived, setArchived] = useState(Task.archived == '1')\r\n\r\n    return (\r\n        <div className=\"module-list-item\">\r\n            <div className=\"module-list-icon\">\r\n                <Checkbox color=\"primary\"\r\n                    checked={Task.archived == '1'}\r\n                    onClick={(event) => {\r\n                        Task.archived = Task.archived == '1' ? '0' : '1'\r\n                        setArchived(!archived)\r\n                        onTaskChecked(Task)\r\n                    }}\r\n                    value=\"SelectTask\"\r\n                />\r\n\r\n                <IconButton className=\"icon-btn\" onClick={() => {\r\n                    // Task.favourite = Task.favourite == '1' ? '0' : '1'\r\n                    // onMarkAsStart(Task, Task.favourite)\r\n                    // setFavourite(!favourite)\r\n                }}>\r\n                    {Task.favourite == '1' ?\r\n                        <i className=\"zmdi zmdi-star text-warning\"/> :\r\n                        <i className=\"zmdi zmdi-star-outline text-warning\"/>\r\n                    }\r\n                </IconButton>\r\n            </div>\r\n            <div className=\"module-list-info\" onClick={() => {\r\n                onTaskSelect(Task);\r\n            }}>\r\n                <div className=\"row\">\r\n                    <div className=\"module-todo-content col-9 col-sm-10\">\r\n                        <div className={`subject ${Task.archived=='1' && 'text-muted text-strikethrough'}`}>\r\n                            {Task.task}\r\n                        </div>\r\n                        <div className=\"manage-margin\">    \r\n                            <div className={`badge text-white bg-light-blue darken-2`}>{Task.company_name}</div>\r\n                            <div className={`badge text-white bg-green darken-1`}>{Task.project_name}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"module-todo-right col-2 col-sm-2\">\r\n                        <div className=\"d-flex flex-row-reverse\">\r\n\r\n                            <Avatar alt={Task.profile_pic}\r\n                                src={public_url + 'upload/img/' + Task.profile_pic}/>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n});\r\n\r\nexport default TaskItem;","import React from 'react';\r\nimport {SortableContainer, SortableElement, SortableHandle} from 'react-sortable-hoc';\r\nimport TaskItem from './TaskItem';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\nconst TaskList = SortableContainer(({Tasks, onTaskSelect, onTaskChecked, onMarkAsStart, width}) => {\r\n   \r\n    return (\r\n        <div className=\"module-list\">\r\n            <CustomScrollbars className=\"module-list-scroll scrollbar\"\r\n                              //style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}\r\n                              style={{height: '500px'}}\r\n                              >\r\n                {\r\n                    (Tasks.filter(item => item.archived == '0').length > 0) && (\r\n                        <div className=\"module-list-item bg-info text-white\">\r\n                            <div className=\"module-list-icon\">\r\n                                <h2 className=\"my-0\">To Do</h2>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                {Tasks.filter(item => item.archived == '0').map((Task, index) =>\r\n                    <TaskItem key={index} index={index} Task={Task} onTaskSelect={onTaskSelect}\r\n                              onMarkAsStart={onMarkAsStart}\r\n                              onTaskChecked={onTaskChecked}/>\r\n                )}\r\n                {\r\n                    (Tasks.filter(item => item.archived == '1').length > 0) && (\r\n                        <div className=\"module-list-item bg-success text-white\">\r\n                            <div className=\"module-list-icon\">\r\n                                <h2 className=\"my-0\">Completed</h2>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                {Tasks.filter(item => item.archived == '1').map((Task, index) =>\r\n                    <TaskItem key={index} index={index} Task={Task} onTaskSelect={onTaskSelect}\r\n                              onMarkAsStart={onMarkAsStart}\r\n                              onTaskChecked={onTaskChecked}/>\r\n                )}\r\n            </CustomScrollbars>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default TaskList;","import React, {useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TaskList from './TaskList';\r\n//import TaskDetail from './TaskDetail';\r\n//import {base_url,public_url, $http} from \"config\";\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n//import Typography from '@material-ui/core/Typography'\r\n//import BrushIcon from '@material-ui/icons/Brush';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst TaskFav = (props) => {\r\n    const {Tasks} = props\r\n    const [users, setUsers] = useState([]);\r\n    const {width} = useSelector(({settings}) => settings);\r\n    const [currentTask, setCurrentTask] = useState(null);\r\n    const History = useHistory();\r\n    const onMarkAsStart = (data, favourite) => {\r\n        // const frmData = new FormData();\r\n        // frmData.append('id', data.id);\r\n        // frmData.append('favourite', favourite);\r\n        // $http.post(base_url + \"task/setFavourite\", frmData)\r\n        // .then((response) => {\r\n        //     if (response.data.status === \"success\") {\r\n        //         if (favourite) {\r\n        //             NotificationManager.info(`Task ${data.task} is set to favourite one!`);\r\n        //         } else {\r\n        //             NotificationManager.info(`Task ${data.task} is released from favourite one!`);\r\n        //         }\r\n        //     } else if (response.data.status === \"error\") {\r\n        //         NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\r\n        //         });\r\n        //     }\r\n            \r\n        // }).catch((error)=>{\r\n        //     NotificationManager.error(error, \"Error!\", 1000, () => {\r\n        //     });\r\n        // })\r\n    };\r\n\r\n    const onTaskChecked = (data) => {\r\n        // var is_complete = 0;\r\n        // is_complete = data.archived === '1' ? 1 : 0;\r\n        // const frmData = new FormData();\r\n        // frmData.append('id', data.id);\r\n        // frmData.append('archived', is_complete);\r\n        // $http.post(base_url + \"task/setCompleted\", frmData)\r\n        // .then((response) => {\r\n        //     if (response.data.status === \"success\") {\r\n        //         if (is_complete) {\r\n        //             NotificationManager.info(`Task ${data.task} is completed!`);\r\n        //         } else {\r\n        //             NotificationManager.info(`Task ${data.task} is not completed!`);\r\n        //         }\r\n        //     } else if (response.data.status === \"error\") {\r\n        //         NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\r\n        //         });\r\n        //     }\r\n            \r\n        // }).catch((error)=>{\r\n        //     NotificationManager.error(error, \"Error!\", 1000, () => {\r\n        //     });\r\n        // })\r\n    };\r\n    \r\n    const onTaskSelect = (Task) => {\r\n        \r\n        History.push({\r\n            pathname: '/app/task-manager/my-tasks',\r\n            state: {\r\n                task: Task\r\n            }\r\n        })\r\n        return\r\n       setCurrentTask(Task)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* { \r\n                currentTask === null ? */}\r\n                    <div className=\"module-box-content\">\r\n                        <div className=\"module-box-topbar d-flex align-items-center\">\r\n                            <IconButton className=\"icon-btn\">\r\n                                <i className=\"zmdi zmdi-check\"/>\r\n                            </IconButton>\r\n                            {`${Tasks.filter(item => item.archived == '1').length} of ${Tasks.length} number of Tasks have been completed.`}\r\n                        </div>\r\n                        <TaskList Tasks={Tasks} \r\n                        onMarkAsStart={onMarkAsStart}\r\n                        width={width}\r\n                        onTaskSelect={onTaskSelect}\r\n                        onTaskChecked={onTaskChecked} \r\n                        useDragHandle={true}/>\r\n                    </div>\r\n                    {/* :\r\n                    <div className=\"module-box-content\">\r\n                        <div className=\"module-box-topbar d-flex align-items-center\">\r\n                            <IconButton className=\"icon-btn\"\r\n                                        onClick={() => {\r\n                                            setCurrentTask(null);\r\n                                        }}>\r\n                                <i className=\"zmdi zmdi-arrow-back\"/>\r\n                            </IconButton>\r\n                            <h2 className=\"mb-0\">{`task: ${currentTask.task}`}</h2>\r\n                        </div>\r\n                        <TaskDetail Task={currentTask}\r\n                            width={width}\r\n                            users={users}\r\n                        />\r\n                    </div>\r\n            } */}\r\n          <NotificationContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TaskFav;","import React ,{useState, useEffect} from 'react';\nimport ContainerHeader from 'components/ContainerHeader/index';\nimport IntlMessages from 'util/IntlMessages';\nimport {base_url, $http} from \"config\";\nimport {useSelector} from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SweetAlert from 'react-bootstrap-sweetalert'\nimport {useDispatch} from 'react-redux'\nimport {userSignOut} from 'actions/Auth';\nimport {useHistory} from 'react-router-dom';\nimport InfoCard from 'components/InfoCard/index';\nimport CardHeader from 'components/dashboard/Common/CardHeader/index';\nimport RecentActivities from 'components/dashboard/Common/RecentActivities/index';\nimport ProjectsList from './ProjectsList';\nimport TaskFav from './TaskFav'\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\nconst DashBoard = (props) => {\n    //const customer_id = props.location.state.id;\n    const {width} = useSelector(({settings}) => settings);\n    const [loader, setLoader] = useState(false);\n    const [Lives, setLive] = useState(0);\n    const [Messages, setMessage] = useState(0);\n    const [RecentMessages, setRecentMessage] = useState(0);\n    const [Tasks, setTask] = useState(0);\n    const [TasksFavourite, setTaskFavourite] = useState(0);\n    const [Projects, setProjects] = useState([])\n    const isFirst = localStorage.getItem(\"isFirst\");\n    const [warning, setWarning] = useState(false)\n    const nowuser = JSON.parse(localStorage.getItem(\"user\"));\n    useEffect(() => {\n        Init_data();\n    }, []);\n    \n    const Init_data = () => {\n       \n        if(isFirst==0){\n            localStorage.setItem('isFirst',1);\n            History.go(0)\n        }\n        $http.get(base_url + \"dashboard\")\n        .then((response) => {\n            setLive(response.data.lives);\n            setTask(response.data.tasks);\n            setMessage(response.data.messages);\n            setRecentMessage(response.data.recent_messages);\n            setTaskFavourite(response.data.tasks_favourite);\n            setProjects(response.data.project_list)\n            setLoader(true);\n        }).catch((error) => {\n            NotificationManager.error(error, \"Error!\", 1000, () => {\n            });\n\n            // localStorage.removeItem('token')\n            // localStorage.removeItem('user_id')\n            // localStorage.removeItem('user')\n            // History.go(0)\n        });\n    }\n\n    const dispatch = useDispatch();\n    const History = useHistory();\n    if (!localStorage.getItem(\"token\")) {\n        dispatch(userSignOut());\n        History.push('/');\n    }\n\n    const onGoBack = () => {\n        History.go(-1)\n    }\n    let cardData = []\n    if(nowuser.user_type<6)\n    {\n        cardData = [\n            {\n                icon: 'collection-plus',\n                title: Lives,\n                subTitle: 'Projects',\n                color: 'rgb(244, 67, 54)',\n                url: \"/app/project/live\"\n            },\n            {\n                icon: 'brush',\n                title: Tasks,\n                subTitle: 'Tasks',\n                color: 'rgb(63, 81, 181)',\n                url: \"/app/task-manager/my-tasks\"\n            },\n            {\n                icon: 'notifications',\n                title: Messages,\n                subTitle: 'Messages',\n                color: '#ff9800',\n                url: \"/app/settings/notifications\"\n            },\n        ]\n    }else{\n        cardData = [\n            {\n                icon: 'collection-plus',\n                title: Lives,\n                subTitle: 'Projects',\n                color: 'rgb(244, 67, 54)',\n                url: \"/app/project/live\"\n            },\n            {\n                icon: 'notifications',\n                title: Messages,\n                subTitle: 'Messages',\n                color: '#ff9800',\n                url: \"/app/settings/notifications\"\n            },\n        ]\n    }\n    \n    return (\n        loader ? (\n        <div className=\"app-wrapper\">\n            <ContainerHeader match={props.match} title={<IntlMessages id=\"sidebar.dashboard\"/>}/>\n            <div className=\"row\">\n                <div className=\"col-lg-6 col-12\">\n                    <div className=\"row\">\n                        {cardData.map((item, index) => {\n                            return (\n                                nowuser.user_type<6?\n                                <div className=\"col-sm-4 col-12\" \n                                    onClick = {()=>History.push(item.url)}\n                                    key = {index}>\n                                    <InfoCard data={item}/>\n                                </div>\n                                :\n                                <div className=\"col-sm-6 col-12\" \n                                    onClick = {()=>History.push(item.url)}\n                                    key = {index}>\n                                    <InfoCard data={item}/>\n                                </div>\n                            )\n                        })}\n                        <div className=\"col-12\">\n                            <div className=\"jr-card\">\n                                <CardHeader heading=\"Recent Activities\"\n                                            // subHeading=\"Last activity was 2 days ago\"\n                                            />\n                                { RecentMessages.map((item, index) => \n                                    <RecentActivities \n                                        key={index}\n                                        recentData={item}\n                                        />)}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-6 col-12\">\n                    <div className=\"row\">\n                        {nowuser.user_type<6?\n                        <div className=\"col-12\">\n                            <div className=\"jr-card\"style={{\n                                height: '630px'\n                                }}>\n                                <div className=\"jr-card-header mb-3 d-flex\">\n                                    <h3 className=\"mb-0 mr-auto\"><i className=\"zmdi zmdi-brush\"/> Tasks ({TasksFavourite.length})</h3>\n                                    <span className=\"badge badge-secondary\">Favourite</span>\n                                </div>\n                                <TaskFav Tasks={TasksFavourite}/>\n                            </div>\n                        </div>\n                        :null\n                        }\n                        <div className=\"col-12\">\n                            <div className=\"jr-card\" style={{\n                                height: '500px'\n                                }}>\n                                <div className=\"jr-card-header mb-3 d-flex\">\n                                    <h3 className=\"mb-0 mr-auto\">Current Projects</h3>\n                                    <span className=\"badge badge-secondary\">Live</span>\n                                </div>\n                                <ProjectsList data={Projects}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <NotificationContainer/>\n        </div>\n                    \n        ):(\n            <div className=\"loader-view\"\n                    style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n                <CircularProgress/>\n\n                <NotificationContainer/>\n                <SweetAlert show={warning}\n                    warning\n                    confirmBtnText=\"Go Back\"\n                    confirmBtnBsStyle=\"danger\"\n                    cancelBtnBsStyle=\"default\"\n                    title=\"Warning!\"\n                    onConfirm={onGoBack}\n                >                \n                Data not cached, so you can not view this page.\n                </SweetAlert>\n            </div>                   \n        )\n    );\n\n}\n\nexport default DashBoard;","import React from 'react';\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\n\nconst getDisplayString = (sub) => {\n    const arr = sub.split(\"-\");\n    if (arr.length > 1) {\n        return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\n    } else {\n        return sub.charAt(0).toUpperCase() + sub.slice(1)\n    }\n\n};\nconst getUrlString = (path, sub, index) => {\n    if (index === 0) {\n        return '/';\n    } else {\n        return '/' + path.split(sub)[0] + sub;\n    }\n};\n\nconst ContainerHeader = ({title, match,project_name,room_number}) => {\n    let url_name = [];\n    const path = match.url.substr(1);\n    const subPath = path.split('/');\n    subPath.map((sub,index)=>{\n        if(sub===''){\n            subPath.splice(index,1)\n        }\n        if(subPath[index-1] ==='live')\n            url_name[index] = project_name?project_name:''\n        else if(subPath[index-2] ==='live')\n            url_name[index] = room_number?room_number:''\n        else\n            url_name[index] = sub\n    })\n    return (\n        <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\n            <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\n\n            <Breadcrumb className=\"mb-0\" tag=\"nav\">\n                {subPath.map((sub, index) => {\n                        if(index ==0) return;\n                        return <BreadcrumbItem active={subPath.length === index + 1}\n                                            tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\n                                            href={getUrlString(path, sub, index)}>{getDisplayString(url_name[index])}</BreadcrumbItem>\n                    }\n                )}\n            </Breadcrumb>\n        </div>\n    )\n};\n\nexport default ContainerHeader;\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;"],"sourceRoot":""}