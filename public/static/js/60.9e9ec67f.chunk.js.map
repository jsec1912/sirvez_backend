{"version":3,"sources":["app/routes/Sites/routes/site/FloorInfo.js","components/ContainerHeader/index.js","../node_modules/@material-ui/icons/PlaylistAdd.js","app/routes/Sites/routes/site/CardEditMenu.js"],"names":["columnData","id","align","disablePadding","label","numeric","FloorInfo","props","building_id","location","state","site_id","floor_id","useState","floor_open","setFloorOpen","room_open","setRoomOpen","order","setOrder","orderBy","setOrderBy","loader","setLoader","width","useSelector","settings","History","useHistory","page","setPage","rowsPerPage","setRowsPerPage","tabledata","setTabledata","floor_name","setFloorName","floor","setFloor","floor_upload_img","setFloorUploadImg","floor_upload_img_url","setFloorUploadImgUrl","rooms","setRooms","room_id","setRoomId","room_number","setRoomNumber","room_departmentname_rows","setRoomDepartmentRows","room_department_id","setRoomDepartmentId","goback","setGoback","useEffect","$http","get","base_url","params","then","response","data","catch","error","init_Data","handleRequestSort","event","property","sort_order","sort","a","b","onSelectRoom","index","RoomModalOpen","navigator","onLine","caches","open","cache","match","json","responsedata","filter","item","jsonResponse","Response","JSON","stringify","headers","put","clone","frmData","FormData","append","post","status","NotificationManager","info","msg","FloorModalClose","departments","room","department_id","RoomModalClose","className","title","onClick","go","style","height","src","public_url","upload_img","alt","color","variant","floors","push","pathname","FloorDelete","placeholder","onChange","target","value","toLowerCase","includes","aria-label","map","column","key","placement","enterDelay","active","direction","length","slice","n","hover","tabIndex","department_name","selectedData","onSelectRow","colSpan","count","onChangePage","onChangeRowsPerPage","toggle","isOpen","select","SelectProps","helperText","margin","fullWidth","option","offline_id","parse","localStorage","getItem","Date","getTime","success","modify_data","find","unshift","type","accept","name","display","e","preventDefault","reader","FileReader","file","files","onloadend","result","readAsDataURL","changeFloorUploadImg","document","getElementById","click","fileName","rooms_count","show","warning","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onConfirm","getUrlString","path","sub","split","ContainerHeader","project_name","url_name","url","substr","subPath","splice","tag","href","arr","charAt","toUpperCase","getDisplayString","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","CardEditMenu","menuState","setMenuState","undefined","anchorEl","setAnchorEl","menu_rows","options","content","handleRequestClose","currentTarget","onClose","MenuListProps","paddingTop","paddingBottom"],"mappings":"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","file":"static/js/60.9e9ec67f.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport ContainerHeader from 'components/ContainerHeader/index';\nimport IntlMessages from 'util/IntlMessages';\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistAdd\";\nimport CardEditMenu from './CardEditMenu.js'\nimport SearchBox from '../../../../../components/SearchBox/index';\nimport {useSelector} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {base_url,public_url, $http} from \"config\";\nimport {Modal, ModalHeader} from 'reactstrap';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport SweetAlert from 'react-bootstrap-sweetalert'\n\nconst columnData = [\n  {id: \"id\", align: false, disablePadding: true, label: \"ID\"},\n  {id: \"room_name\", align: true, disablePadding: false, label: \"Name\"},\n  {id: \"department_name\", align: true, disablePadding: false, label: \"Department\"},\n  {id: \"actions\", align: true, disablePadding: false, numeric: 'right', label: \"Actions\"}\n];\nconst FloorInfo = (props) => {\n  const building_id = props.location.state ? props.location.state.building_id : null;\n  const site_id = props.location.state ? props.location.state.site_id : null;\n  const floor_id = props.location.state ? props.location.state.id : null;\n  const [floor_open, setFloorOpen] = useState(false);\n  const [room_open, setRoomOpen] = useState(false);\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(\"id\");\n  const [loader, setLoader] = useState(false);\n  const {width} = useSelector(({settings}) => settings);\n  const History = useHistory();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [tabledata, setTabledata] = useState([]);\n\n  \n  const [floor_name, setFloorName] = useState(\"\");\n  const [floor,setFloor] = useState([]);\n  const [floor_upload_img, setFloorUploadImg] = useState(null);\n  const [floor_upload_img_url, setFloorUploadImgUrl] = useState('https://via.placeholder.com/300x300');\n  \n  const [rooms,setRooms] = useState([]);\n  const [room_id, setRoomId] = useState('');\n  const [room_number, setRoomNumber] = useState(\"\");\n  const [room_departmentname_rows, setRoomDepartmentRows] = useState([]);\n  const [room_department_id, setRoomDepartmentId] = useState('');\n  const [goback, setGoback] = useState(false)\n\n  \n  useEffect(() => {\n    $http.get(base_url + \"floor/floorInfo\", {params : {id: floor_id}})\n    .then((response) => {\n      setTabledata(response.data.rooms)\n      setRooms(response.data.rooms);\n      setFloor(response.data.floor);\n      setLoader(true);\n    })\n    .catch((error) => {\n      setGoback(true)\n    })\n\n  }, [floor_id]);\n\n  const init_Data = () => {\n    $http.get(base_url + \"floor/floorInfo\", {params : {id: floor_id}})\n    .then((response) => {\n      setTabledata(response.data.rooms)\n      setRooms(response.data.rooms);\n      setFloor(response.data.floor);\n      setLoader(true);\n    })\n    .catch((error) => {\n      setGoback(true)\n    })\n\n  }\n\n  const createSortHandler = property => event => {\n    handleRequestSort(event, property);\n  };\n\n  const handleRequestSort = (event, property) => {\n    let sort_order;\n    if (orderBy === property && order === \"asc\") {\n      sort_order = \"desc\";\n    } else {\n      sort_order = \"asc\";\n    }\n    sort_order === \"desc\"\n      ? rooms.sort((a, b) => (b[property] < a[property] ? -1 : 1))\n      : rooms.sort((a, b) => (a[property] < b[property] ? -1 : 1));\n\n    \n    setOrder(sort_order);\n    setOrderBy(property);\n  };\n\n  // const handleClick = (event, id) => {\n  //   // History.push({\n  //   //   pathname: \"/app/sites/site/Info\",\n  //   //   state: {id: id}\n  //   // })\n  // };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  const onSelectRoom = (data, index) => {\n    if (index === 0) {\n      RoomModalOpen(data.id);\n    } else if (index === 1) {\n      RoomModalOpen(data.id);\n    } else if (index === 2) {\n      if (!navigator.onLine) {\n        caches.open('SirvezApp').then(function(cache) {\n          cache.match('/api/floor/floorInfo?id='+floor_id)\n          .then(function(response) {return response ? response.json() : null})\n          .then(function(responsedata){\n              if(responsedata==null) return\n              responsedata.rooms = responsedata.rooms.filter((item) => {return item.id !== data})\n              const jsonResponse = new Response(JSON.stringify(responsedata), {\n                headers: {'content-type': 'application/json'}\n              })\n              cache.put('/api/floor/floorInfo?id='+floor_id, jsonResponse.clone())\n              .then(function(){\n                init_Data();\n              })\n          })\n\n          cache.match('/api/building/buildingInfo?id='+building_id)\n          .then(function(response) {return response ? response.json() : null})\n          .then(function(responsedata){\n              if(responsedata==null) return\n              responsedata.rooms = responsedata.rooms.filter((item) => {return item.id !== data.id})\n              const jsonResponse = new Response(JSON.stringify(responsedata), {\n                headers: {'content-type': 'application/json'}\n              })\n              cache.put('/api/building/buildingInfo?id='+building_id, jsonResponse.clone())\n              .then(function(){\n               init_Data()\n              })\n          })\n          \n        })\n      }\n      const frmData = new FormData();\n      frmData.append('id', data.id);\n      $http.post(base_url + \"siteroom/deleteRoom\",frmData)\n      .then((response) => {\n        if (response.data.status === \"success\") {\n          init_Data();\n          NotificationManager.info(\"You removed selected Room\");\n        } else if (response.data.status === \"error\") {\n            NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\n            });\n        }\n       \n      }).catch((error)=>{\n        NotificationManager.error(error, \"Error!\", 1000, () => {\n        });\n    })\n    }\n  }\n\n  const SearchRoom = (data) => {\n    setRooms(\n      tabledata.filter(function (item) {\n        return (item.room_number.toLowerCase().includes(data.toLowerCase()));\n      })\n    );\n  }\n  const FloorDelete = (data)=>{\n    if (!navigator.onLine) {\n      caches.open('SirvezApp').then(function(cache) {\n        cache.match('/api/building/buildingInfo?id='+building_id)\n        .then(function(response) {return response ? response.json() : null})\n        .then(function(responsedata){\n            if(responsedata==null) return\n            responsedata.floors = responsedata.floors.filter((item) => {return item.id !== data})\n            const jsonResponse = new Response(JSON.stringify(responsedata), {\n              headers: {'content-type': 'application/json'}\n            })\n            cache.put('/api/building/buildingInfo?id='+building_id, jsonResponse.clone())\n            .then(function(){\n              History.go(-1)\n            })\n        })\n      })\n    }\n    const frmData = new FormData();\n    frmData.append('id', data);\n    $http.post(base_url + \"floor/deleteFloor\", frmData)\n    .then((response) => {\n      if (response.data.status === \"success\") {\n        History.push({\n          pathname: \"/app/sites/site/building\",\n          state: {}\n        })\n      } else if (response.data.status === \"error\") {\n          NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\n          });\n      }\n      \n\n    }).catch((error)=>{\n      NotificationManager.error(error, \"Error!\", 1000, () => {\n      });\n  })\n  }\n  const FloorModalOpen = (data) => {\n    $http.get(base_url + \"floor/getFloorInfo\", {params : {id: data}})\n    .then((response) => {\n      \n        if (data) {\n          setFloorName(response.data.floor.floor_name);\n          setFloorUploadImgUrl(response.data.floor.upload_img ? \n            (public_url + 'upload/img/' + response.data.floor.upload_img) : \n            'https://via.placeholder.com/300x300');\n          \n        }\n        setFloorOpen(true);\n    })\n    .catch((error) => {\n      setGoback(true)\n    })\n\n  }\n  const FloorModalClose = () => {\n    setFloorOpen(false);\n  }\n  const FloorModalSave = () => {\n    FloorModalClose();\n    let offline_id = floor_id ? floor_id : JSON.parse(localStorage.getItem('user')).id + '_' + new Date().getTime()\n      const frmData = new FormData();\n      frmData.append('id', offline_id);\n      frmData.append('site_id', site_id);\n      frmData.append('building_id', building_id);\n      frmData.append('floor_name', floor_name);\n      frmData.append('upload_img', floor_upload_img);\n      \n      $http.post(base_url + \"floor/updateFloor\", frmData)\n      .then((response) => {\n          if (response.data.status === \"success\") {\n              NotificationManager.success('Updated floor!', \"Success!\", 1000, () => {\n              });\n              init_Data();\n          } else if (response.data.status === \"error\") {\n              NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\n              });\n          }\n      }).catch((error)=>{\n        NotificationManager.error(error, \"Error!\", 1000, () => {\n        });\n    })\n    if (!navigator.onLine) {\n      caches.open('SirvezApp').then(function(cache) {\n        let fileName = ''\n        if(floor_upload_img)\n        {\n            fileName = new Date().getTime()+'_new.jpeg';\n            cache.put('/upload/img/'+fileName, new Response(floor_upload_img));\n        }\n        var modify_data = {\n          id : offline_id,\n          site_id : site_id,\n          building_id : building_id,\n          floor_name : floor_name,\n          rooms_count:0,\n        }\n        if(fileName!=='')\n        modify_data.upload_img = fileName\n       \n        let responsedata = {\n          floor : modify_data, \n          status : 'success'}\n        const jsonResponse = new Response(JSON.stringify(responsedata), {\n          headers: {'content-type': 'application/json'}\n        })\n        cache.put('/api/floor/getFloorInfo?id='+offline_id, jsonResponse.clone())\n           \n       \n\n        cache.match('/api/floor/floorInfo?id='+offline_id)\n        .then(function(response) {return response ? response.json() : null})\n        .then(function(responsedata){\n            if(responsedata==null) \n            {\n              responsedata = {\n                floor:modify_data,\n                status:'success',\n                rooms:[]\n              }\n              const jsonResponse = new Response(JSON.stringify(responsedata), {\n                headers: {'content-type': 'application/json'}\n              })\n              cache.put('/api/floor/floorInfo?id='+offline_id, jsonResponse.clone())\n            }\n            else{\n              responsedata.floor= modify_data\n              const jsonResponse = new Response(JSON.stringify(responsedata), {\n                headers: {'content-type': 'application/json'}\n              })\n              cache.put('/api/floor/floorInfo?id='+offline_id, jsonResponse.clone())\n            }\n        })\n\n        cache.match('/api/building/buildingInfo?id='+building_id)\n        .then(function(response) {return response ? response.json() : null})\n        .then(function(responsedata){\n            if(responsedata==null) return\n            let item = responsedata.floors.find((item) => {return item.id === offline_id})\n            if (item) {\n              item.site_id = site_id\n              item.building_id = building_id\n              item.floor_name = floor_name\n              if(fileName!=='')\n              item.upload_img = fileName\n            } else {\n                responsedata.floors.unshift(modify_data)\n            }\n            const jsonResponse = new Response(JSON.stringify(responsedata), {\n              headers: {'content-type': 'application/json'}\n            })\n            cache.put('/api/building/buildingInfo?id='+building_id, jsonResponse.clone())\n            .then(function(){\n              init_Data()\n            })\n        })\n      })\n    }\n  }\n  const RoomModalOpen = (data) => {\n    setRoomId(data);\n    \n    $http.get(base_url + \"siteroom/roomInfo\", {params : {id: data}})\n    .then((response) => {\n      setRoomDepartmentRows(response.data.departments)\n      if (data) {\n          setRoomDepartmentId(response.data.room.department_id);\n          setRoomNumber(response.data.room.room_number);\n          \n      }\n        setRoomOpen(true);\n    })\n    .catch((error) => {\n      setGoback(true)\n    })\n\n  }\n  const RoomModalClose = () => {\n    setRoomOpen(false);\n  }\n  const RoomModalSave = () => {\n    let offline_id = room_id ? room_id : JSON.parse(localStorage.getItem('user')).id + '_' + new Date().getTime()\n    RoomModalClose();\n    const frmData = new FormData();\n    frmData.append('id', room_id);\n    frmData.append('site_id', site_id);\n    frmData.append('department_id', room_department_id);\n    frmData.append('building_id', building_id);\n    frmData.append('floor_id', floor_id);\n    frmData.append('room_number', room_number);\n    $http.post(base_url + \"siteroom/updateRoom\", frmData)\n    .then((response) => {\n        if (response.data.status === \"success\") {\n            NotificationManager.success(\"Updated room!\", \"Success!\", 1000, () => {\n            });\n            init_Data();\n        } else if (response.data.status === \"error\") {\n            NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\n            });\n        }\n    }).catch((error)=>{\n      NotificationManager.error(error, \"Error!\", 1000, () => {\n      });\n    })\n    if (!navigator.onLine) {\n      caches.open('SirvezApp').then(function(cache) {\n        \n        var modify_data = {\n          id : offline_id,\n          site_id : site_id,\n          department_id : room_department_id,\n          building_id : building_id,\n          floor_id:floor_id,\n          room_number:room_number,\n        }\n       \n        let responsedata = {\n          room : modify_data, \n          status : 'success'}\n        const jsonResponse = new Response(JSON.stringify(responsedata), {\n          headers: {'content-type': 'application/json'}\n        })\n        cache.put('/api/room/getRoomInfo?id='+offline_id, jsonResponse.clone())\n\n        cache.match('/api/building/buildingInfo?id='+building_id)\n        .then(function(response) {return response ? response.json() : null})\n        .then(function(responsedata){\n            if(responsedata==null) return\n            let item = responsedata.floors.find((item) => {return item.id === offline_id})\n            if (item) {\n              item.site_id = site_id\n              item.department_id = room_department_id\n              item.building_id = building_id\n              item.floor_id = floor_id\n              item.room_number = room_number\n              \n            } else {\n                responsedata.rooms.unshift(modify_data)\n            }\n            const jsonResponse = new Response(JSON.stringify(responsedata), {\n              headers: {'content-type': 'application/json'}\n            })\n            cache.put('/api/building/buildingInfo?id='+building_id, jsonResponse.clone())\n            .then(function(){\n              init_Data()\n            })\n        })\n      })\n    }\n  }\n  \n  const changeFloorUploadImg = (e) =>{\n    e.preventDefault();\n\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.onloadend = () => {\n        setFloorUploadImg(file);\n        setFloorUploadImgUrl(reader.result);\n    }\n    reader.readAsDataURL(file)\n  }\n\n  return (\n    <div className=\"app-wrapper\">\n      <ContainerHeader match={props.match} title={<IntlMessages id=\"sidebar.sites.floorInfo\"/>}/>\n      { loader ? (\n          <div className=\"row\">\n              <div className=\"col-12\">\n                  <div className=\"jr-card\">\n                      <div className=\"row\">\n                          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                              <IconButton className=\"icon-btn\" \n                                  onClick={()=>History.go(-1)}>\n                                <i className=\"zmdi zmdi-arrow-left\"/>\n                              </IconButton>\n                              <div className=\"row\">\n                                  <div className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-6 text-left\">\n                                      <h2><strong>floor Name</strong></h2>\n                                  </div>\n                                  <div className=\"col-xl-8 col-lg-8 col-md-6 col-sm-6 col-6 text-left\">\n                                      <h2>{floor.floor_name}</h2>\n                                  </div>\n                              </div>\n                          </div>\n                          \n                          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 text-center my-2\">\n                              <img className=\"rounded-xl\" style = {{width: '100%', height: 'auto'}} src={public_url + 'upload/img/' + floor.upload_img} alt={floor.floor_name}/>\n                              {/* <canvas id=\"jPolygon\" width=\"100%\" height=\"100%\" style=\"cursor:crosshair\" data-imgsrc={public_url + 'upload/img/' + floor.upload_img} onMouseDown=\"point_it(event)\" onContextMenu=\"return false;\">\n                                  Your browser does not support the HTML5 canvas tag.\n                              </canvas> */}\n                          </div>\n                          \n                          <ul className=\"list-inline d-sm-flex flex-sm-row d-flex flex-row jr-mbtn-list mb-0 jr-featured-content-right\">\n                              <li><Button color=\"primary\" onClick={() => FloorModalOpen(floor_id)} variant=\"contained\" className=\"jr-btn text-white\"><IntlMessages id=\"button.modify\"/></Button></li>\n                              <li><Button color=\"secondary\" onClick={() => FloorDelete()} variant=\"contained\" className=\"jr-btn text-white\"><IntlMessages id=\"button.delete\"/></Button></li>\n                          </ul>\n                      </div>\n                  </div>\n              </div>\n              <div className=\"col-12\">\n                  <div className=\"jr-card\">\n                    <div>\n                      <Toolbar className=\"table-header\">\n                        <div className=\"title\">\n                          <Typography variant=\"h6\">Rooms</Typography>\n                        </div>\n                        <div className=\"col-md-3 col-lg-3 col-sx-6 col-6 ml-auto\">\n                            <SearchBox placeholder=\"Search ...\"\n                              onChange={(event) => SearchRoom(event.target.value)}\n                            />\n                        </div>\n                        <div className=\"actions\">\n                          <Tooltip title=\"New Room\">\n                            <IconButton aria-label=\"New Room\" onClick={() => RoomModalOpen(null)}>\n                                <PlaylistPlayIcon/>\n                            </IconButton>\n                          </Tooltip>\n                        </div>\n                      </Toolbar>\n                      {\n                        loader ? (\n                          <div className=\"flex-auto\">\n                            <div className=\"table-responsive-material\">\n                              <Table className=\"\">\n                                <TableHead>\n                                  <TableRow>\n                                    {columnData.map(column => {\n                                      return (\n                                        <TableCell\n                                          key={column.id}\n                                          align={column.numeric}\n                                        >\n                                          <Tooltip\n                                            title=\"Sort\"\n                                            placement={column.numeric ? \"bottom-end\" : \"bottom-start\"}\n                                            enterDelay={300}\n                                          >\n                                              <TableSortLabel\n                                              active={orderBy === column.id}\n                                              direction={order}\n                                              onClick={createSortHandler(column.id)}\n                                            >\n                                              {column.label}\n                                            </TableSortLabel>\n                                          </Tooltip>\n                                        </TableCell>\n                                      );\n                                    })}\n                                  </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                  {\n                                    rooms.length > 0 ?\n                                  rooms.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((n) => \n                                      <TableRow\n                                        hover\n                                        key={n.id}\n                                        //onClick={event => handleClick(event, n.id)}\n                                        //onKeyDown={event => handleKeyDown(event, n.id)}\n                                        tabIndex={-1}\n                                      >\n                                        <TableCell>{n.id}</TableCell>\n                                        <TableCell>{n.room_number}</TableCell>\n                                        <TableCell>{n.department_name}</TableCell>\n                                        <TableCell className=\"text-right\">\n                                          <CardEditMenu key={n.id} selectedData={n} \n                                            onSelectRow={onSelectRoom}/>\n                                        </TableCell>\n                                      </TableRow>\n                                    )\n                                    :\n                                    <tr>\n                                        <td className=\"text-danger\" colSpan=\"4\">\n                                            <IntlMessages id=\"table.noData\"/>\n                                        </td>\n                                    </tr>\n                                  }\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n                                    <TablePagination\n                                      count={rooms.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                    />\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n                            </div>\n                            <NotificationContainer/>\n                          </div>\n                        ):(\n                          <div className=\"loader-view\"\n                                  style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n                              <CircularProgress/>\n                          </div>        \n                        )\n                      }\n                      <Modal key=\"room-save\" className=\"modal-box\" toggle={RoomModalClose} isOpen={room_open}>\n                          <ModalHeader>{room_id ? 'Modify Room':'Add Room'}\n                              <IconButton className=\"text-grey\"\n                                          onClick={RoomModalClose}>\n                                  <CloseIcon/>\n                              </IconButton>\n                          </ModalHeader>\n                          <div className=\"modal-box-content\">\n                              <div className=\"row\">\n                                  \n                                  <div className=\"col-md-6 col-12\">\n                                      <TextField\n                                          id=\"room_department\"\n                                          select\n                                          label=\"department\"\n                                          value={room_department_id}\n                                          onChange={(event)=>setRoomDepartmentId(event.target.value)}\n                                          SelectProps={{}}\n                                          helperText=\"Please select Department\"\n                                          margin=\"normal\"\n                                          fullWidth\n                                      >\n                                          {room_departmentname_rows.map(option => (\n                                              <MenuItem key={option.id} value={option.id}>\n                                                  {option.department_name}\n                                              </MenuItem>\n                                          ))}\n                                      </TextField>\n                                  </div>\n                                  \n                                  <div className=\"col-md-6 col-12\">\n                                      <TextField \n                                          id=\"room_number\"\n                                          label=\"Room Number\"\n                                          value={room_number}\n                                          onChange={(event)=>setRoomNumber(event.target.value)}\n                                          margin=\"normal\"\n                                          helperText=\"Please Enter Room Number\"\n                                          fullWidth\n                                          />\n                                  </div>\n                              </div>\n                          </div>\n                          <div className=\"modal-box-footer d-flex flex-row jr-featured-content-right\">\n                              <Button onClick={RoomModalClose} color=\"secondary\" variant=\"contained\" className=\"jr-btn text-white\">\n                              Cancel \n                              </Button>\n                              <Button onClick={RoomModalSave} color=\"primary\" variant=\"contained\" className=\"jr-btn text-white\">\n                              Save\n                              </Button>\n                          </div>\n                      </Modal>\n                      <Modal key=\"floor-save\" className=\"modal-box\" toggle={FloorModalClose} isOpen={floor_open}>\n                        <ModalHeader>{floor_id ? 'Modify floor':'Add Floor'}\n                            <IconButton className=\"text-grey\"\n                                        onClick={FloorModalClose}>\n                                <CloseIcon/>\n                            </IconButton>\n                        </ModalHeader>\n                        <div className=\"modal-box-content\">\n                            <div className=\"row\">\n                                <div className=\"col-xl-3 col-lg-4 col-md-5 col-12\">\n                                      <div className=\"jr-card pb-2\">\n                                          <div className=\"jr-card-thumb\">\n                                              <img className=\"card-img-top img-fluid\" alt=\"products\" src={floor_upload_img_url}/>\n                                          </div>\n                                          <input type=\"file\" id=\"upload_img\" accept=\"image/*\" \n                                              name=\"upload_img\" style={{display: \"none\"}}\n                                              onChange={(event) => changeFloorUploadImg(event)}/>\n\n                                          <div className=\"jr-card-social text-right\">\n                                              <Fab className=\"jr-fab-btn bg-secondary text-white jr-btn-fab-xs mb-3\" \n                                                  onClick={(e)=>{document.getElementById('upload_img').click()}}>\n                                                  <i className=\"zmdi zmdi-cloud-upload zmdi-hc-1x\"/>\n                                              </Fab>\n                                          </div>\n                                      </div>\n                                </div>\n                                <div className=\"col-xl-9 col-lg-8 col-md-7 col-12\">\n                                <div className=\"row\">\n                               \n                                <div className=\"col-md-6 col-12\">\n                                    <TextField \n                                        id=\"floor_name\"\n                                        label=\"Floor\"\n                                        value={floor_name}\n                                        onChange={(event) => setFloorName(event.target.value)}\n                                        margin=\"normal\"\n                                        helperText=\"Please Enter Floor\"\n                                        fullWidth\n                                        />\n                                </div>\n                              \n                                <div className=\"modal-box-footer d-flex flex-row jr-featured-content-right\">\n                                    <Button onClick={FloorModalClose} color=\"secondary\" variant=\"contained\" className=\"jr-btn text-white\">\n                                    Cancel\n                                    </Button>\n                                    <Button onClick={FloorModalSave} color=\"primary\" variant=\"contained\" className=\"jr-btn text-white\">\n                                    Save\n                                    </Button>\n                                </div>\n                                </div>\n                                </div>\n                            </div>\n                        </div>\n                        \n                      </Modal>\n                    </div>\n                  </div>\n              </div>  \n          </div>\n          ) :\n          (\n            <div className=\"loader-view\"\n                    style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\n                <CircularProgress/>\n            </div>\n          )}\n\n          <SweetAlert show={goback}\n              warning\n              confirmBtnText=\"Go Back\"\n              confirmBtnBsStyle=\"danger\"\n              cancelBtnBsStyle=\"default\"\n              title=\"Warning!\"\n              onConfirm={() => History.go(-1)}\n          >                \n          Data not cached, so you can not view this page.\n          </SweetAlert>\n\n    </div>\n  );\n};\n\nexport default FloorInfo;\n","import React from 'react';\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\n\nconst getDisplayString = (sub) => {\n    const arr = sub.split(\"-\");\n    if (arr.length > 1) {\n        return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\n    } else {\n        return sub.charAt(0).toUpperCase() + sub.slice(1)\n    }\n\n};\nconst getUrlString = (path, sub, index) => {\n    if (index === 0) {\n        return '/';\n    } else {\n        return '/' + path.split(sub)[0] + sub;\n    }\n};\n\nconst ContainerHeader = ({title, match,project_name,room_number}) => {\n    let url_name = [];\n    const path = match.url.substr(1);\n    const subPath = path.split('/');\n    subPath.map((sub,index)=>{\n        if(sub===''){\n            subPath.splice(index,1)\n        }\n        if(subPath[index-1] ==='live')\n            url_name[index] = project_name?project_name:''\n        else if(subPath[index-2] ==='live')\n            url_name[index] = room_number?room_number:''\n        else\n            url_name[index] = sub\n    })\n    return (\n        <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\n            <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\n\n            <Breadcrumb className=\"mb-0\" tag=\"nav\">\n                {subPath.map((sub, index) => {\n                        if(index ==0) return;\n                        return <BreadcrumbItem active={subPath.length === index + 1}\n                                            tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\n                                            href={getUrlString(path, sub, index)}>{getDisplayString(url_name[index])}</BreadcrumbItem>\n                    }\n                )}\n            </Breadcrumb>\n        </div>\n    )\n};\n\nexport default ContainerHeader;\n\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z\"\n}), 'PlaylistAdd');\n\nexports.default = _default;","import React, {useState} from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\nconst CardEditMenu = (props) => {\n    \n    const [menuState, setMenuState] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(undefined);\n    const {selectedData, onSelectRow, menu_rows} = props;\n    const options = menu_rows ? menu_rows : ([\n        {content: 'View', id: 0},\n        {content: 'Modify', id: 1},\n        {content: 'Delete', id: 2}\n    ]);\n\n    const onOptionMenuSelect = event => {\n      setMenuState(true);\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleRequestClose = () => {\n      setMenuState(false);\n    };\n\n    return (\n        <div>\n            <IconButton onClick={onOptionMenuSelect}>\n            <i className=\"zmdi zmdi-more-vert\"/></IconButton>\n\n            <Menu \n                anchorEl={anchorEl}\n                open={menuState}\n                onClose={handleRequestClose}\n                key={selectedData.id}\n                MenuListProps={{\n                    style: {\n                        width: 150,\n                        paddingTop: 0,\n                        paddingBottom: 0\n                    },\n                }}>\n\n                {options.map(option =>\n                    <MenuItem key={selectedData + \"-\" + option.content} \n                        onClick={() => {\n                            handleRequestClose();\n                            onSelectRow(selectedData, option.id);\n                        } }>\n                        {option.content}\n                    </MenuItem>\n                )}\n            </Menu>\n\n        </div>\n    );\n};\n\nexport default CardEditMenu;\n"],"sourceRoot":""}