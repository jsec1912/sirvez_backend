{"version":3,"sources":["app/routes/TaskManager/routes/MyTasks/main.js","components/ContainerHeader/index.js","app/routes/TaskManager/routes/data/filters.js","app/routes/TaskManager/routes/MyTasks/TaskItem.js","app/routes/TaskManager/routes/MyTasks/TaskList.js","app/routes/TaskManager/routes/MyTasks/ConversationCell.js","app/routes/TaskManager/routes/MyTasks/TaskDetail.js","app/routes/TaskManager/routes/MyTasks/index.js"],"names":["main","className","match","this","props","title","id","task","location","state","React","Component","getUrlString","path","sub","index","split","ContainerHeader","project_name","room_number","url_name","url","substr","subPath","map","splice","tag","active","length","key","href","arr","charAt","toUpperCase","slice","getDisplayString","TaskItem","SortableElement","Task","onTaskSelect","onTaskChecked","onMarkAsStart","useState","favourite","setFavourite","archived","setArchived","is_require","Checkbox","color","checked","onClick","event","value","IconButton","company_name","Avatar","alt","profile_pic","src","public_url","assign_users","item","TaskList","SortableContainer","Tasks","width","CustomScrollbars","style","height","filter","ConversationCell","conversation","first_name","last_name","Moment","created_at","format","comment","attach_file","TaskDetail","users","loader","comments","setConversation","setLabelMenu","undefined","anchorEl","setAnchorEl","userMenu","setUserMenu","editTitle","setEditTitle","description","notes","setNotes","setTitle","editNote","setEditNote","message","setMessage","created_by","find","user","setUser","me","JSON","parse","localStorage","getItem","priority","setPriority","comment_file","setCommentFile","task_img","setTaskImg","task_img_url","setTaskImgUrl","goback","History","useHistory","useEffect","pixie_room_id","pixie_data","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","file_name","Date","getTime","pop","pixie_obj","File","type","frmData","FormData","append","$http","post","base_url","then","response","status","NotificationManager","info","data","error","msg","catch","URL","createObjectURL","removeItem","handleRequestClose","handleEditTitle","onTaskUpdate","handleEditNote","submitComment","updatedConversation","concat","company_id","project_id","room_id","due_by_date","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","uploadImage","a","target","files","image","img_file_name","name","currentTarget","Menu","open","onClose","MenuListProps","MenuItem","building_name","floor_name","Input","fullWidth","multiline","placeholder","onChange","defaultValue","dangerouslySetInnerHTML","__html","replace","accept","display","variant","e","document","getElementById","click","Fab","setItem","push","pathname","img_id","img_url","img_file","saveTaskImg","maxHeight","onKeyUp","bind","evt","rows","aria-label","CircularProgress","show","warning","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onConfirm","go","styles","theme","root","zIndex","overflow","appFrame","position","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawerPaper","drawerHeader","alignItems","justifyContent","padding","mixins","toolbar","content","flexGrow","spacing","marginTop","breakpoints","up","contentShift","nowuser","projectId","roomId","customerId","room","panelOpen","end_enable","setLoader","allTasks","setAllTasks","setTasks","setUsers","customers","setCustomers","projects","setProjects","user_id","setUserId","customer_id","setCustomerId","setProjectId","selectedSectionId","setSelectedSectionId","allSelect","setAllSelect","useSelector","settings","drawerState","setDrawerState","currentTask","setCurrentTask","setGoback","taskMenu","setTaskMenu","init_Data","get","params","tasks","setTasksFilter","s_id","u_id","c_id","p_id","selectProject","csvReport","headers","label","filename","TaskMenuClose","TaskSideBar","isMobile","IntlMessages","drawerInner","Button","user_type","TaskMenuClick","is_upload","front_cover","back_cover","doc","jsPDF","internal","pageSize","getWidth","getHeight","y0","img","Image","img_ext","addImage","setFontSize","text","logo_img","survey_start_date","site_name","addPage","shift","save","printTask","Divider","List","list","ListItem","TextField","select","margin","option","button","ListItemIcon","ListItemText","primary","filters","icon","onToggleDrawer","Accordion","defaultExpanded","AccordionSummary","expandIcon","indexOf","task_panel","stopPropagation","Typography","noWrap","AccordionDetails","Drawer","is_complete","useDragHandle"],"mappings":"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","file":"static/js/61.a3d75db2.chunk.js","sourcesContent":["import React from 'react';\r\nimport ContainerHeader from 'components/ContainerHeader/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport Task from './index.js'\r\n\r\nclass main extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <ContainerHeader match={this.props.match} title={<IntlMessages id=\"sidebar.taskmanager.mytasks\"/>}/>\r\n                <Task\r\n                    task = {this.props.location.state?this.props.location.state.task:null}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default main;","import React from 'react';\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\n\nconst getDisplayString = (sub) => {\n    const arr = sub.split(\"-\");\n    if (arr.length > 1) {\n        return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\n    } else {\n        return sub.charAt(0).toUpperCase() + sub.slice(1)\n    }\n\n};\nconst getUrlString = (path, sub, index) => {\n    if (index === 0) {\n        return '/';\n    } else {\n        return '/' + path.split(sub)[0] + sub;\n    }\n};\n\nconst ContainerHeader = ({title, match,project_name,room_number}) => {\n    let url_name = [];\n    const path = match.url.substr(1);\n    const subPath = path.split('/');\n    subPath.map((sub,index)=>{\n        if(sub===''){\n            subPath.splice(index,1)\n        }\n        if(subPath[index-1] ==='live')\n            url_name[index] = project_name?project_name:''\n        else if(subPath[index-2] ==='live')\n            url_name[index] = room_number?room_number:''\n        else\n            url_name[index] = sub\n    })\n    return (\n        <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\n            <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\n\n            <Breadcrumb className=\"mb-0\" tag=\"nav\">\n                {subPath.map((sub, index) => {\n                        if(index ==0) return;\n                        return <BreadcrumbItem active={subPath.length === index + 1}\n                                            tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\n                                            href={getUrlString(path, sub, index)}>{getDisplayString(url_name[index])}</BreadcrumbItem>\n                    }\n                )}\n            </Breadcrumb>\n        </div>\n    )\n};\n\nexport default ContainerHeader;\n\n","export default [\r\n\r\n  {\r\n    'id': 1,\r\n    'handle': 'starred',\r\n    'title': 'Starred',\r\n    'icon': 'star'\r\n  },\r\n  {\r\n    'id': 2,\r\n    'handle': 'Priority',\r\n    'title': 'Snagging',\r\n    'icon': 'info'\r\n  },\r\n  {\r\n    'id': 3,\r\n    'handle': 'Todo',\r\n    'title': 'Todo',\r\n    'icon': 'calendar'\r\n  },\r\n  {\r\n    'id': 4,\r\n    'handle': 'Done',\r\n    'title': 'Done',\r\n    'icon': 'check'\r\n  }\r\n];\r\n","import React, {useState} from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport {SortableElement, SortableHandle} from 'react-sortable-hoc';\r\nimport {public_url} from \"config\";\r\n// This can be any component you want\r\n\r\nconst TaskItem = SortableElement(({Task, onTaskSelect, onTaskChecked, onMarkAsStart}) => {\r\n    const [favourite, setFavourite] = useState(Task.favourite == '1')\r\n    const [archived, setArchived] = useState(Task.archived == '1')\r\n\r\n    return (\r\n        <div className={`module-list-item ${Task.is_require ? 'bg-grey':''}`}>\r\n            <div className=\"module-list-icon\">\r\n                <Checkbox color=\"primary\"\r\n                    checked={Task.archived == '1'}\r\n                    onClick={(event) => {\r\n                        Task.archived = Task.archived == '1' ? '0' : '1'\r\n                        setArchived(!archived)\r\n                        onTaskChecked(Task)\r\n                    }}\r\n                    value=\"SelectTask\"\r\n                />\r\n\r\n                <IconButton className=\"icon-btn\" onClick={() => {\r\n                    Task.favourite = Task.favourite == '1' ? '0' : '1'\r\n                    onMarkAsStart(Task, Task.favourite)\r\n                    setFavourite(!favourite)\r\n                }}>\r\n                    {Task.favourite == '1' ?\r\n                        <i className=\"zmdi zmdi-star text-warning\"/> :\r\n                        <i className=\"zmdi zmdi-star-outline text-warning\"/>\r\n                    }\r\n                </IconButton>\r\n            </div>\r\n            <div className=\"module-list-info mr-2\" onClick={() => {\r\n                onTaskSelect(Task);\r\n            }}>\r\n                <div className='row'>\r\n                    <div className=\"module-todo-content col-8 col-sm-6 col-md-6\">\r\n                        <div className={`subject ${Task.archived=='1' && 'text-muted text-strikethrough'}`}>\r\n                            {Task.task}\r\n                        </div>\r\n                        <div className=\"manage-margin\">    \r\n                            <div className={`badge text-white bg-light-blue darken-2`}>{Task.company_name}</div>\r\n                            <div className={`badge text-white bg-green darken-1`}>{Task.project_name}</div>\r\n                            <div className={`badge text-white bg-primary darken-1`}>{Task.room_number}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"module-todo-right col-4 col-sm-5 col-md-6\">\r\n                        <div className=\"d-flex flex-row-reverse text-right\">\r\n                            <Avatar alt={Task.profile_pic}\r\n                                src={public_url + 'upload/img/' + Task.profile_pic}/>\r\n                            {Task.assign_users.map(item=>(\r\n                            <Avatar \r\n                            key = {item.id}\r\n                            className ='mr-2'\r\n                            alt={item.profile_pic}\r\n                                src={public_url + 'upload/img/' + item.profile_pic}/>\r\n                            ))}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n});\r\n\r\nexport default TaskItem;","import React from 'react';\r\nimport {SortableContainer, SortableElement, SortableHandle} from 'react-sortable-hoc';\r\nimport TaskItem from './TaskItem';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\nconst TaskList = SortableContainer(({Tasks, onTaskSelect, onTaskChecked, onMarkAsStart, width}) => {\r\n   \r\n    return (\r\n        <div className=\"module-list\">\r\n            <CustomScrollbars className=\"module-list-scroll scrollbar\"\r\n                              style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n                {\r\n                    (Tasks.filter(item => item.archived == '0').length > 0) && (\r\n                        <div className=\"module-list-item bg-info text-white\">\r\n                            <div className=\"module-list-icon\">\r\n                                <h2 className=\"my-0\">To Do</h2>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                {Tasks.filter(item => item.archived == '0').map((Task, index) =>\r\n                    <TaskItem key={index} index={index} Task={Task} onTaskSelect={onTaskSelect}\r\n                              onMarkAsStart={onMarkAsStart}\r\n                              onTaskChecked={onTaskChecked}/>\r\n                )}\r\n                {\r\n                    (Tasks.filter(item => item.archived == '1').length > 0) && (\r\n                        <div className=\"module-list-item bg-success text-white\">\r\n                            <div className=\"module-list-icon\">\r\n                                <h2 className=\"my-0\">Completed</h2>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                {Tasks.filter(item => item.archived == '1').map((Task, index) =>\r\n                    <TaskItem key={index} index={index} Task={Task} onTaskSelect={onTaskSelect}\r\n                              onMarkAsStart={onMarkAsStart}\r\n                              onTaskChecked={onTaskChecked}/>\r\n                )}\r\n            </CustomScrollbars>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport {public_url} from '../../../../../config'\r\nimport Moment from 'moment';\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nconst ConversationCell = ({conversation}) => {\r\n  return (\r\n    <div className=\"d-flex module-detail-item\">\r\n      <div className=\"chat-todo-avatar\">\r\n        <img className=\"rounded-circle avatar size-40\" src={`${public_url}upload/img/${conversation.profile_pic}`}\r\n             alt=\"...\"/>\r\n      </div>\r\n      <div className=\"chat-toto-info\">\r\n        <div className=\"d-flex  flex-column\">\r\n          <div className=\"name mr-2\">{`${conversation.first_name} ${conversation.last_name}`}</div>\r\n          <div className=\"time text-muted\">{Moment(conversation.created_at).format('ddd DD, YYYY, hh:mm:ss A')}</div>\r\n        </div>\r\n        <div className=\"message\">{conversation.comment}</div>\r\n      </div>\r\n      <div className=\"jr-featured-content-right\">\r\n      {\r\n        conversation.attach_file ? (\r\n          <a href = {`${public_url}upload/file/${conversation.attach_file}`}>\r\n          <IconButton className=\"icon-btn text-success\">\r\n            <i className=\"zmdi zmdi-file\"/>\r\n          </IconButton>\r\n          </a>\r\n        ) : (\r\n          <div></div>\r\n        )\r\n      }\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ConversationCell;","import React, {useState, useEffect} from 'react';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Input from '@material-ui/core/Input'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ConversationCell from './ConversationCell';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\nimport {base_url, public_url, $http} from \"config\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AttachFile from '@material-ui/icons/AttachFile';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport Resizer from 'react-image-file-resizer';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst TaskDetail = (props) => {\r\n  const {users, Task, width} = props;\r\n  const [loader, setLoader] = useState(true)\r\n  const [conversation, setConversation] = useState(props.Task.comments)\r\n  const [labelMenu, setLabelMenu] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState(undefined)\r\n  const [userMenu, setUserMenu] = useState(false)\r\n  const [editTitle, setEditTitle] = useState(false)\r\n  const [notes, setNotes] = useState(props.Task.description)\r\n  const [title, setTitle] = useState(props.Task.task)\r\n  const [editNote, setEditNote] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [user, setUser] = useState( Task.created_by > 0 ? \r\n    users.find((item) => {return (item.id == Task.created_by)}) : null)\r\n  const me = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [favourite, setFavourite] = useState(Task.favourite == '1')\r\n  const [priority, setPriority] = useState(Task.priority == '1')\r\n  const [archived, setArchived] = useState(Task.archived == '1')\r\n  const [comment_file, setCommentFile] = useState(null)\r\n  const [task_img,setTaskImg] = useState(null)\r\n  const [task_img_url,setTaskImgUrl] = useState(Task.task_img?public_url + 'upload/img/' +Task.task_img:'')\r\n  const [goback, setGoback] = useState(false)\r\n  const History = useHistory();\r\n  // console.log(props.Task.comments)\r\n  // useEffect( () => {\r\n  //   setLoader(true)\r\n  //   $http.get(`${base_url}task/getComments`, {params: {id: Task.id}})\r\n  //   .then((response) => {\r\n  //     if (response.data.comments) {\r\n  //       setConversation(response.data.comments)\r\n  //     }\r\n  //   }).catch((error) => {\r\n  //     setGoback(true)\r\n  //   })\r\n  // }, [])\r\n  useEffect(()=>{\r\n    if (localStorage.getItem('pixie_room_id')) {\r\n      let pixie_room_id = localStorage.getItem('pixie_room_id')\r\n      let pixie_data = localStorage.getItem('pixie_data')\r\n      if (Task.id == pixie_room_id) {\r\n          let arr = pixie_data.split(','),\r\n          mime = arr[0].match(/:(.*?);/)[1],\r\n          bstr = atob(arr[1]), \r\n          n = bstr.length, \r\n          u8arr = new Uint8Array(n);\r\n\r\n          while (n--) {\r\n              u8arr[n] = bstr.charCodeAt(n)\r\n          }\r\n          let file_name = JSON.parse(localStorage.getItem('user')).id + '-' + new Date().getTime() + '-' + 'pixie.' + mime.split('/').pop()\r\n          let pixie_obj = new File([u8arr], file_name, {type: mime})\r\n\r\n          const frmData = new FormData();\r\n          frmData.append('id',Task.id)\r\n          frmData.append('task_img',task_img)\r\n          $http.post(base_url + \"task/saveImage\", frmData)\r\n          .then((response) => {\r\n              if(response.status = 'success')\r\n              {\r\n                NotificationManager.info(`Task ${Task.task} is updated!`);\r\n              }\r\n              else if (response.data.status === \"error\") {\r\n                NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\r\n                });\r\n              }\r\n          }).catch((error)=>{\r\n            NotificationManager.error(error, \"Error!\", 1000, () => {\r\n            });\r\n          })\r\n          \r\n          setTaskImg(pixie_obj)\r\n\r\n          setTaskImgUrl(URL.createObjectURL(pixie_obj))\r\n      }\r\n\r\n      localStorage.removeItem('pixie_room_id')\r\n      localStorage.removeItem('pixie_id')\r\n      localStorage.removeItem('pixie_data')\r\n  }\r\n\r\n  },[])\r\n\r\n  const handleUserClick = event => {\r\n    setUserMenu(true)\r\n    setAnchorEl(event.currentTarget)\r\n  };\r\n  const handleRequestClose = () => {\r\n    setUserMenu(false)\r\n    setLabelMenu(false)\r\n  };\r\n\r\n  const _handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      submitComment();\r\n    }\r\n  };\r\n\r\n  const handleEditTitle = () => {\r\n    if (editTitle) {\r\n      Task.task = title\r\n      onTaskUpdate(Task)\r\n    }\r\n    setEditTitle(!editTitle)\r\n  };\r\n  const handleEditNote = () => {\r\n    if (editNote) {\r\n      Task.description = notes;\r\n      onTaskUpdate(Task)\r\n    }\r\n    \r\n    setEditNote(!editNote)\r\n  };\r\n  // const handleDueDateChange = (date) => {\r\n  //   // setTask({...Task, dueDate: date})\r\n  // };\r\n\r\n  // const handleChange = (event) => {\r\n  //   // setState({[event.target.name]: event.target.value});\r\n  // };\r\n\r\n  const submitComment = () => {\r\n    if (message !== '') {\r\n      const updatedConversation = conversation.concat({\r\n        'first_name': me.first_name,\r\n        'last_name': me.last_name,\r\n        'profile_pic': me.profile_pic,\r\n        'comment': message,\r\n        'created_at': new Date(),\r\n        'attach_file' : comment_file\r\n      });\r\n      setConversation(updatedConversation)\r\n      const frmData = new FormData()\r\n      frmData.append('id', Task.id)\r\n      frmData.append('message', message)\r\n      frmData.append('file', comment_file)\r\n      $http.post(`${base_url}task/commentSubmit`, frmData)\r\n      .then((response) => {\r\n        if (response.data.status === \"success\") {\r\n          setConversation(response.data.comments)\r\n          setCommentFile(null)\r\n        } else if (response.data.status === \"error\") {\r\n            NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\r\n            });\r\n        }\r\n        \r\n      }).catch((error)=>{\r\n        NotificationManager.error(error, \"Error!\", 1000, () => {\r\n        });\r\n       })\r\n      setMessage('')\r\n    }\r\n  }\r\n\r\n  const updateMessageValue = (evt) => {\r\n    setMessage(evt.target.value)\r\n  }\r\n  const onTaskUpdate = (item) => {\r\n    const frmData = new FormData();\r\n    frmData.append('id', item.id);\r\n    frmData.append('company_id', item.company_id);\r\n    //frmData.append('site_id', site_name);\r\n    frmData.append('project_id', item.project_id);\r\n    frmData.append('room_id', item.room_id);\r\n    frmData.append('task', item.task);\r\n    frmData.append('description', item.description);\r\n    frmData.append('due_by_date', item.due_by_date);\r\n    frmData.append('task_img', item.task_img);\r\n    frmData.append('priority', item.priority);\r\n    frmData.append('created_by', item.created_by);\r\n    $http.post(base_url + \"task/updateTask\", frmData)\r\n    .then((response) => {\r\n        if(response.data.status === 'success')\r\n          NotificationManager.info(`Task ${item.task} is updated!`);\r\n        else{\r\n          NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\r\n          });\r\n        }\r\n         //init_Data();\r\n    }).catch((error)=>{\r\n      NotificationManager.error(error, \"Error!\", 1000, () => {\r\n      });\r\n    })\r\n  }\r\n\r\n  const onDeleteTask = (data) => {\r\n\r\n  }\r\n  \r\n  const resizeFile = (file) => new Promise(resolve => {\r\n    Resizer.imageFileResizer(file, 500, 500, 'JPEG', 100, 0,\r\n    uri => {\r\n      resolve(uri);\r\n    },\r\n    'blob'\r\n    );\r\n  });\r\n\r\n  const uploadImage = async(event)=>{\r\n    var file = event.target.files[0]\r\n    //setTaskImgUrl(event.target.files[0].name);\r\n    const image = await resizeFile(file);\r\n    let img_file_name = file.name\r\n    file = new File([image],img_file_name,image)\r\n    setTaskImgUrl(URL.createObjectURL(file))\r\n    setTaskImg(file);\r\n  }\r\n  const saveTaskImg = ()=>{\r\n    const frmData = new FormData();\r\n    frmData.append('id',Task.id)\r\n    frmData.append('task_img',task_img)\r\n    $http.post(base_url + \"task/saveImage\", frmData)\r\n    .then((response) => {\r\n        if(response.status = 'success')\r\n        {\r\n          localStorage.setItem('isFirst', 0);\r\n          History.push({\r\n              pathname: `/app/project/sticker`,\r\n              state: {\r\n                  room_id: response.data.id,\r\n                  img_id:response.data.id,\r\n                  img_url: task_img_url,\r\n                  img_file: task_img                \r\n              },\r\n          })\r\n        }\r\n        else if (response.data.status === \"error\") {\r\n          NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\r\n          });\r\n        }\r\n    }).catch((error)=>{\r\n      NotificationManager.error(error, \"Error!\", 1000, () => {\r\n      });\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    loader ? (\r\n      <div className=\"module-detail module-list\">\r\n        <CustomScrollbars className=\"module-list-scroll scrollbar\"\r\n                          style={{height: width >= 1200 ? 'calc(100vh - 335px)' : 'calc(100vh - 311px)'}}>\r\n\r\n          <div className=\"module-detail-item module-detail-header\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-6 col-md-8 col-12\">\r\n                <div className=\"d-flex align-items-center\">\r\n                  <div className=\"user-name mr-md-4 mr-2\"\r\n                       onClick={handleUserClick}>\r\n\r\n                    {user === null ? <h4 className=\"mb-0 mouse pointer\">Assign User </h4> :\r\n                      <div className=\"d-flex align-items-center pointer\">\r\n                        <Avatar className=\"mr-2\" src={public_url + 'upload/img/' + user.profile_pic} alt={user.first_name}/>\r\n                        <h4 className=\"mb-0\">{user.first_name} {user.last_name}</h4>\r\n                      </div>}\r\n                  </div>\r\n                  {/* <DatePicker className=\"module-date\"\r\n                    value={Task.dueDate}\r\n                    invalidLabel=\"Due Date\"\r\n                    onChange={this.handleDueDateChange.bind(this)}\r\n                    animateYearScrolling={false}\r\n                    leftArrowIcon={<i className=\"zmdi zmdi-arrow-back\"/>}\r\n                    rightArrowIcon={<i className=\"zmdi zmdi-arrow-forward\"/>}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <IconButton className=\"icon-btn\">\r\n                          <i className=\"zmdi zmdi-calendar\"/>\r\n                        </IconButton>\r\n                      ),\r\n                    }}\r\n                  /> */}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-6 col-md-4 col-6\">\r\n                <div\r\n                  className=\"d-flex flex-sm-row-reverse justify-content-between justify-content-sm-start\">\r\n                  <Menu\r\n                    id=\"label-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={userMenu}\r\n                    onClose={handleRequestClose}\r\n\r\n                    MenuListProps={{\r\n                      style: {\r\n                        width: 180,\r\n                      },\r\n                    }}>\r\n\r\n                    {users.map((user, index) =>\r\n                      <MenuItem key={index} value={user.id} onClick={() => {\r\n                        handleRequestClose();\r\n                        Task.created_by = user.id;\r\n                        onTaskUpdate(Task)\r\n                        setUser(user)\r\n                      }}>\r\n                        <div className=\"d-flex user-name manage-margin align-items-center\">\r\n                          <Avatar src={public_url + 'upload/img/' + user.profile_pic} \r\n                            alt={user.first_name}/>\r\n                          <h4>{user.first_name} {user.last_name}</h4>\r\n                        </div>\r\n                      </MenuItem>\r\n                    )}\r\n\r\n                  </Menu>\r\n\r\n                  {/* <IconButton className=\"icon-btn\" onClick={() => {\r\n                    onDeleteTask(Task);\r\n                  }}>\r\n                    <i className=\"zmdi zmdi-delete\"/>\r\n                  </IconButton> */}\r\n\r\n                  <IconButton className=\"icon-btn\" onClick={() => {\r\n                    Task.favourite = Task.favourite == '1' ? '0' : '1';\r\n                    setFavourite(!favourite)\r\n                    onTaskUpdate(Task);\r\n                  }}>\r\n                    {Task.favourite == '1' ?\r\n                    <span className=\"size-30 rounded-circle text-green border-green\">\r\n                      <i className=\"zmdi zmdi-star text-warning\"/> \r\n                    </span>\r\n                      :\r\n                    <span className=\"size-30 rounded-circle text-green border-green\">\r\n                      <i className=\"zmdi zmdi-star-outline text-warning\"/>\r\n                    </span>\r\n                    }\r\n\r\n                  </IconButton>\r\n\r\n                  <IconButton className=\"icon-btn\" onClick={() => {\r\n                    Task.priority = Task.priority == '1' ? '0' : '1';\r\n                    setPriority(!priority)\r\n                    onTaskUpdate(Task);\r\n                  }}>\r\n                    {Task.priority == '1' ?\r\n                    <span className=\"size-30 rounded-circle text-green border-green\">\r\n                      <i className=\"zmdi zmdi-info\"/>\r\n                    </span>\r\n                       :\r\n                    <span className=\"size-30 rounded-circle text-green border-green\">\r\n                      <i className=\"zmdi zmdi-info-outline\"/>\r\n                    </span>\r\n                    }\r\n\r\n                  </IconButton>\r\n                  <IconButton className=\"icon-btn\" onClick={() => {\r\n                    Task.archived = Task.archived == '1' ? '0' : '1';\r\n                    setArchived(!archived)\r\n                    onTaskUpdate(Task)\r\n                  }}>\r\n                    {Task.archived == '1' ?\r\n                      <span className=\"border-2 size-30 rounded-circle text-green border-green\">\r\n                        <i className=\"zmdi zmdi-check\"/></span> :\r\n                      <span className=\"border-2 size-30 w-2 rounded-circle text-muted border-grey\">\r\n                        <i className=\"zmdi zmdi-check\"/></span>\r\n                    }\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"module-detail-item\">\r\n\r\n            <div className=\"labels mb-4\">\r\n              {/* {labels.map((label, index) => {\r\n                return (Task.labels).includes(label.id) && <div key={index}\r\n                                                                className={`badge text-white bg-${label.color}`}>{label.title}</div>\r\n              })} */}\r\n              <div className=\"badge text-white badge-primary\">{Task.company_name}</div>\r\n              <div className=\"badge text-white badge-secondary\">{Task.project_name}</div>\r\n              {/* <div className=\"badge text-white badge-success\">{Task.site_name}</div> */}\r\n              <div className=\"badge text-white badge-danger\">{Task.building_name}</div>\r\n              <div className=\"badge text-white badge-warning\">{Task.floor_name}</div>\r\n              <div className=\"badge text-white badge-info\">{Task.room_number}</div>\r\n            </div>\r\n\r\n            <div className=\"form-group d-flex align-items-center mb-0\">\r\n              <IconButton className=\"icon-btn p-1\">\r\n                <i className=\"zmdi zmdi-menu\"/>\r\n              </IconButton>\r\n\r\n              {editTitle ? <div className=\"d-flex align-items-center w-100\">\r\n                  <div className=\"col\">\r\n                    <Input\r\n                      fullWidth\r\n                      multiline className=\"task-title\"\r\n                      id=\"required\"\r\n                      placeholder=\"Title\"\r\n                      onChange={(event) => setTitle(event.target.value)}\r\n                      defaultValue={title}/>\r\n                  </div>\r\n\r\n                  <IconButton onClick={handleEditTitle}>\r\n                    <i className=\"zmdi zmdi-check\"/>\r\n                  </IconButton>\r\n                </div> :\r\n                <div className=\"d-flex align-items-center w-100\">\r\n                  <div className=\"task-title col\">\r\n                    {title}\r\n                  </div>\r\n                  <IconButton className=\"icon-btn\" onClick={handleEditTitle}>\r\n                    <i className=\"zmdi zmdi-edit\"/>\r\n                  </IconButton>\r\n\r\n                </div>}\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n          <div className=\"module-detail-item mb-4\">\r\n            {editNote ? <div className=\"d-flex align-items-center w-100\">\r\n                <Input\r\n                  fullWidth\r\n                  id=\"required\"\r\n                  multiline\r\n                  placeholder=\"Note\"\r\n                  onChange={(event) => setNotes(event.target.value)}\r\n                  defaultValue={notes}/>\r\n\r\n                <IconButton className=\"icon-btn\" onClick={handleEditNote}>\r\n                  <i className=\"zmdi zmdi-check\"/>\r\n                </IconButton>\r\n              </div> :\r\n              <div className=\"d-flex align-items-center w-100\">\r\n                <div className=\"task-des col px-0\"\r\n                dangerouslySetInnerHTML={{__html: notes ? notes.replace(/\\n/g, '<br>') : ''}}/>\r\n               <IconButton className=\"icon-btn\" onClick={handleEditNote}>\r\n                  <i className=\"zmdi zmdi-edit\"/>\r\n                </IconButton>\r\n              </div>}\r\n          </div>\r\n          <div className=\"bg-primary text-center w-100 mt-4 mb-4\">\r\n              <input type=\"file\" id=\"upload_doc\" \r\n                  accept=\"image/*\" \r\n                  name=\"upload_doc\" style={{display: \"none\"}}\r\n                  onChange={(event) => {\r\n                      uploadImage(event)\r\n                  }}/>\r\n                <IconButton className=\"text-grey\"\r\n                  variant=\"contained\" onClick={(e)=>{document.getElementById('upload_doc').click()}}>\r\n                  <i className=\"zmdi zmdi-camera zmdi-hc-2x animated infinite pulse\"/>\r\n              </IconButton>\r\n              {/* <h2>{TaskImgUrl }</h2> */}\r\n          </div>\r\n          {task_img_url?\r\n          <div className=\"col-12\">\r\n            <div className=\"jr-card pb-2\">\r\n                <div className=\"jr-card-thumb\">\r\n                    <img className=\"card-img-top img-fluid\" alt=\"products\" src={task_img_url}/>\r\n                </div>\r\n                \r\n                <div className=\"jr-card-social text-center\">\r\n                    <div className = \"row\">\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-6\">\r\n                            <Fab className=\"jr-fab-btn bg-light-blue accent-2 text-white\" \r\n                                onClick = {() => saveTaskImg()}\r\n                                >\r\n                                <i className=\"zmdi zmdi-puzzle-piece zmdi-hc-2x\"/>\r\n                            </Fab>\r\n                        </div>\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-6\">\r\n                            <Fab className=\"jr-fab-btn bg-red accent-2 text-white\"  \r\n                                onClick = {()=>{setTaskImg(null)\r\n                                    setTaskImgUrl('')}}\r\n                                        >\r\n                                <i className=\"zmdi zmdi-delete zmdi-hc-2x\"/>\r\n                            </Fab>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n          :null\r\n          }\r\n\r\n          <div className=\"module-detail-item\">\r\n            <h3>Comments</h3>\r\n          </div>\r\n          {conversation.map((item, index) =>\r\n            <ConversationCell key={index} conversation={item}/>\r\n          )}\r\n\r\n\r\n        </CustomScrollbars>\r\n\r\n        <div className=\"chat-main-footer todo-main-footer\">\r\n          <div className=\"d-flex flex-row align-items-center\" style={{maxHeight: 61}}>\r\n            <div className=\"col\">\r\n              <div className=\"form-group\">\r\n                <textarea className=\"border-0 form-control chat-textarea\"\r\n                            id=\"required\"\r\n                            onKeyUp={_handleKeyPress.bind(this)}\r\n                            onChange={updateMessageValue.bind(this)}\r\n                            value={message}\r\n                            rows={2}\r\n                            placeholder=\"Type and hit enter to send message\"/>\r\n              </div>\r\n            </div>\r\n            <div className=\"chat-sent\">\r\n              <input type=\"file\" id=\"upload_doc\" \r\n                  accept=\"image/*\" \r\n                  name=\"upload_doc\" style={{display: \"none\"}}\r\n                  onChange={(event) => {\r\n                      setCommentFile(event.target.files[0]);\r\n                  }}/>\r\n\r\n              <IconButton\r\n                onClick={(e) => document.getElementById(\"upload_doc\").click()}\r\n                aria-label=\"Send message\"\r\n                className={comment_file == null ? `` : `text-success`}>\r\n                <AttachFile/>\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={() => {submitComment()}}\r\n                aria-label=\"Send message\">\r\n                <i className=\"zmdi  zmdi-mail-send\"/>\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n\r\n    ):(\r\n      \r\n      <div className=\"loader-view\"\r\n        style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n        <CircularProgress/>\r\n        <SweetAlert show={goback}\r\n            warning\r\n            confirmBtnText=\"Go Back\"\r\n            confirmBtnBsStyle=\"danger\"\r\n            cancelBtnBsStyle=\"default\"\r\n            title=\"Warning!\"\r\n            onConfirm={() => History.go(-1)}\r\n        >                \r\n        Data not cached, so you can not view this page.\r\n        </SweetAlert>\r\n        <NotificationContainer/>\r\n      </div>\r\n    )\r\n    \r\n  );\r\n}\r\n\r\nexport default TaskDetail;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport filters from '../data/filters';\r\nimport TaskList from './TaskList';\r\nimport TaskDetail from './TaskDetail';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {base_url,public_url, $http} from \"config\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { jsPDF } from \"jspdf\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport { AccordionSummary, AccordionDetails, AccordionActions } from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      zIndex: 1,\r\n      overflow: 'hidden',\r\n    },\r\n    appFrame: {\r\n      position: 'relative',\r\n      display: 'flex',\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n    appBar: {\r\n      position: 'absolute',\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginLeft: 12,\r\n      marginRight: 20,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      height: '100%',\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      width: '100%',\r\n      marginLeft: -drawerWidth,\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginTop: 56,\r\n      [theme.breakpoints.up('sm')]: {\r\n        content: {\r\n          height: 'calc(100% - 64px)',\r\n          marginTop: 64,\r\n        },\r\n      },\r\n    },\r\n    contentShift: {\r\n      marginLeft: 0,\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n  });\r\n\r\nconst Task = (props) => {\r\n    const nowuser = JSON.parse(localStorage.getItem(\"user\"));\r\n    const {projectId, roomId, customerId,room,task,panelOpen,end_enable} = props\r\n    const [searchTask, setSearchTask] = useState('');\r\n    const [loader, setLoader] = useState(false);\r\n    const [allTasks, setAllTasks] = useState([]);\r\n    const [Tasks, setTasks] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [customers, setCustomers] = useState([]);\r\n    const [projects, setProjects] = useState([]);\r\n    const [user_id, setUserId] = useState(0);\r\n    const [customer_id, setCustomerId] = useState(0);\r\n    const [project_id, setProjectId] = useState(0);\r\n    const [selectedSectionId, setSelectedSectionId] = useState(\"\");\r\n    const [allSelect, setAllSelect] = useState(1);\r\n    const {width} = useSelector(({settings}) => settings);\r\n    const [drawerState, setDrawerState] = useState(false);\r\n    const [currentTask, setCurrentTask] = useState(task?task:null);\r\n    const [goback, setGoback] = useState(false)\r\n    const [taskMenu, setTaskMenu] = useState(false)\r\n    const [anchorEl,setAnchorEl] = useState('')\r\n    const onMarkAsStart = (data, favourite) => {\r\n        const frmData = new FormData();\r\n        frmData.append('id', data.id);\r\n        frmData.append('favourite', favourite);\r\n        $http.post(base_url + \"task/setFavourite\", frmData)\r\n        .then((response) => {\r\n            if (response.data.status === \"success\") {\r\n                if (favourite) {\r\n                    NotificationManager.info(`Task ${data.task} is set to favourite one!`);\r\n                } else {\r\n                    NotificationManager.info(`Task ${data.task} is released from favourite one!`);\r\n                }\r\n                // init_Data();\r\n            } else if (response.data.status === \"error\") {\r\n                NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\r\n                });\r\n            }\r\n            \r\n        }).catch((error)=>{\r\n            NotificationManager.error(error, \"Error!\", 1000, () => {\r\n            });\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        init_Data();\r\n    }, []);\r\n    const History = useHistory();\r\n    const init_Data = () => {\r\n        $http.get(base_url + \"task/taskList\", {params: { project_id:projectId,room_id:roomId, customer_id: customerId}})\r\n        .then((response) => {\r\n            //console.log(response.data.tasks)\r\n            setAllTasks(response.data.tasks)\r\n            setTasksFilter(selectedSectionId, user_id, customer_id, project_id, response.data.tasks)\r\n            setUsers(response.data.users)\r\n            setCustomers(response.data.customers)\r\n            setProjects(response.data.projects)\r\n            setCustomerId(response.data.customerId)\r\n            setProjectId(projectId)\r\n            setLoader(true)\r\n        }).catch((error) => {\r\n            setGoback(true)\r\n          })\r\n    }\r\n\r\n    \r\n    const addTask=()=>{\r\n        if(nowuser.user_type ==6 && end_enable =='0') {\r\n            NotificationManager.error(\"You can't add new task!\", \"Error!\", 1000, () => {\r\n            });\r\n            return\r\n        }\r\n        //History.push('/app/task-manager/add-new');\r\n        History.push({\r\n            pathname: '/app/task-manager/add-new',\r\n            state: {\r\n                room_id: roomId,\r\n                project_id: project_id,\r\n                customer_id: customer_id\r\n            },\r\n        })\r\n\r\n    }\r\n    const setTasksFilter = (s_id, u_id, c_id, p_id, tasks = allTasks) => {\r\n        if (s_id == undefined) s_id = ''\r\n        if (u_id == undefined) u_id = 0\r\n        if (c_id == undefined) c_id = 0\r\n        if (p_id == undefined) p_id = 0\r\n        //setCurrentTask(null)\r\n        if (s_id || u_id || c_id || p_id) {\r\n            setAllSelect(0)\r\n        } else {\r\n            setAllSelect(1)\r\n        }\r\n        setTasks(tasks.filter(Task => {\r\n            return ((s_id === '') \r\n                || (s_id === 1 && Task.favourite === '1') \r\n                || (s_id === 2 && Task.priority === '1') \r\n                || (s_id === 3 && Task.archived !== '1')\r\n                || (s_id === 4 && Task.archived === '1'))\r\n            && ((u_id == 0 && Task.created_by > 0) \r\n                || (u_id > 0 && Task.created_by == u_id))\r\n            && ((c_id == 0 && Task.company_id > 0) \r\n                ||(c_id > 0 && Task.company_id == c_id))\r\n            && ((p_id == 0 && Task.project_id > 0) \r\n                || (p_id > 0 && Task.project_id == p_id))\r\n        }))\r\n    }\r\n\r\n    const getNavFilters = () => {\r\n        return filters.map((filter, index) =>\r\n            <li key={index} onClick={() => {\r\n                setSelectedSectionId(filter.id)\r\n                setTasksFilter(filter.id, user_id, customer_id, project_id)\r\n            }}>\r\n                <span className={`jr-link ${filter.id === selectedSectionId ? 'active' : ''}`}>\r\n                    <i className={`zmdi zmdi-${filter.icon}`}/>\r\n                    <span>{filter.title}</span>\r\n                </span>\r\n            </li>\r\n        )\r\n    }\r\n    const selectUser=(id)=>{\r\n        setUserId(id)\r\n        setTasksFilter(selectedSectionId, id, customer_id, project_id)\r\n    }\r\n    const selectCustomer=(id)=>{\r\n        setCustomerId(id)\r\n        setTasksFilter(selectedSectionId, user_id, id, project_id)\r\n    }\r\n    const selectProject=(id)=>{\r\n        setProjectId(id)\r\n        setTasksFilter(selectedSectionId, user_id, customer_id, id)\r\n    }\r\n    const printTask = ()=>{\r\n        \r\n        var is_upload = nowuser.is_upload >= 0?nowuser.is_upload:1;\r\n        var front_cover = nowuser.front_cover\r\n        var back_cover = nowuser.back_cover\r\n        var doc = new jsPDF('p', 'pt', 'letter');\r\n        var width = doc.internal.pageSize.getWidth();\r\n        var height = doc.internal.pageSize.getHeight();\r\n        var y0 = 200\r\n        var y0 = 200\r\n        var img = new Image();\r\n        var img_ext = '';\r\n        if(is_upload && front_cover){\r\n            //img.src = '/pdf_front.png';\r\n            img.src = public_url + 'upload/img/' + front_cover\r\n            doc.addImage(img, 'png', 0, 0, width, height);\r\n            doc.setFontSize(30);\r\n            doc.text('Scope of works:', 250, y0);\r\n            if(room){\r\n                img.src = public_url + 'upload/img/' + room.logo_img \r\n                img_ext = room.logo_img .split('.').pop()\r\n                doc.addImage(img, img_ext, 250, y0+30, 200, 130);\r\n                y0 += 200\r\n                doc.setFontSize(12);\r\n                doc.text(\"Client: \", 250, y0);\r\n                doc.text(room.company_name+'', 350, y0);\r\n                doc.text(\"Project Title: \", 250, y0+30);\r\n                doc.text(room.project_name+'', 350, y0+30);\r\n                doc.text(\"Room Number: \", 250, y0+60);\r\n                doc.text(room.room_number+'', 350, y0+60);\r\n                doc.text(\"Sirvey Date: \", 250, y0+90);\r\n                doc.text(room.survey_start_date+'', 350, y0+90);\r\n                doc.text(\"site Name: \", 250, y0+120);\r\n                doc.text(room.site_name+'', 350, y0+120);\r\n            }\r\n            doc.addPage();\r\n        }\r\n            y0 =80\r\n             doc.setFontSize(30);\r\n            doc.text(\"Task List \", 250, y0);\r\n            y0+=50\r\n            doc.setFontSize(13);\r\n            doc.text('-   Tasks', 50, y0);\r\n            y0 = y0+30\r\n            doc.setFontSize(11);\r\n            doc.text('No', 70, y0);\r\n            doc.text('Task', width/6, y0);\r\n            doc.text('Description', width/2, y0);\r\n            y0 = y0+20\r\n            let shift = 0;\r\n            Tasks.map((task,index)=>{\r\n                if(y0+20*(index-shift) > height-100)\r\n                {\r\n                    doc.addPage();\r\n                    y0 = 80;\r\n                    shift = index;\r\n                }\r\n                doc.text(index+1+'', 70, y0+20*(index-shift));\r\n                doc.text(task.task+'', width/6, y0+20*(index-shift));\r\n                doc.text(task.description+'', width/2, y0+20*(index-shift));\r\n            })\r\n        if(is_upload && back_cover){\r\n        doc.addPage();\r\n            //img.src = '/pdf_back.png';\r\n            img.src = public_url + 'upload/img/' + back_cover\r\n            doc.addImage(img, 'png', 0, 0, width, height);\r\n        }\r\n        doc.save(\"TaskList.pdf\");\r\n\r\n    }\r\n    const exportTask = ()=>{\r\n        document.getElementById('exportTasks').click()\r\n    }\r\n    const task_headers = [\r\n        { label: \"Task Id\", key: \"id\" },\r\n        { label: \"Task Title\", key: \"task\" },\r\n        { label: \"Task Description\", key: \"description\" },\r\n        { label: \"Customer\", key: \"company_name\" },\r\n        { label: \"Site\", key: \"site_name\" },\r\n        { label: \"Room Number\", key: \"room_number\" },\r\n        { label: \"Assign to\", key: \"assign_to\" },\r\n        { label: \"Comments(Number)\", key: \"comment_number\" },\r\n        { label: \"Comment1\", key: \"comment1\" },\r\n        { label: \"Comment1_date\", key: \"comment1_date\" },\r\n        { label: \"Comment1_user\", key: \"comment1_user\" },\r\n        { label: \"Comment2\", key: \"comment2\" },\r\n        { label: \"Comment2_date\", key: \"comment2_date\" },\r\n        { label: \"Comment2_user\", key: \"comment2_user\" },\r\n        { label: \"Comment3\", key: \"comment3\" },\r\n        { label: \"Comment3_date\", key: \"comment3_date\" },\r\n        { label: \"Comment3_user\", key: \"comment3_user\" },\r\n    ];\r\n    const csvReport = {\r\n        data: Tasks,\r\n        headers: task_headers,\r\n        filename: 'Task_export.csv'\r\n      };\r\n    const TaskMenuClick = (event) => {\r\n        setTaskMenu(true)\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const TaskMenuClose = () => {\r\n        setTaskMenu(false)\r\n      }\r\n\r\n    const TaskSideBar = (isMobile) => {\r\n    return <div className={`module-side ${styles.drawerPaper}`}>\r\n                {\r\n                    isMobile ?\r\n                    <div className=\"module-side-header\">\r\n                        <div className=\"module-logo\">\r\n                            <BrushIcon className=\"mr-2\"/>\r\n                            <span><IntlMessages id=\"sidebar.taskmanager.mytasks\"/></span>\r\n                        </div>\r\n                    </div>\r\n                    : null\r\n                }\r\n                <CSVLink \r\n                    id = \"exportTasks\"\r\n                    {...csvReport }\r\n                    style={{display: \"none\"}}                                            \r\n                >Export to CSV\r\n                </CSVLink>\r\n                <div className={`module-side-content ${styles.drawerInner}`}>\r\n                    <CustomScrollbars className=\"module-side-scroll scrollbar\"\r\n                                    style={{height: width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\r\n                   \r\n                    <div className=\"module-add-task\">\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"btn btn-primary btn-block mr-0\"\r\n                            onClick={()=>{TaskMenuClose() \r\n                                        addTask()\r\n                            }}>\r\n                            New Task\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"btn btn-primary btn-block\"\r\n                            onClick={(event)=>{TaskMenuClick(event)}}>\r\n                                Actions\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"Task-menu\"\r\n                            open={taskMenu}\r\n                            anchorEl={anchorEl}\r\n                            onClose={()=>{TaskMenuClose()}}\r\n                        >\r\n                            {/* {nowuser.user_type<6?\r\n                                <MenuItem onClick={() => {TaskMenuClose()\r\n                                    addTask()\r\n                                    }}>New Task\r\n                                </MenuItem>\r\n                            : null } */}\r\n                            \r\n                            <MenuItem onClick={()=>{TaskMenuClose() \r\n                                printTask()}}>Print\r\n                            </MenuItem>\r\n                            \r\n                            <MenuItem onClick={()=>{TaskMenuClose()\r\n                                exportTask()}}>Export\r\n                            </MenuItem>\r\n                        </Menu>\r\n                         \r\n                    </div>\r\n                    <Divider/>\r\n                    <List className={styles.list}>\r\n                        <ListItem className=\"module-nav-label\">\r\n                            <TextField\r\n                                id=\"user\"\r\n                                select\r\n                                label=\"User\"\r\n                                value={user_id}\r\n                                onChange={(event)=>selectUser(event.target.value)}\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                            >\r\n                                <MenuItem value={0}>\r\n                                    <IntlMessages id=\"Task.all\"/>\r\n                                </MenuItem>\r\n                                {users.map(option => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.first_name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </ListItem>\r\n                        {!projectId?\r\n                        ( !customerId ? \r\n                        (<div>\r\n                            <ListItem className=\"module-nav-label\">\r\n                            <TextField\r\n                                id=\"customer\"\r\n                                select\r\n                                label=\"Customer\"\r\n                                value={customer_id}\r\n                                onChange={(event)=>selectCustomer(event.target.value)}\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                            >\r\n                                <MenuItem value={0}>\r\n                                    <IntlMessages id=\"Task.all\"/>\r\n                                </MenuItem>\r\n                                {customers.map(option => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </ListItem>\r\n\r\n                        <ListItem className=\"module-nav-label\">\r\n                            <TextField\r\n                                id=\"project\"\r\n                                select\r\n                                label=\"Project\"\r\n                                value={project_id}\r\n                                onChange={(event)=>selectProject(event.target.value)}\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                            >\r\n                                <MenuItem value={0}>\r\n                                    <IntlMessages id=\"Task.all\"/>\r\n                                </MenuItem>\r\n                                {projects.map(option => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.project_name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </ListItem>\r\n                        </div> ) : (\r\n                        <ListItem className=\"module-nav-label\">\r\n                            <TextField\r\n                                id=\"project\"\r\n                                select\r\n                                label=\"Project\"\r\n                                value={project_id}\r\n                                onChange={(event)=>selectProject(event.target.value)}\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                            >\r\n                                <MenuItem value={0}>\r\n                                    <IntlMessages id=\"Task.all\"/>\r\n                                </MenuItem>\r\n                                {projects.map(option => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.project_name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </ListItem>\r\n                    )\r\n                        ):\r\n                                null\r\n                        }\r\n                        <ListItem button \r\n                            className=\"py-0\"\r\n                        onClick={() => {\r\n                            setTasks(allTasks)\r\n                            setUserId(0)\r\n                            setCustomerId(0)\r\n                            setProjectId(0)\r\n                            setSelectedSectionId('')\r\n                            setAllSelect(1)\r\n                        }\r\n                        }>\r\n                            <ListItemIcon>\r\n                                <IconButton className={`icon-btn ${allSelect === 1 ? 'text-primary' : ''}`}>\r\n                                    <i className={`zmdi zmdi-view-list zmdi-hc-fw`}></i>\r\n                                </IconButton>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"All\" className={`${allSelect === 1 ? 'text-primary' : ''}`}/>\r\n                        </ListItem>\r\n                        \r\n                        {filters.map((filter, index) =>\r\n                            <ListItem button \r\n                                className=\"py-0\"\r\n                                key={index} onClick={() => {\r\n                                setSelectedSectionId(filter.id)\r\n                                setTasksFilter(filter.id, user_id, customer_id, project_id)\r\n                            }}>\r\n                                <ListItemIcon>\r\n                                    <IconButton className={`icon-btn ${filter.id === selectedSectionId ? 'text-primary' : ''}`}>\r\n                                        <i className={`zmdi zmdi-${filter.icon}`}/>\r\n                                    </IconButton>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={filter.title} className={`${filter.id === selectedSectionId ? 'text-primary' : ''}`}/>\r\n                            </ListItem>\r\n                        )}\r\n                    </List>\r\n                    </CustomScrollbars>\r\n                </div>\r\n            </div>\r\n    };\r\n    const onSearchTask = (searchText) => {\r\n        setCurrentTask(null)\r\n        setTasks(allTasks.filter(Task => {\r\n            return ((selectedSectionId === '') || (selectedSectionId === 1 && Task.favourite === '1') \r\n                || (selectedSectionId === 2 && Task.priority === '1') || (selectedSectionId === 3 && Task.archived !== '1') \r\n                || (selectedSectionId === 4 && Task.archived === '1')) && \r\n            ((user_id === 0 && Task.created_by > 0) \r\n                || (user_id > 0 && Task.created_by == user_id)) &&\r\n            ((customer_id === 0 && Task.company_id > 0) \r\n                || (customer_id > 0 && Task.company_id == customer_id)) &&\r\n            ((project_id === 0 && Task.project_id > 0) \r\n                || (project_id > 0 && Task.project_id == project_id)) &&\r\n            ((searchText === '') \r\n                || (Task.task.toLowerCase().indexOf(searchText.toLowerCase()) > -1))\r\n        }))\r\n    };\r\n  \r\n\r\n    const onTaskChecked = (data) => {\r\n        var is_complete = 0;\r\n        is_complete = data.archived === '1' ? 1 : 0;\r\n        const frmData = new FormData();\r\n        frmData.append('id', data.id);\r\n        frmData.append('archived', is_complete);\r\n        $http.post(base_url + \"task/setCompleted\", frmData)\r\n        .then((response) => {\r\n            if (response.data.status === \"success\") {\r\n                if (is_complete) {\r\n                    NotificationManager.info(`Task ${data.task} is completed!`);\r\n                } else {\r\n                    NotificationManager.info(`Task ${data.task} is not completed!`);\r\n                }\r\n                init_Data();\r\n            } else if (response.data.status === \"error\") {\r\n                NotificationManager.error(response.data.msg, \"Error!\", 1000, () => {\r\n                });\r\n            }\r\n            \r\n        }).catch((error)=>{\r\n            NotificationManager.error(error, \"Error!\", 1000, () => {\r\n            });\r\n        })\r\n    };\r\n    \r\n    const onTaskSelect = (Task) => {\r\n       setCurrentTask(Task)\r\n    };\r\n\r\n    const onToggleDrawer = () => {\r\n        setDrawerState(!drawerState);\r\n    };\r\n\r\n    const updateSearch = (evt) => {\r\n        setSearchTask(evt.target.value);\r\n        onSearchTask(evt.target.value)\r\n    };\r\n\r\n    const navMenuClick = (e) => {\r\n        e.stopPropagation();\r\n        onToggleDrawer();\r\n    }\r\n    const task_panel=(event)=>{\r\n        if (event.currentTarget.className.indexOf('expanded') > 0) {\r\n          if(roomId)\r\n            localStorage.setItem(\"room_task\",false)\r\n          else if(projectId)\r\n            localStorage.setItem(\"pro_task\",false)\r\n        } else {\r\n          if(roomId)\r\n            localStorage.setItem(\"room_task\",true)\r\n          else if(projectId)\r\n            localStorage.setItem(\"pro_task\",true)\r\n        }\r\n      }\r\n\r\n    return (\r\n        <Accordion defaultExpanded={(projectId == null && roomId == null)||panelOpen}>\r\n            <AccordionSummary \r\n                className ='bg-primary' \r\n                expandIcon={<ExpandMoreIcon className=\"text-white size-30\"/>}\r\n                onClick={(event) => task_panel(event)}\r\n            >\r\n                <div className=\"text-white d-flex align-items-center\">\r\n                    <IconButton\r\n                    aria-label=\"open drawer\"\r\n                    onClick={(event) => navMenuClick(event)}\r\n                    className=\"d-block d-xl-none d-lg-none\"\r\n                    >\r\n                    <MenuIcon className=\"text-white size-30\"/>\r\n                    </IconButton>\r\n                    <IconButton className=\"d-none d-xl-block d-lg-block\">\r\n                    <BrushIcon className=\"text-white size-30\"/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className=\"text-white mb-0\">\r\n                        Tasks -  {Tasks.length}\r\n                    </Typography>\r\n                </div>\r\n            </AccordionSummary>\r\n            <AccordionDetails className=\"p-0\">\r\n                <div className=\"app-wrapper\">\r\n                    <div className=\"animated slideInUpTiny animation-duration-3\">\r\n                        <div className=\"app-module\">\r\n                            <div className=\"d-block d-xl-none d-lg-none\">\r\n                                <Drawer\r\n                                    open={drawerState}\r\n                                    onClose={onToggleDrawer}>\r\n                                    {TaskSideBar(1)}\r\n                                </Drawer>\r\n                            </div>\r\n                            <div className=\"app-module-sidenav d-none d-xl-flex d-lg-flex\">\r\n                                {TaskSideBar(0)}\r\n                            </div>\r\n                            <div className=\"module-box\">\r\n                                {/* <div className=\"module-box-header bg-primary text-white rounded-top\" style={{minHeight: '60px'}}>\r\n                                    \r\n                                    <IconButton className=\"drawer-btn d-block d-xl-none text-white border-right-0\" aria-label=\"Menu\"\r\n                                                onClick={onToggleDrawer}>\r\n                                        <i className=\"zmdi zmdi-menu\"/>\r\n                                    </IconButton>\r\n\r\n                                    <AppModuleHeader placeholder=\"Search Task\"\r\n                                                    onChange={updateSearch}\r\n                                                    value={searchTask}/>\r\n                                </div> */}\r\n                                { loader ?\r\n                                    currentTask === null ?\r\n                                        <div className=\"module-box-content\">\r\n                                            <div className=\"module-box-topbar d-flex align-items-center\">\r\n                                                <IconButton className=\"icon-btn\">\r\n                                                    <i className=\"zmdi zmdi-check\"/>\r\n                                                </IconButton>\r\n                                                {`${Tasks.filter(item => item.archived == '1').length} of ${Tasks.length} number of Tasks have been completed.`}\r\n                                            </div>\r\n                                            <TaskList Tasks={Tasks} \r\n                                            onMarkAsStart={onMarkAsStart}\r\n                                            width={width}\r\n                                            onTaskSelect={onTaskSelect}\r\n                                            onTaskChecked={onTaskChecked} useDragHandle={true}/>\r\n                                        </div>\r\n                                        :\r\n                                        <div className=\"module-box-content\">\r\n                                            <div className=\"module-box-topbar d-flex align-items-center\">\r\n                                                <IconButton className=\"icon-btn\"\r\n                                                            onClick={() => {\r\n                                                                setCurrentTask(null);\r\n                                                            }}>\r\n                                                    <i className=\"zmdi zmdi-arrow-back\"/>\r\n                                                </IconButton>\r\n                                                <h2 className=\"mb-0\">{`task: ${currentTask.task}`}</h2>\r\n                                            </div>\r\n                                            <TaskDetail Task={currentTask}\r\n                                                width={width}\r\n                                                users={users}\r\n                                            />\r\n                                        </div>\r\n                                :\r\n                                    <div className=\"loader-view\"\r\n                                        style={{height: width >= 1200 ? 'calc(100vh - 259px)' : 'calc(100vh - 238px)'}}>\r\n                                        <CircularProgress/>\r\n                                    </div>\r\n                                }\r\n                                <SweetAlert show={goback}\r\n                                    warning\r\n                                    confirmBtnText=\"Go Back\"\r\n                                    confirmBtnBsStyle=\"danger\"\r\n                                    cancelBtnBsStyle=\"default\"\r\n                                    title=\"Warning!\"\r\n                                    onConfirm={() => History.go(-1)}\r\n                                >                \r\n                                Data not cached, so you can not view this page.\r\n                                </SweetAlert>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AccordionDetails>\r\n\r\n          <NotificationContainer/>\r\n        </Accordion>\r\n    )\r\n};\r\n\r\nexport default Task;"],"sourceRoot":""}